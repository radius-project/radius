// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ComponentOutputResource Output resource of a component.
//
// swagger:model ComponentOutputResource
type ComponentOutputResource struct {

	// local Id
	LocalID string `json:"localId,omitempty"`

	// managed
	Managed bool `json:"managed,omitempty"`

	// output resource info
	OutputResourceInfo interface{} `json:"outputResourceInfo,omitempty"`

	// output resource type
	OutputResourceType string `json:"outputResourceType,omitempty"`

	// resource kind
	ResourceKind string `json:"resourceKind,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ComponentOutputResource) UnmarshalJSON(data []byte) error {
	var props struct {

		// local Id
		LocalID string `json:"localId,omitempty"`

		// managed
		Managed bool `json:"managed,omitempty"`

		// output resource info
		OutputResourceInfo interface{} `json:"outputResourceInfo,omitempty"`

		// output resource type
		OutputResourceType string `json:"outputResourceType,omitempty"`

		// resource kind
		ResourceKind string `json:"resourceKind,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.LocalID = props.LocalID
	m.Managed = props.Managed
	m.OutputResourceInfo = props.OutputResourceInfo
	m.OutputResourceType = props.OutputResourceType
	m.ResourceKind = props.ResourceKind
	return nil
}

// Validate validates this component output resource
func (m *ComponentOutputResource) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this component output resource based on context it is used
func (m *ComponentOutputResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ComponentOutputResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComponentOutputResource) UnmarshalBinary(b []byte) error {
	var res ComponentOutputResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
