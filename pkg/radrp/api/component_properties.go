// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ComponentProperties Properties of a component.
//
// swagger:model ComponentProperties
type ComponentProperties struct {

	// Bindings spec of the component
	Bindings interface{} `json:"bindings,omitempty"`

	// Config of the component
	Config interface{} `json:"config,omitempty"`

	// output resources
	OutputResources []ComponentOutputResource `json:"outputResources"`

	// Revision of the component
	Revision string `json:"revision,omitempty"`

	// Run spec of the component
	Run interface{} `json:"run,omitempty"`

	// Traits spec of the component
	Traits []interface{} `json:"traits"`

	// Uses spec of the component
	Uses []interface{} `json:"uses"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ComponentProperties) UnmarshalJSON(data []byte) error {
	var props struct {

		// Bindings spec of the component
		Bindings interface{} `json:"bindings,omitempty"`

		// Config of the component
		Config interface{} `json:"config,omitempty"`

		// output resources
		OutputResources []ComponentOutputResource `json:"outputResources"`

		// Revision of the component
		Revision string `json:"revision,omitempty"`

		// Run spec of the component
		Run interface{} `json:"run,omitempty"`

		// Traits spec of the component
		Traits []interface{} `json:"traits"`

		// Uses spec of the component
		Uses []interface{} `json:"uses"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Bindings = props.Bindings
	m.Config = props.Config
	m.OutputResources = props.OutputResources
	m.Revision = props.Revision
	m.Run = props.Run
	m.Traits = props.Traits
	m.Uses = props.Uses
	return nil
}

// Validate validates this component properties
func (m *ComponentProperties) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this component properties based on context it is used
func (m *ComponentProperties) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ComponentProperties) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComponentProperties) UnmarshalBinary(b []byte) error {
	var res ComponentProperties
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
