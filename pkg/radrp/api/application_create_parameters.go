// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ApplicationCreateParameters Parameters used to create an application.
//
// swagger:model ApplicationCreateParameters
type ApplicationCreateParameters struct {

	// properties
	// Required: true
	Properties ApplicationCreateProperties `json:"properties"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *ApplicationCreateParameters) UnmarshalJSON(data []byte) error {
	var props struct {

		// properties
		// Required: true
		Properties ApplicationCreateProperties `json:"properties"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Properties = props.Properties
	return nil
}

// Validate validates this application create parameters
func (m *ApplicationCreateParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProperties(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationCreateParameters) validateProperties(formats strfmt.Registry) error {

	if m.Properties == nil {
		return errors.Required("properties", "body", nil)
	}

	return nil
}

// ContextValidate validates this application create parameters based on context it is used
func (m *ApplicationCreateParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationCreateParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationCreateParameters) UnmarshalBinary(b []byte) error {
	var res ApplicationCreateParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
