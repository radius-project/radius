//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package v20220315privatepreview

import "encoding/json"

func unmarshalMongoDatabasePropertiesClassification(rawMsg json.RawMessage) (MongoDatabasePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var m map[string]interface{}
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b MongoDatabasePropertiesClassification
	switch m["mode"] {
	case "recipe":
		b = &RecipeMongoDatabaseProperties{}
	case "resource":
		b = &ResourceMongoDatabaseProperties{}
	case "values":
		b = &ValuesMongoDatabaseProperties{}
	default:
		b = &MongoDatabaseProperties{}
	}
	return b, json.Unmarshal(rawMsg, b)
}

func unmarshalRedisCachePropertiesClassification(rawMsg json.RawMessage) (RedisCachePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var m map[string]interface{}
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b RedisCachePropertiesClassification
	switch m["mode"] {
	case "recipe":
		b = &RecipeRedisCacheProperties{}
	case "resource":
		b = &ResourceRedisCacheProperties{}
	case "values":
		b = &ValuesRedisCacheProperties{}
	default:
		b = &RedisCacheProperties{}
	}
	return b, json.Unmarshal(rawMsg, b)
}

func unmarshalSQLDatabasePropertiesClassification(rawMsg json.RawMessage) (SQLDatabasePropertiesClassification, error) {
	if rawMsg == nil {
		return nil, nil
	}
	var m map[string]interface{}
	if err := json.Unmarshal(rawMsg, &m); err != nil {
		return nil, err
	}
	var b SQLDatabasePropertiesClassification
	switch m["mode"] {
	case "recipe":
		b = &RecipeSQLDatabaseProperties{}
	case "resource":
		b = &ResourceSQLDatabaseProperties{}
	case "values":
		b = &ValuesSQLDatabaseProperties{}
	default:
		b = &SQLDatabaseProperties{}
	}
	return b, json.Unmarshal(rawMsg, b)
}

