// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package radclient

import (
	"context"
	"net/http"
	"time"
)

// ApplicationListResponse is the response envelope for operations that return a ApplicationList type.
type ApplicationListResponse struct {
	// Application list.
	ApplicationList *ApplicationList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ApplicationResourceResponse is the response envelope for operations that return a ApplicationResource type.
type ApplicationResourceResponse struct {
	// Application resource.
	ApplicationResource *ApplicationResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ComponentListResponse is the response envelope for operations that return a ComponentList type.
type ComponentListResponse struct {
	// Component list.
	ComponentList *ComponentList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// ComponentResourceResponse is the response envelope for operations that return a ComponentResource type.
type ComponentResourceResponse struct {
	// Component resource.
	ComponentResource *ComponentResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentListResponse is the response envelope for operations that return a DeploymentList type.
type DeploymentListResponse struct {
	// Deployment list.
	DeploymentList *DeploymentList

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentResourcePollerResponse is the response envelope for operations that asynchronously return a DeploymentResource type.
type DeploymentResourcePollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (DeploymentResourceResponse, error)

	// Poller contains an initialized poller.
	Poller DeploymentResourcePoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// DeploymentResourceResponse is the response envelope for operations that return a DeploymentResource type.
type DeploymentResourceResponse struct {
	// Deployment resource.
	DeploymentResource *DeploymentResource

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

// HTTPPollerResponse contains the asynchronous HTTP response from the call to the service endpoint.
type HTTPPollerResponse struct {
	// PollUntilDone will poll the service endpoint until a terminal state is reached or an error is received
	PollUntilDone func(ctx context.Context, frequency time.Duration) (*http.Response, error)

	// Poller contains an initialized poller.
	Poller HTTPPoller

	// RawResponse contains the underlying HTTP response.
	RawResponse *http.Response
}

