//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package v20220315privatepreview

const (
	moduleName = "v20220315privatepreview"
	moduleVersion = "v0.0.1"
)

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication CreatedByType = "Application"
	CreatedByTypeKey CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{	
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// DaprPubSubBrokerPropertiesMode - How to build the link. Options are to build automatically via 'recipe', build via 'resource'
// or build manually via 'values'. Selection determines which set of fields to additionally require.
type DaprPubSubBrokerPropertiesMode string

const (
	DaprPubSubBrokerPropertiesModeRecipe DaprPubSubBrokerPropertiesMode = "recipe"
	DaprPubSubBrokerPropertiesModeResource DaprPubSubBrokerPropertiesMode = "resource"
	DaprPubSubBrokerPropertiesModeValues DaprPubSubBrokerPropertiesMode = "values"
)

// PossibleDaprPubSubBrokerPropertiesModeValues returns the possible values for the DaprPubSubBrokerPropertiesMode const type.
func PossibleDaprPubSubBrokerPropertiesModeValues() []DaprPubSubBrokerPropertiesMode {
	return []DaprPubSubBrokerPropertiesMode{	
		DaprPubSubBrokerPropertiesModeRecipe,
		DaprPubSubBrokerPropertiesModeResource,
		DaprPubSubBrokerPropertiesModeValues,
	}
}

// DaprSecretStorePropertiesMode - How to build the link. Options are to build automatically via 'recipe' or build manually
// via 'values'. Selection determines which set of fields to additionally require.
type DaprSecretStorePropertiesMode string

const (
	DaprSecretStorePropertiesModeRecipe DaprSecretStorePropertiesMode = "recipe"
	DaprSecretStorePropertiesModeValues DaprSecretStorePropertiesMode = "values"
)

// PossibleDaprSecretStorePropertiesModeValues returns the possible values for the DaprSecretStorePropertiesMode const type.
func PossibleDaprSecretStorePropertiesModeValues() []DaprSecretStorePropertiesMode {
	return []DaprSecretStorePropertiesMode{	
		DaprSecretStorePropertiesModeRecipe,
		DaprSecretStorePropertiesModeValues,
	}
}

// DaprStateStorePropertiesMode - How to build the link. Options are to build automatically via 'recipe', build via 'resource'
// or build manually via 'values'. Selection determines which set of fields to additionally require.
type DaprStateStorePropertiesMode string

const (
	DaprStateStorePropertiesModeRecipe DaprStateStorePropertiesMode = "recipe"
	DaprStateStorePropertiesModeResource DaprStateStorePropertiesMode = "resource"
	DaprStateStorePropertiesModeValues DaprStateStorePropertiesMode = "values"
)

// PossibleDaprStateStorePropertiesModeValues returns the possible values for the DaprStateStorePropertiesMode const type.
func PossibleDaprStateStorePropertiesModeValues() []DaprStateStorePropertiesMode {
	return []DaprStateStorePropertiesMode{	
		DaprStateStorePropertiesModeRecipe,
		DaprStateStorePropertiesModeResource,
		DaprStateStorePropertiesModeValues,
	}
}

// MongoDatabasePropertiesMode - How to build the Mongo database link. Options are to build automatically via 'recipe' or
// 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.
type MongoDatabasePropertiesMode string

const (
	MongoDatabasePropertiesModeRecipe MongoDatabasePropertiesMode = "recipe"
	MongoDatabasePropertiesModeResource MongoDatabasePropertiesMode = "resource"
	MongoDatabasePropertiesModeValues MongoDatabasePropertiesMode = "values"
)

// PossibleMongoDatabasePropertiesModeValues returns the possible values for the MongoDatabasePropertiesMode const type.
func PossibleMongoDatabasePropertiesModeValues() []MongoDatabasePropertiesMode {
	return []MongoDatabasePropertiesMode{	
		MongoDatabasePropertiesModeRecipe,
		MongoDatabasePropertiesModeResource,
		MongoDatabasePropertiesModeValues,
	}
}

// ProvisioningState - Provisioning state of the link at the time the operation was called
type ProvisioningState string

const (
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	ProvisioningStateFailed ProvisioningState = "Failed"
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{	
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// RabbitMQMessageQueuePropertiesMode - How to build the link. Options are to build automatically via 'recipe' or build manually
// via 'values'. Selection determines which set of fields to additionally require.
type RabbitMQMessageQueuePropertiesMode string

const (
	RabbitMQMessageQueuePropertiesModeRecipe RabbitMQMessageQueuePropertiesMode = "recipe"
	RabbitMQMessageQueuePropertiesModeValues RabbitMQMessageQueuePropertiesMode = "values"
)

// PossibleRabbitMQMessageQueuePropertiesModeValues returns the possible values for the RabbitMQMessageQueuePropertiesMode const type.
func PossibleRabbitMQMessageQueuePropertiesModeValues() []RabbitMQMessageQueuePropertiesMode {
	return []RabbitMQMessageQueuePropertiesMode{	
		RabbitMQMessageQueuePropertiesModeRecipe,
		RabbitMQMessageQueuePropertiesModeValues,
	}
}

// RedisCachePropertiesMode - How to build the Redis cache Link. Options are to build automatically via 'recipe' or 'resource',
// or build manually via 'values'. Selection determines which set of fields to additionally require.
type RedisCachePropertiesMode string

const (
	RedisCachePropertiesModeRecipe RedisCachePropertiesMode = "recipe"
	RedisCachePropertiesModeResource RedisCachePropertiesMode = "resource"
	RedisCachePropertiesModeValues RedisCachePropertiesMode = "values"
)

// PossibleRedisCachePropertiesModeValues returns the possible values for the RedisCachePropertiesMode const type.
func PossibleRedisCachePropertiesModeValues() []RedisCachePropertiesMode {
	return []RedisCachePropertiesMode{	
		RedisCachePropertiesModeRecipe,
		RedisCachePropertiesModeResource,
		RedisCachePropertiesModeValues,
	}
}

// SQLDatabasePropertiesMode - How to build the link. Options are to build automatically via 'recipe' or 'resource', or build
// manually via 'values'. Selection determines which set of fields to additionally require.
type SQLDatabasePropertiesMode string

const (
	SQLDatabasePropertiesModeRecipe SQLDatabasePropertiesMode = "recipe"
	SQLDatabasePropertiesModeResource SQLDatabasePropertiesMode = "resource"
	SQLDatabasePropertiesModeValues SQLDatabasePropertiesMode = "values"
)

// PossibleSQLDatabasePropertiesModeValues returns the possible values for the SQLDatabasePropertiesMode const type.
func PossibleSQLDatabasePropertiesModeValues() []SQLDatabasePropertiesMode {
	return []SQLDatabasePropertiesMode{	
		SQLDatabasePropertiesModeRecipe,
		SQLDatabasePropertiesModeResource,
		SQLDatabasePropertiesModeValues,
	}
}

