{
  "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/radius-test-rg/providers/Applications.Core/containers/container0",
  "name": "container0",
  "type": "Applications.Core/containers",
  "systemData": {
    "createdBy": "fakeid@live.com",
    "createdByType": "User",
    "createdAt": "2021-09-24T19:09:54.2403864Z",
    "lastModifiedBy": "fakeid@live.com",
    "lastModifiedByType": "User",
    "lastModifiedAt": "2021-09-24T20:09:54.2403864Z"
  },
  "tags": {
    "env": "dev"
  },
  "provisioningState": "Succeeded",
  "properties": {
    "status": {
      "outputResources": [
        {
          "id": "/planes/test/local/providers/Test.Namespace/testResources/test-resource"
        }
      ]
    },
    "application": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Applications.Core/applications/app0",
    "connections": {
      "inventory": {
        "source": "inventory_route_id",
        "iam": {
          "kind": "azure",
          "roles": [
            "read"
          ]
        }
      }
    },
    "identity": {
      "kind": "azure.com.workload",
      "oidcIssuer": "https://oidcuri/id",
      "resource": "resourceid"
    },
    "container": {
      "image": "ghcr.io/radius-project/webapptutorial-todoapp",
      "livenessProbe": {
        "kind": "tcp",
        "tcp": {
          "healthProbeBase": {
            "failureThreshold": 5,
            "initialDelaySeconds": 5,
            "periodSeconds": 5
          },
          "containerPort": 8080
        }
      },
      "env": {
        "DB_USER": { "value": "DB_USER" },
        "DB_PASSWORD": {
          "valueFrom": {
            "secretRef": {
              "source": "secret.id",
              "key": "DB_PASSWORD"
            }
          }
        }
      },
      "command": [
        "/bin/sh"
      ],
      "args": [
        "-c",
        "while true; do echo hello; sleep 10;done"
      ],
      "workingDir": "/app"
    },
    "extensions": [
      {
        "kind": "manualScaling",
        "manualScaling": {
          "replicas": 2
        }
      },
      {
        "kind": "daprSidecar",
        "daprSidecar": {
          "appId": "app-id",
          "appPort": 80,
          "config": "config",
          "protocol": "http"
        }
      },
      {
        "kind": "kubernetesMetadata",
        "kubernetesmetadata": {
          "annotations": {
            "prometheus.io/scrape": "true",
            "prometheus.io/port": "80"
          },
          "labels": {
            "foo/bar/team": "credit",
            "foo/bar/contact": "radiususer"
          }
        }
      }
    ]
  }
}