// Licensed under the Apache License, Version 2.0 . See LICENSE in the repository root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package v20250801preview

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	rootScope string
	internal *arm.Client
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - rootScope - The scope in which the resource is present. UCP Scope is /planes/{planeType}/{planeName}/resourceGroup/{resourcegroupID}
//     and Azure resource scope is
//     /subscriptions/{subscriptionID}/resourceGroup/{resourcegroupID}
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(rootScope string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	internal, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		rootScope: rootScope,
		internal: internal,
	}, nil
}

// NewBicepSettingsClient creates a new instance of BicepSettingsClient.
func (c *ClientFactory) NewBicepSettingsClient() *BicepSettingsClient {
	return &BicepSettingsClient{
		rootScope: c.rootScope,
		internal: c.internal,
	}
}

// NewEnvironmentsClient creates a new instance of EnvironmentsClient.
func (c *ClientFactory) NewEnvironmentsClient() *EnvironmentsClient {
	return &EnvironmentsClient{
		rootScope: c.rootScope,
		internal: c.internal,
	}
}

// NewOperationsClient creates a new instance of OperationsClient.
func (c *ClientFactory) NewOperationsClient() *OperationsClient {
	return &OperationsClient{
		internal: c.internal,
	}
}

// NewRecipePacksClient creates a new instance of RecipePacksClient.
func (c *ClientFactory) NewRecipePacksClient() *RecipePacksClient {
	return &RecipePacksClient{
		rootScope: c.rootScope,
		internal: c.internal,
	}
}

// NewTerraformSettingsClient creates a new instance of TerraformSettingsClient.
func (c *ClientFactory) NewTerraformSettingsClient() *TerraformSettingsClient {
	return &TerraformSettingsClient{
		rootScope: c.rootScope,
		internal: c.internal,
	}
}

