//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package v20220901privatepreview

import "time"

// AwsCredentialPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetAwsCredentialProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AwsCredentialProperties
type AwsCredentialPropertiesClassification interface {
	// GetAwsCredentialProperties returns the AwsCredentialProperties content of the underlying type.
	GetAwsCredentialProperties() *AwsCredentialProperties
}

// AwsCredentialProperties - AWS credential storage properties
type AwsCredentialProperties struct {
	// REQUIRED; Access key ID for AWS identity
	AccessKeyID *string `json:"accessKeyId,omitempty"`

	// REQUIRED; Discriminator property for AwsCredentialProperties.
	AwsComIam *string `json:"aws.com.iam,omitempty"`

	// REQUIRED; The kind of secret
	Kind *string `json:"kind,omitempty"`

	// REQUIRED; Secret Access Key for AWS identity
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`

	// REQUIRED; The storage properties
	Storage *CredentialStorageProperties `json:"storage,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetAwsCredentialProperties implements the AwsCredentialPropertiesClassification interface for type AwsCredentialProperties.
func (a *AwsCredentialProperties) GetAwsCredentialProperties() *AwsCredentialProperties { return a }

// AwsCredentialResource - Concrete tracked resource types can be created by aliasing this type using a specific property
// type.
type AwsCredentialResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The resource-specific properties for this resource.
	Properties AwsCredentialPropertiesClassification `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AwsCredentialResourceListResult - The response of a AwsCredentialResource list operation.
type AwsCredentialResourceListResult struct {
	// REQUIRED; The AwsCredentialResource items on this page
	Value []*AwsCredentialResource `json:"value,omitempty"`

	// The link to the next page of items
	NextLink *string `json:"nextLink,omitempty"`
}

// AwsCredentialsClientCreateOrUpdateOptions contains the optional parameters for the AwsCredentialsClient.CreateOrUpdate
// method.
type AwsCredentialsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AwsCredentialsClientDeleteOptions contains the optional parameters for the AwsCredentialsClient.Delete method.
type AwsCredentialsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AwsCredentialsClientGetOptions contains the optional parameters for the AwsCredentialsClient.Get method.
type AwsCredentialsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AwsCredentialsClientListByRootScopeOptions contains the optional parameters for the AwsCredentialsClient.ListByRootScope
// method.
type AwsCredentialsClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// AzureCredentialResource - Concrete tracked resource types can be created by aliasing this type using a specific property
// type.
type AzureCredentialResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The resource-specific properties for this resource.
	Properties AzureServicePrincipalPropertiesClassification `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AzureCredentialResourceListResult - The response of a AzureCredentialResource list operation.
type AzureCredentialResourceListResult struct {
	// REQUIRED; The AzureCredentialResource items on this page
	Value []*AzureCredentialResource `json:"value,omitempty"`

	// The link to the next page of items
	NextLink *string `json:"nextLink,omitempty"`
}

// AzureCredentialsClientCreateOrUpdateOptions contains the optional parameters for the AzureCredentialsClient.CreateOrUpdate
// method.
type AzureCredentialsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AzureCredentialsClientDeleteOptions contains the optional parameters for the AzureCredentialsClient.Delete method.
type AzureCredentialsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// AzureCredentialsClientGetOptions contains the optional parameters for the AzureCredentialsClient.Get method.
type AzureCredentialsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AzureCredentialsClientListByRootScopeOptions contains the optional parameters for the AzureCredentialsClient.ListByRootScope
// method.
type AzureCredentialsClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// AzureServicePrincipalPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetAzureServicePrincipalProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AzureServicePrincipalProperties
type AzureServicePrincipalPropertiesClassification interface {
	// GetAzureServicePrincipalProperties returns the AzureServicePrincipalProperties content of the underlying type.
	GetAzureServicePrincipalProperties() *AzureServicePrincipalProperties
}

// AzureServicePrincipalProperties - Service Principal credential storage properties
type AzureServicePrincipalProperties struct {
	// REQUIRED; Discriminator property for AzureServicePrincipalProperties.
	AzureComServiceprincipal *string `json:"azure.com.serviceprincipal,omitempty"`

	// REQUIRED; clientId when the CredentialKind is ServicePrincipal
	ClientID *string `json:"clientId,omitempty"`

	// REQUIRED; The kind of secret
	Kind *string `json:"kind,omitempty"`

	// REQUIRED; secret when the CredentialKind is ServicePrincipal
	Secret *string `json:"secret,omitempty"`

	// REQUIRED; The storage properties
	Storage *CredentialStorageProperties `json:"storage,omitempty"`

	// REQUIRED; tenantId when the CredentialKind is ServicePrincipal
	TenantID *string `json:"tenantId,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetAzureServicePrincipalProperties implements the AzureServicePrincipalPropertiesClassification interface for type AzureServicePrincipalProperties.
func (a *AzureServicePrincipalProperties) GetAzureServicePrincipalProperties() *AzureServicePrincipalProperties { return a }

// BasicResourceProperties - Basic properties of a UCP resource.
type BasicResourceProperties struct {
	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// CredentialResourceProperties - Credential properties
type CredentialResourceProperties struct {
	// REQUIRED; The kind of secret
	Kind *string `json:"kind,omitempty"`

	// REQUIRED; The storage properties
	Storage *CredentialStorageProperties `json:"storage,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// CredentialStorageProperties - Credential storage properties
type CredentialStorageProperties struct {
	// REQUIRED; Credential store kinds supported.
	Kind *CredentialStorageKind `json:"kind,omitempty"`
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail `json:"error,omitempty"`
}

// InternalCredentialStoragePropertiesClassification provides polymorphic access to related types.
// Call the interface's GetInternalCredentialStorageProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *InternalCredentialStorageProperties
type InternalCredentialStoragePropertiesClassification interface {
	// GetInternalCredentialStorageProperties returns the InternalCredentialStorageProperties content of the underlying type.
	GetInternalCredentialStorageProperties() *InternalCredentialStorageProperties
}

// InternalCredentialStorageProperties - Internal credential storage properties
type InternalCredentialStorageProperties struct {
	// REQUIRED; Discriminator property for InternalCredentialStorageProperties.
	Internal *string `json:"Internal,omitempty"`

	// REQUIRED; The kind of secret
	Kind *string `json:"kind,omitempty"`

	// REQUIRED; The storage properties
	Storage *CredentialStorageProperties `json:"storage,omitempty"`

	// READ-ONLY; The name of secret stored.
	SecretName *string `json:"secretName,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetInternalCredentialStorageProperties implements the InternalCredentialStoragePropertiesClassification interface for type
// InternalCredentialStorageProperties.
func (i *InternalCredentialStorageProperties) GetInternalCredentialStorageProperties() *InternalCredentialStorageProperties { return i }

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
// operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
	Origin *Origin `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
// Machine", "Restart Virtual Machine".
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
// Compute".
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
// Schedule Collections".
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// PlaneResource - UCP PlaneResource.
type PlaneResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The resource-specific properties for this resource.
	Properties *PlaneResourceProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// PlaneResourceListResult - The response of a PlaneResource list operation.
type PlaneResourceListResult struct {
	// REQUIRED; The PlaneResource items on this page
	Value []*PlaneResource `json:"value,omitempty"`

	// The link to the next page of items
	NextLink *string `json:"nextLink,omitempty"`
}

// PlaneResourceProperties - Plane properties.
type PlaneResourceProperties struct {
	// REQUIRED; The kind of plane
	Kind *PlaneKind `json:"kind,omitempty"`

	// REQUIRED; Resource Providers for UCP Native Plane
	ResourceProviders []*string `json:"resourceProviders,omitempty"`

	// REQUIRED; URL to forward requests to for non UCP Native Plane
	URL *string `json:"url,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache link at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// PlanesClientCreateOrUpdateOptions contains the optional parameters for the PlanesClient.CreateOrUpdate method.
type PlanesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// PlanesClientDeleteOptions contains the optional parameters for the PlanesClient.Delete method.
type PlanesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// PlanesClientGetOptions contains the optional parameters for the PlanesClient.Get method.
type PlanesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PlanesClientListByRootScopeOptions contains the optional parameters for the PlanesClient.ListByRootScope method.
type PlanesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceGroupResource - UCP ResourceGroup.
type ResourceGroupResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The resource-specific properties for this resource.
	Properties *BasicResourceProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceGroupResourceListResult - The response of a ResourceGroupResource list operation.
type ResourceGroupResourceListResult struct {
	// REQUIRED; The ResourceGroupResource items on this page
	Value []*ResourceGroupResource `json:"value,omitempty"`

	// The link to the next page of items
	NextLink *string `json:"nextLink,omitempty"`
}

// ResourceGroupsClientCreateOrUpdateOptions contains the optional parameters for the ResourceGroupsClient.CreateOrUpdate
// method.
type ResourceGroupsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientDeleteOptions contains the optional parameters for the ResourceGroupsClient.Delete method.
type ResourceGroupsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientGetOptions contains the optional parameters for the ResourceGroupsClient.Get method.
type ResourceGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ResourceGroupsClientListByRootScopeOptions contains the optional parameters for the ResourceGroupsClient.ListByRootScope
// method.
type ResourceGroupsClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

