// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/ucp/secret/etcd (interfaces: ETCDV3Client)

// Package etcd is a generated GoMock package.
package etcd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockETCDV3Client is a mock of ETCDV3Client interface.
type MockETCDV3Client struct {
	ctrl     *gomock.Controller
	recorder *MockETCDV3ClientMockRecorder
}

// MockETCDV3ClientMockRecorder is the mock recorder for MockETCDV3Client.
type MockETCDV3ClientMockRecorder struct {
	mock *MockETCDV3Client
}

// NewMockETCDV3Client creates a new mock instance.
func NewMockETCDV3Client(ctrl *gomock.Controller) *MockETCDV3Client {
	mock := &MockETCDV3Client{ctrl: ctrl}
	mock.recorder = &MockETCDV3ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockETCDV3Client) EXPECT() *MockETCDV3ClientMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockETCDV3Client) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockETCDV3ClientMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockETCDV3Client)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockETCDV3Client) Get(arg0 context.Context, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockETCDV3ClientMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockETCDV3Client)(nil).Get), arg0, arg1)
}

// Save mocks base method.
func (m *MockETCDV3Client) Save(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockETCDV3ClientMockRecorder) Save(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockETCDV3Client)(nil).Save), arg0, arg1, arg2)
}
