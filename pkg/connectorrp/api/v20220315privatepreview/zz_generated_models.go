//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package v20220315privatepreview

import "time"

// BasicResourceProperties - Basic properties of a Radius resource.
type BasicResourceProperties struct {
	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// DaprInvokeHTTPRouteList - Object that includes an array of DaprInvokeHttpRoute and a possible link for next set
type DaprInvokeHTTPRouteList struct {
	// The link used to fetch the next page of DaprInvokeHttpRoute list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of DaprInvokeHttpRoute resources
	Value []*DaprInvokeHTTPRouteResource `json:"value,omitempty"`
}

// DaprInvokeHTTPRouteProperties - DaprInvokeHttpRoute connector properties
type DaprInvokeHTTPRouteProperties struct {
	// REQUIRED; The Dapr appId used for the route
	AppID *string `json:"appId,omitempty"`

	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the daprInvokeHttpRoute connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// DaprInvokeHTTPRouteResource - DaprInvokeHttpRoute connector
type DaprInvokeHTTPRouteResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; DaprInvokeHttpRoute connector properties
	Properties *DaprInvokeHTTPRouteProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DaprInvokeHTTPRoutesClientCreateOrUpdateOptions contains the optional parameters for the DaprInvokeHTTPRoutesClient.CreateOrUpdate
// method.
type DaprInvokeHTTPRoutesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DaprInvokeHTTPRoutesClientDeleteOptions contains the optional parameters for the DaprInvokeHTTPRoutesClient.Delete method.
type DaprInvokeHTTPRoutesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DaprInvokeHTTPRoutesClientGetOptions contains the optional parameters for the DaprInvokeHTTPRoutesClient.Get method.
type DaprInvokeHTTPRoutesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DaprInvokeHTTPRoutesClientListByRootScopeOptions contains the optional parameters for the DaprInvokeHTTPRoutesClient.ListByRootScope
// method.
type DaprInvokeHTTPRoutesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

type DaprPubSubAzureServiceBusResourceProperties struct {
	// REQUIRED; The resource id of the environment linked to the daprPubSubBroker connector
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The DaprPubSubProperties kind
	Kind *DaprPubSubBrokerPropertiesKind `json:"kind,omitempty"`

	// REQUIRED; PubSub resource
	Resource *string `json:"resource,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Topic name of the Azure ServiceBus resource
	Topic *string `json:"topic,omitempty"`

	// READ-ONLY; Provisioning state of the daprPubSubBroker connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprPubSubBrokerProperties implements the DaprPubSubBrokerPropertiesClassification interface for type DaprPubSubAzureServiceBusResourceProperties.
func (d *DaprPubSubAzureServiceBusResourceProperties) GetDaprPubSubBrokerProperties() *DaprPubSubBrokerProperties {
	return &DaprPubSubBrokerProperties{
		ProvisioningState: d.ProvisioningState,
		Application: d.Application,
		Environment: d.Environment,
		Kind: d.Kind,
		Topic: d.Topic,
		Status: d.Status,
	}
}

// DaprPubSubBrokerList - Object that includes an array of DaprPubSubBroker and a possible link for next set
type DaprPubSubBrokerList struct {
	// The link used to fetch the next page of DaprPubSubBroker list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of DaprPubSubBroker resources
	Value []*DaprPubSubBrokerResource `json:"value,omitempty"`
}

// DaprPubSubBrokerPropertiesClassification provides polymorphic access to related types.
// Call the interface's GetDaprPubSubBrokerProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *DaprPubSubAzureServiceBusResourceProperties, *DaprPubSubBrokerProperties, *DaprPubSubGenericResourceProperties
type DaprPubSubBrokerPropertiesClassification interface {
	// GetDaprPubSubBrokerProperties returns the DaprPubSubBrokerProperties content of the underlying type.
	GetDaprPubSubBrokerProperties() *DaprPubSubBrokerProperties
}

// DaprPubSubBrokerProperties - DaprPubSubBroker connector properties
type DaprPubSubBrokerProperties struct {
	// REQUIRED; The resource id of the environment linked to the daprPubSubBroker connector
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The DaprPubSubProperties kind
	Kind *DaprPubSubBrokerPropertiesKind `json:"kind,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Topic name of the Azure ServiceBus resource
	Topic *string `json:"topic,omitempty"`

	// READ-ONLY; Provisioning state of the daprPubSubBroker connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprPubSubBrokerProperties implements the DaprPubSubBrokerPropertiesClassification interface for type DaprPubSubBrokerProperties.
func (d *DaprPubSubBrokerProperties) GetDaprPubSubBrokerProperties() *DaprPubSubBrokerProperties { return d }

// DaprPubSubBrokerResource - DaprPubSubBroker connector
type DaprPubSubBrokerResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; DaprPubSubBroker connector properties
	Properties DaprPubSubBrokerPropertiesClassification `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DaprPubSubBrokersClientCreateOrUpdateOptions contains the optional parameters for the DaprPubSubBrokersClient.CreateOrUpdate
// method.
type DaprPubSubBrokersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DaprPubSubBrokersClientDeleteOptions contains the optional parameters for the DaprPubSubBrokersClient.Delete method.
type DaprPubSubBrokersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DaprPubSubBrokersClientGetOptions contains the optional parameters for the DaprPubSubBrokersClient.Get method.
type DaprPubSubBrokersClientGetOptions struct {
	// placeholder for future optional parameters
}

// DaprPubSubBrokersClientListByRootScopeOptions contains the optional parameters for the DaprPubSubBrokersClient.ListByRootScope
// method.
type DaprPubSubBrokersClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

type DaprPubSubGenericResourceProperties struct {
	// REQUIRED; The resource id of the environment linked to the daprPubSubBroker connector
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The DaprPubSubProperties kind
	Kind *DaprPubSubBrokerPropertiesKind `json:"kind,omitempty"`

	// REQUIRED; Metadata for the pub sub resource. This should match the values specified in Dapr component spec
	Metadata map[string]interface{} `json:"metadata,omitempty"`

	// REQUIRED; Dapr PubSub type. These strings match the format used by Dapr Kubernetes configuration format.
	Type *string `json:"type,omitempty"`

	// REQUIRED; Dapr component version
	Version *string `json:"version,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Topic name of the Azure ServiceBus resource
	Topic *string `json:"topic,omitempty"`

	// READ-ONLY; Provisioning state of the daprPubSubBroker connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprPubSubBrokerProperties implements the DaprPubSubBrokerPropertiesClassification interface for type DaprPubSubGenericResourceProperties.
func (d *DaprPubSubGenericResourceProperties) GetDaprPubSubBrokerProperties() *DaprPubSubBrokerProperties {
	return &DaprPubSubBrokerProperties{
		ProvisioningState: d.ProvisioningState,
		Application: d.Application,
		Environment: d.Environment,
		Kind: d.Kind,
		Topic: d.Topic,
		Status: d.Status,
	}
}

// DaprSecretStoreList - Object that includes an array of DaprSecretStore and a possible link for next set
type DaprSecretStoreList struct {
	// The link used to fetch the next page of DaprSecretStore list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of DaprSecretStore resources
	Value []*DaprSecretStoreResource `json:"value,omitempty"`
}

// DaprSecretStoreProperties - DaprSecretStore connector properties
type DaprSecretStoreProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; Radius kind for Dapr Secret Store
	Kind *DaprSecretStorePropertiesKind `json:"kind,omitempty"`

	// REQUIRED; Metadata for the Secret Store resource. This should match the values specified in Dapr component spec
	Metadata map[string]interface{} `json:"metadata,omitempty"`

	// REQUIRED; Dapr Secret Store type. These strings match the types defined in Dapr Component format: https://docs.dapr.io/reference/components-reference/supported-secret-stores/
	Type *string `json:"type,omitempty"`

	// REQUIRED; Dapr component version
	Version *string `json:"version,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the dapr secret store connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Dapr Secret Store.
	SecretStoreName *string `json:"secretStoreName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// DaprSecretStoreResource - DaprSecretStore connector
type DaprSecretStoreResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; DaprSecretStore connector properties
	Properties *DaprSecretStoreProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DaprSecretStoresClientCreateOrUpdateOptions contains the optional parameters for the DaprSecretStoresClient.CreateOrUpdate
// method.
type DaprSecretStoresClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DaprSecretStoresClientDeleteOptions contains the optional parameters for the DaprSecretStoresClient.Delete method.
type DaprSecretStoresClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DaprSecretStoresClientGetOptions contains the optional parameters for the DaprSecretStoresClient.Get method.
type DaprSecretStoresClientGetOptions struct {
	// placeholder for future optional parameters
}

// DaprSecretStoresClientListByRootScopeOptions contains the optional parameters for the DaprSecretStoresClient.ListByRootScope
// method.
type DaprSecretStoresClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

type DaprStateStoreAzureTableStorageResourceProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The Dapr StateStore kind
	Kind *DaprStateStorePropertiesKind `json:"kind,omitempty"`

	// REQUIRED; The resource id of the Azure Storage Table the daprStateStore resource is connected to.
	Resource *string `json:"resource,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the daprStateStore connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Dapr State Store
	StateStoreName *string `json:"stateStoreName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprStateStoreProperties implements the DaprStateStorePropertiesClassification interface for type DaprStateStoreAzureTableStorageResourceProperties.
func (d *DaprStateStoreAzureTableStorageResourceProperties) GetDaprStateStoreProperties() *DaprStateStoreProperties {
	return &DaprStateStoreProperties{
		ProvisioningState: d.ProvisioningState,
		Environment: d.Environment,
		Application: d.Application,
		Kind: d.Kind,
		StateStoreName: d.StateStoreName,
		Status: d.Status,
	}
}

type DaprStateStoreGenericResourceProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The Dapr StateStore kind
	Kind *DaprStateStorePropertiesKind `json:"kind,omitempty"`

	// REQUIRED; Metadata for the state store resource. This should match the values specified in Dapr component spec
	Metadata map[string]interface{} `json:"metadata,omitempty"`

	// REQUIRED; Dapr StateStore type. These strings match the format used by Dapr Kubernetes configuration format.
	Type *string `json:"type,omitempty"`

	// REQUIRED; Dapr component version
	Version *string `json:"version,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the daprStateStore connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Dapr State Store
	StateStoreName *string `json:"stateStoreName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprStateStoreProperties implements the DaprStateStorePropertiesClassification interface for type DaprStateStoreGenericResourceProperties.
func (d *DaprStateStoreGenericResourceProperties) GetDaprStateStoreProperties() *DaprStateStoreProperties {
	return &DaprStateStoreProperties{
		ProvisioningState: d.ProvisioningState,
		Environment: d.Environment,
		Application: d.Application,
		Kind: d.Kind,
		StateStoreName: d.StateStoreName,
		Status: d.Status,
	}
}

// DaprStateStoreList - Object that includes an array of DaprStateStore and a possible link for next set
type DaprStateStoreList struct {
	// The link used to fetch the next page of DaprStateStore list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of DaprStateStore resources
	Value []*DaprStateStoreResource `json:"value,omitempty"`
}

// DaprStateStorePropertiesClassification provides polymorphic access to related types.
// Call the interface's GetDaprStateStoreProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *DaprStateStoreAzureTableStorageResourceProperties, *DaprStateStoreGenericResourceProperties, *DaprStateStoreProperties,
// - *DaprStateStoreSQLServerResourceProperties
type DaprStateStorePropertiesClassification interface {
	// GetDaprStateStoreProperties returns the DaprStateStoreProperties content of the underlying type.
	GetDaprStateStoreProperties() *DaprStateStoreProperties
}

// DaprStateStoreProperties - DaprStateStore connector properties
type DaprStateStoreProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The Dapr StateStore kind
	Kind *DaprStateStorePropertiesKind `json:"kind,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the daprStateStore connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Dapr State Store
	StateStoreName *string `json:"stateStoreName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprStateStoreProperties implements the DaprStateStorePropertiesClassification interface for type DaprStateStoreProperties.
func (d *DaprStateStoreProperties) GetDaprStateStoreProperties() *DaprStateStoreProperties { return d }

// DaprStateStoreResource - DaprStateStore connector
type DaprStateStoreResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; DaprStateStore connector properties
	Properties DaprStateStorePropertiesClassification `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

type DaprStateStoreSQLServerResourceProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The Dapr StateStore kind
	Kind *DaprStateStorePropertiesKind `json:"kind,omitempty"`

	// REQUIRED; The resource id of the Azure SQL Database the daprStateStore resource is connected to.
	Resource *string `json:"resource,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the daprStateStore connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The name of the Dapr State Store
	StateStoreName *string `json:"stateStoreName,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// GetDaprStateStoreProperties implements the DaprStateStorePropertiesClassification interface for type DaprStateStoreSQLServerResourceProperties.
func (d *DaprStateStoreSQLServerResourceProperties) GetDaprStateStoreProperties() *DaprStateStoreProperties {
	return &DaprStateStoreProperties{
		ProvisioningState: d.ProvisioningState,
		Environment: d.Environment,
		Application: d.Application,
		Kind: d.Kind,
		StateStoreName: d.StateStoreName,
		Status: d.Status,
	}
}

// DaprStateStoresClientCreateOrUpdateOptions contains the optional parameters for the DaprStateStoresClient.CreateOrUpdate
// method.
type DaprStateStoresClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DaprStateStoresClientDeleteOptions contains the optional parameters for the DaprStateStoresClient.Delete method.
type DaprStateStoresClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DaprStateStoresClientGetOptions contains the optional parameters for the DaprStateStoresClient.Get method.
type DaprStateStoresClientGetOptions struct {
	// placeholder for future optional parameters
}

// DaprStateStoresClientListByRootScopeOptions contains the optional parameters for the DaprStateStoresClient.ListByRootScope
// method.
type DaprStateStoresClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail `json:"error,omitempty"`
}

// ExtenderList - Object that includes an array of Extender and a possible link for next set
type ExtenderList struct {
	// The link used to fetch the next page of Extender list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of Extender resources
	Value []*ExtenderResponseResource `json:"value,omitempty"`
}

// ExtenderProperties - Extender connector properties
type ExtenderProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// OPTIONAL; Contains additional key/value pairs not defined in the schema.
	AdditionalProperties map[string]interface{}

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// The secret values for the given Extender resource
	Secrets map[string]interface{} `json:"secrets,omitempty"`

	// READ-ONLY; Provisioning state of the extender connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// ExtenderResource - Extender connector
type ExtenderResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; Extender connector properties
	Properties *ExtenderProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ExtenderResponseProperties - Extender connector properties
type ExtenderResponseProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// OPTIONAL; Contains additional key/value pairs not defined in the schema.
	AdditionalProperties map[string]interface{}

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the extender connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// ExtenderResponseResource - Extender connector
type ExtenderResponseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; Extender connector properties
	Properties *ExtenderResponseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ExtendersClientCreateOrUpdateOptions contains the optional parameters for the ExtendersClient.CreateOrUpdate method.
type ExtendersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ExtendersClientDeleteOptions contains the optional parameters for the ExtendersClient.Delete method.
type ExtendersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ExtendersClientGetOptions contains the optional parameters for the ExtendersClient.Get method.
type ExtendersClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExtendersClientListByRootScopeOptions contains the optional parameters for the ExtendersClient.ListByRootScope method.
type ExtendersClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// ExtendersClientListSecretsOptions contains the optional parameters for the ExtendersClient.ListSecrets method.
type ExtendersClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// MongoDatabaseList - Object that includes an array of MongoDatabase and a possible link for next set
type MongoDatabaseList struct {
	// The link used to fetch the next page of MongoDatabase list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of MongoDatabase resources
	Value []*MongoDatabaseResponseResource `json:"value,omitempty"`
}

// MongoDatabaseProperties - MongoDatabase connector properties
type MongoDatabaseProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Host name of the target Mongo database
	Host *string `json:"host,omitempty"`

	// Port value of the target Mongo database
	Port *int32 `json:"port,omitempty"`

	// The recipe used to automatically deploy underlying infrastructure for the mongodatabase connector
	Recipe *Recipe `json:"recipe,omitempty"`

	// Fully qualified resource ID of a supported resource with Mongo API to use for this connector
	Resource *string `json:"resource,omitempty"`

	// Secrets values provided for the resource
	Secrets *MongoDatabaseSecrets `json:"secrets,omitempty"`

	// READ-ONLY; Database name of the target Mongo database
	Database *string `json:"database,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the mongo database connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// MongoDatabaseResource - MongoDatabase connector
type MongoDatabaseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; MongoDatabase connector properties
	Properties *MongoDatabaseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MongoDatabaseResponseProperties - MongoDatabase connector properties
type MongoDatabaseResponseProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Host name of the target Mongo database
	Host *string `json:"host,omitempty"`

	// Port value of the target Mongo database
	Port *int32 `json:"port,omitempty"`

	// The recipe used to automatically deploy underlying infrastructure for the mongodatabase connector
	Recipe *Recipe `json:"recipe,omitempty"`

	// Fully qualified resource ID of a supported resource with Mongo API to use for this connector
	Resource *string `json:"resource,omitempty"`

	// READ-ONLY; Database name of the target Mongo database
	Database *string `json:"database,omitempty" azure:"ro"`

	// READ-ONLY; Provisioning state of the mongo database connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// MongoDatabaseResponseResource - MongoDatabase connector
type MongoDatabaseResponseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; MongoDatabase connector properties
	Properties *MongoDatabaseResponseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MongoDatabaseSecrets - The secret values for the given MongoDatabase resource
type MongoDatabaseSecrets struct {
	// Connection string used to connect to the target Mongo database
	ConnectionString *string `json:"connectionString,omitempty"`

	// Password to use when connecting to the target Mongo database
	Password *string `json:"password,omitempty"`

	// Username to use when connecting to the target Mongo database
	Username *string `json:"username,omitempty"`
}

// MongoDatabasesClientCreateOrUpdateOptions contains the optional parameters for the MongoDatabasesClient.CreateOrUpdate
// method.
type MongoDatabasesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// MongoDatabasesClientDeleteOptions contains the optional parameters for the MongoDatabasesClient.Delete method.
type MongoDatabasesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// MongoDatabasesClientGetOptions contains the optional parameters for the MongoDatabasesClient.Get method.
type MongoDatabasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// MongoDatabasesClientListByRootScopeOptions contains the optional parameters for the MongoDatabasesClient.ListByRootScope
// method.
type MongoDatabasesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// MongoDatabasesClientListSecretsOptions contains the optional parameters for the MongoDatabasesClient.ListSecrets method.
type MongoDatabasesClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQMessageQueueList - Object that includes an array of RabbitMQMessageQueue and a possible link for next set
type RabbitMQMessageQueueList struct {
	// The link used to fetch the next page of RabbitMQMessageQueue list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of RabbitMQMessageQueue resources
	Value []*RabbitMQMessageQueueResponseResource `json:"value,omitempty"`
}

// RabbitMQMessageQueueProperties - RabbitMQMessageQueue connector properties
type RabbitMQMessageQueueProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The name of the queue
	Queue *string `json:"queue,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// Secrets provided by resources,
	Secrets *RabbitMQSecrets `json:"secrets,omitempty"`

	// READ-ONLY; Provisioning state of the rabbitMQ message queue connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// RabbitMQMessageQueueResource - RabbitMQMessageQueue connector
type RabbitMQMessageQueueResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; RabbitMQMessageQueue connector properties
	Properties *RabbitMQMessageQueueProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RabbitMQMessageQueueResponseProperties - RabbitMQMessageQueue connector response properties
type RabbitMQMessageQueueResponseProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// REQUIRED; The name of the queue
	Queue *string `json:"queue,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// READ-ONLY; Provisioning state of the rabbitMQ message queue connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// RabbitMQMessageQueueResponseResource - RabbitMQMessageQueue connector
type RabbitMQMessageQueueResponseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; RabbitMQMessageQueue connector response properties
	Properties *RabbitMQMessageQueueResponseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RabbitMQMessageQueuesClientCreateOrUpdateOptions contains the optional parameters for the RabbitMQMessageQueuesClient.CreateOrUpdate
// method.
type RabbitMQMessageQueuesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQMessageQueuesClientDeleteOptions contains the optional parameters for the RabbitMQMessageQueuesClient.Delete method.
type RabbitMQMessageQueuesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQMessageQueuesClientGetOptions contains the optional parameters for the RabbitMQMessageQueuesClient.Get method.
type RabbitMQMessageQueuesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQMessageQueuesClientListByRootScopeOptions contains the optional parameters for the RabbitMQMessageQueuesClient.ListByRootScope
// method.
type RabbitMQMessageQueuesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQMessageQueuesClientListSecretsOptions contains the optional parameters for the RabbitMQMessageQueuesClient.ListSecrets
// method.
type RabbitMQMessageQueuesClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// RabbitMQSecrets - The secret values for the given RabbitMQMessageQueue resource
type RabbitMQSecrets struct {
	// The connection string used to connect to this RabbitMQ instance
	ConnectionString *string `json:"connectionString,omitempty"`
}

// Recipe - The recipe used to automatically deploy underlying infrastructure for a connector
type Recipe struct {
	// REQUIRED; The name of the recipe within the environment to use
	Name *string `json:"name,omitempty"`

	// Key/value parameters to pass into the recipe at deployment
	Parameters map[string]interface{} `json:"parameters,omitempty"`
}

// RedisCacheList - Object that includes an array of RedisCache and a possible link for next set
type RedisCacheList struct {
	// The link used to fetch the next page of RedisCache list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of RedisCache resources
	Value []*RedisCacheResponseResource `json:"value,omitempty"`
}

// RedisCacheProperties - RedisCache connector properties
type RedisCacheProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// The host name of the target redis cache
	Host *string `json:"host,omitempty"`

	// The port value of the target redis cache
	Port *int32 `json:"port,omitempty"`

	// The recipe used to automatically deploy underlying infrastructure for the rediscache connector
	Recipe *Recipe `json:"recipe,omitempty"`

	// Fully qualified resource ID of a supported resource with Redis API to use for this connector
	Resource *string `json:"resource,omitempty"`

	// The secret values for the given RedisCache resource
	Secrets *RedisCacheSecrets `json:"secrets,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; The username for redis
	Username *string `json:"username,omitempty" azure:"ro"`
}

// RedisCacheResource - RedisCache connector
type RedisCacheResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; RedisCache connector properties
	Properties *RedisCacheProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RedisCacheResponseProperties - RedisCache connector properties
type RedisCacheResponseProperties struct {
	// REQUIRED; Fully qualified resource ID for the environment that the connector is linked to
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the application that the connector is consumed by
	Application *string `json:"application,omitempty"`

	// The host name of the target redis cache
	Host *string `json:"host,omitempty"`

	// The port value of the target redis cache
	Port *int32 `json:"port,omitempty"`

	// The recipe used to automatically deploy underlying infrastructure for the rediscache connector
	Recipe *Recipe `json:"recipe,omitempty"`

	// Fully qualified resource ID of a supported resource with Redis API to use for this connector
	Resource *string `json:"resource,omitempty"`

	// READ-ONLY; Provisioning state of the redis cache connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; The username for redis
	Username *string `json:"username,omitempty" azure:"ro"`
}

// RedisCacheResponseResource - RedisCache connector
type RedisCacheResponseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; RedisCache connector properties
	Properties *RedisCacheResponseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// RedisCacheSecrets - The secret values for the given RedisCache resource
type RedisCacheSecrets struct {
	// The connection string used to connect to the redis cache
	ConnectionString *string `json:"connectionString,omitempty"`

	// The password for this Redis instance
	Password *string `json:"password,omitempty"`
}

// RedisCachesClientCreateOrUpdateOptions contains the optional parameters for the RedisCachesClient.CreateOrUpdate method.
type RedisCachesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// RedisCachesClientDeleteOptions contains the optional parameters for the RedisCachesClient.Delete method.
type RedisCachesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// RedisCachesClientGetOptions contains the optional parameters for the RedisCachesClient.Get method.
type RedisCachesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RedisCachesClientListByRootScopeOptions contains the optional parameters for the RedisCachesClient.ListByRootScope method.
type RedisCachesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// RedisCachesClientListSecretsOptions contains the optional parameters for the RedisCachesClient.ListSecrets method.
type RedisCachesClientListSecretsOptions struct {
	// placeholder for future optional parameters
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ResourceStatus - Status of a resource.
type ResourceStatus struct {
	OutputResources []map[string]interface{} `json:"outputResources,omitempty"`
}

// SQLDatabaseList - Object that includes an array of SQLDatabase and a possible link for next set
type SQLDatabaseList struct {
	// The link used to fetch the next page of SQLDatabase list.
	NextLink *string `json:"nextLink,omitempty"`

	// List of SQLDatabase resources
	Value []*SQLDatabaseResource `json:"value,omitempty"`
}

// SQLDatabaseProperties - SQLDatabse connector properties
type SQLDatabaseProperties struct {
	// REQUIRED; The resource id of the environment linked to the sqlDatabase connector
	Environment *string `json:"environment,omitempty"`

	// Fully qualified resource ID for the environment that the connector is linked to
	Application *string `json:"application,omitempty"`

	// The name of the SQL database.
	Database *string `json:"database,omitempty"`

	// Fully qualified resource ID of a supported resource with SQL API to use for this connector
	Resource *string `json:"resource,omitempty"`

	// The fully qualified domain name of the SQL database.
	Server *string `json:"server,omitempty"`

	// READ-ONLY; Provisioning state of the SQL database connector at the time the operation was called
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Status of the resource
	Status *ResourceStatus `json:"status,omitempty" azure:"ro"`
}

// SQLDatabaseResource - SQLDatabse connector
type SQLDatabaseResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// REQUIRED; SQLDatabse connector properties
	Properties *SQLDatabaseProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Metadata pertaining to creation and last modification of the resource.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// SQLDatabasesClientCreateOrUpdateOptions contains the optional parameters for the SQLDatabasesClient.CreateOrUpdate method.
type SQLDatabasesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SQLDatabasesClientDeleteOptions contains the optional parameters for the SQLDatabasesClient.Delete method.
type SQLDatabasesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SQLDatabasesClientGetOptions contains the optional parameters for the SQLDatabasesClient.Get method.
type SQLDatabasesClientGetOptions struct {
	// placeholder for future optional parameters
}

// SQLDatabasesClientListByRootScopeOptions contains the optional parameters for the SQLDatabasesClient.ListByRootScope method.
type SQLDatabasesClientListByRootScopeOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

