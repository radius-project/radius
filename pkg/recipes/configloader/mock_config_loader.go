// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/recipes/configloader (interfaces: ConfigurationLoader)

// Package configloader is a generated GoMock package.
package configloader

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	recipes "github.com/project-radius/radius/pkg/recipes"
)

// MockConfigurationLoader is a mock of ConfigurationLoader interface.
type MockConfigurationLoader struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationLoaderMockRecorder
}

// MockConfigurationLoaderMockRecorder is the mock recorder for MockConfigurationLoader.
type MockConfigurationLoaderMockRecorder struct {
	mock *MockConfigurationLoader
}

// NewMockConfigurationLoader creates a new mock instance.
func NewMockConfigurationLoader(ctrl *gomock.Controller) *MockConfigurationLoader {
	mock := &MockConfigurationLoader{ctrl: ctrl}
	mock.recorder = &MockConfigurationLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurationLoader) EXPECT() *MockConfigurationLoaderMockRecorder {
	return m.recorder
}

// LoadConfiguration mocks base method.
func (m *MockConfigurationLoader) LoadConfiguration(arg0 context.Context, arg1 recipes.RecipeMetadata) (*Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadConfiguration indicates an expected call of LoadConfiguration.
func (mr *MockConfigurationLoaderMockRecorder) LoadConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadConfiguration", reflect.TypeOf((*MockConfigurationLoader)(nil).LoadConfiguration), arg0, arg1)
}

// Lookup mocks base method.
func (m *MockConfigurationLoader) Lookup(arg0 context.Context, arg1 recipes.RecipeMetadata) (*RecipeDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Lookup", arg0, arg1)
	ret0, _ := ret[0].(*RecipeDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Lookup indicates an expected call of Lookup.
func (mr *MockConfigurationLoaderMockRecorder) Lookup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lookup", reflect.TypeOf((*MockConfigurationLoader)(nil).Lookup), arg0, arg1)
}
