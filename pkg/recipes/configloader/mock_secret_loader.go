// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/radius-project/radius/pkg/recipes/configloader (interfaces: SecretsLoader)

// Package configloader is a generated GoMock package.
package configloader

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v20231001preview "github.com/radius-project/radius/pkg/corerp/api/v20231001preview"
)

// MockSecretsLoader is a mock of SecretsLoader interface.
type MockSecretsLoader struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsLoaderMockRecorder
}

// MockSecretsLoaderMockRecorder is the mock recorder for MockSecretsLoader.
type MockSecretsLoaderMockRecorder struct {
	mock *MockSecretsLoader
}

// NewMockSecretsLoader creates a new mock instance.
func NewMockSecretsLoader(ctrl *gomock.Controller) *MockSecretsLoader {
	mock := &MockSecretsLoader{ctrl: ctrl}
	mock.recorder = &MockSecretsLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsLoader) EXPECT() *MockSecretsLoaderMockRecorder {
	return m.recorder
}

// LoadSecrets mocks base method.
func (m *MockSecretsLoader) LoadSecrets(arg0 context.Context, arg1 string) (v20231001preview.SecretStoresClientListSecretsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadSecrets", arg0, arg1)
	ret0, _ := ret[0].(v20231001preview.SecretStoresClientListSecretsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadSecrets indicates an expected call of LoadSecrets.
func (mr *MockSecretsLoaderMockRecorder) LoadSecrets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadSecrets", reflect.TypeOf((*MockSecretsLoader)(nil).LoadSecrets), arg0, arg1)
}
