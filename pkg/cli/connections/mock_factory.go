// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/connections (interfaces: Factory)

// Package connections is a generated GoMock package.
package connections

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clients "github.com/project-radius/radius/pkg/cli/clients"
	workspaces "github.com/project-radius/radius/pkg/cli/workspaces"
)

// MockFactory is a mock of Factory interface.
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
}

// MockFactoryMockRecorder is the mock recorder for MockFactory.
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance.
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// CreateApplicationsManagementClient mocks base method.
func (m *MockFactory) CreateApplicationsManagementClient(arg0 context.Context, arg1 workspaces.Workspace) (clients.ApplicationsManagementClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateApplicationsManagementClient", arg0, arg1)
	ret0, _ := ret[0].(clients.ApplicationsManagementClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateApplicationsManagementClient indicates an expected call of CreateApplicationsManagementClient.
func (mr *MockFactoryMockRecorder) CreateApplicationsManagementClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplicationsManagementClient", reflect.TypeOf((*MockFactory)(nil).CreateApplicationsManagementClient), arg0, arg1)
}

// CreateDeploymentClient mocks base method.
func (m *MockFactory) CreateDeploymentClient(arg0 context.Context, arg1 workspaces.Workspace) (clients.DeploymentClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeploymentClient", arg0, arg1)
	ret0, _ := ret[0].(clients.DeploymentClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDeploymentClient indicates an expected call of CreateDeploymentClient.
func (mr *MockFactoryMockRecorder) CreateDeploymentClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeploymentClient", reflect.TypeOf((*MockFactory)(nil).CreateDeploymentClient), arg0, arg1)
}

// CreateDiagnosticsClient mocks base method.
func (m *MockFactory) CreateDiagnosticsClient(arg0 context.Context, arg1 workspaces.Workspace) (clients.DiagnosticsClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDiagnosticsClient", arg0, arg1)
	ret0, _ := ret[0].(clients.DiagnosticsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDiagnosticsClient indicates an expected call of CreateDiagnosticsClient.
func (mr *MockFactoryMockRecorder) CreateDiagnosticsClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDiagnosticsClient", reflect.TypeOf((*MockFactory)(nil).CreateDiagnosticsClient), arg0, arg1)
}

// CreateServerLifecycleClient mocks base method.
func (m *MockFactory) CreateServerLifecycleClient(arg0 context.Context, arg1 workspaces.Workspace) (clients.ServerLifecycleClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateServerLifecycleClient", arg0, arg1)
	ret0, _ := ret[0].(clients.ServerLifecycleClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateServerLifecycleClient indicates an expected call of CreateServerLifecycleClient.
func (mr *MockFactoryMockRecorder) CreateServerLifecycleClient(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateServerLifecycleClient", reflect.TypeOf((*MockFactory)(nil).CreateServerLifecycleClient), arg0, arg1)
}
