// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/kubernetes/logstream (interfaces: Interface)

// Package logstream is a generated GoMock package.
package logstream

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
//
// # Function Explanation
// 
//	MockInterface is a function that creates a new MockInterface object with a given controller, and sets the recorder to a 
//	new MockInterfaceMockRecorder object. It also handles any errors that may occur during the creation of the MockInterface
//	 object.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
//
// # Function Explanation
// 
//	MockInterface's EXPECT() function creates and returns a MockInterfaceMockRecorder object which can be used to set 
//	expectations on the MockInterface's methods. If any of the expectations are not met, an error will be returned.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Stream mocks base method.
//
// # Function Explanation
// 
//	MockInterface.Stream is a function that mocks the Stream function of an interface. It takes in a context and Options and
//	 returns an error. If an error is returned, the caller should handle it accordingly.
func (m *MockInterface) Stream(arg0 context.Context, arg1 Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stream", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Stream indicates an expected call of Stream.
//
// # Function Explanation
// 
//	This function, Stream, records a call to the Stream method of the MockInterface mock object, with the given parameters, 
//	and returns a gomock.Call object for error handling.
func (mr *MockInterfaceMockRecorder) Stream(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stream", reflect.TypeOf((*MockInterface)(nil).Stream), arg0, arg1)
}
