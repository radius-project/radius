// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/output (interfaces: Interface)

// Package output is a generated GoMock package.
package output

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function creates a new mock object of type MockInterface, using the given controller. It also creates a recorder 
//	for the mock object, which can be used to record expectations and verify them later.
//
// </AiDoc: End of OpenAI comments>
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function returns a MockInterfaceMockRecorder object, which is used to record expectations for the MockInterface.
//
// </AiDoc: End of OpenAI comments>
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Write mocks base method.
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function is a mock interface that takes three arguments (a string, an "any" type, and a FormatterOptions type) and 
//	returns an error.
//
// </AiDoc: End of OpenAI comments>
func (m *MockInterface) Write(arg0 string, arg1 any, arg2 FormatterOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function is creating a record of a call to the Write function of the MockInterface. It takes three arguments and 
//	records the call with the given arguments.
//
// </AiDoc: End of OpenAI comments>
func (mr *MockInterfaceMockRecorder) Write(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockInterface)(nil).Write), arg0, arg1, arg2)
}
