// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

package output

import "fmt"

// Step represents a logical step that's being executed.
type Step struct {
}

// LogInfo logs a message that is displayed to the user by default.
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function is used to print out a message with the given format and values. It takes a format string and a variable 
//	number of arguments and prints out the formatted message followed by a new line.
//
// </AiDoc: End of OpenAI comments>
func LogInfo(format string, v ...any) {
	fmt.Printf(format, v...)
	fmt.Println()
}

// BeginStep starts execution of a step
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	
 
//	This function is used to log information and start a new step. It takes a format string and any number of additional 
//	arguments, and logs the formatted string. It then returns a Step object.
//
// </AiDoc: End of OpenAI comments>
func BeginStep(format string, v ...any) Step {
	LogInfo(format, v...)
	return Step{}
}

// CompleteStep ends execution of a step
//
// <AiDoc: The following comments were generated by OpenAI explaining the code as it existed at the time of this commit>
//	This function is used to complete a given step. It does not perform any action, but can be used to indicate that a step 
//	has been completed.
//
// </AiDoc: End of OpenAI comments>
func CompleteStep(step Step) {
}
