// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/framework (interfaces: ConfigFileInterface)

// Package framework is a generated GoMock package.
package framework

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	workspaces "github.com/project-radius/radius/pkg/cli/workspaces"
	viper "github.com/spf13/viper"
)

// MockConfigFileInterface is a mock of ConfigFileInterface interface.
type MockConfigFileInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigFileInterfaceMockRecorder
}

// MockConfigFileInterfaceMockRecorder is the mock recorder for MockConfigFileInterface.
type MockConfigFileInterfaceMockRecorder struct {
	mock *MockConfigFileInterface
}

// NewMockConfigFileInterface creates a new mock instance.
func NewMockConfigFileInterface(ctrl *gomock.Controller) *MockConfigFileInterface {
	mock := &MockConfigFileInterface{ctrl: ctrl}
	mock.recorder = &MockConfigFileInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigFileInterface) EXPECT() *MockConfigFileInterfaceMockRecorder {
	return m.recorder
}

// ConfigFromContext mocks base method.
func (m *MockConfigFileInterface) ConfigFromContext(arg0 context.Context) *viper.Viper {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConfigFromContext", arg0)
	ret0, _ := ret[0].(*viper.Viper)
	return ret0
}

// ConfigFromContext indicates an expected call of ConfigFromContext.
func (mr *MockConfigFileInterfaceMockRecorder) ConfigFromContext(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConfigFromContext", reflect.TypeOf((*MockConfigFileInterface)(nil).ConfigFromContext), arg0)
}

// DeleteWorkspace mocks base method.
func (m *MockConfigFileInterface) DeleteWorkspace(arg0 context.Context, arg1 *viper.Viper, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWorkspace", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWorkspace indicates an expected call of DeleteWorkspace.
func (mr *MockConfigFileInterfaceMockRecorder) DeleteWorkspace(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWorkspace", reflect.TypeOf((*MockConfigFileInterface)(nil).DeleteWorkspace), arg0, arg1, arg2)
}

// EditWorkspaces mocks base method.
func (m *MockConfigFileInterface) EditWorkspaces(arg0 context.Context, arg1 *viper.Viper, arg2 *workspaces.Workspace, arg3 []interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditWorkspaces", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditWorkspaces indicates an expected call of EditWorkspaces.
func (mr *MockConfigFileInterfaceMockRecorder) EditWorkspaces(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditWorkspaces", reflect.TypeOf((*MockConfigFileInterface)(nil).EditWorkspaces), arg0, arg1, arg2, arg3)
}

// SetDefaultWorkspace mocks base method.
func (m *MockConfigFileInterface) SetDefaultWorkspace(arg0 context.Context, arg1 *viper.Viper, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetDefaultWorkspace", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetDefaultWorkspace indicates an expected call of SetDefaultWorkspace.
func (mr *MockConfigFileInterfaceMockRecorder) SetDefaultWorkspace(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDefaultWorkspace", reflect.TypeOf((*MockConfigFileInterface)(nil).SetDefaultWorkspace), arg0, arg1, arg2)
}
