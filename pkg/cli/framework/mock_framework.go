// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/framework (interfaces: Factory)

// Package framework is a generated GoMock package.
package framework

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	shared "github.com/project-radius/radius/pkg/cli/cmd/shared"
	connections "github.com/project-radius/radius/pkg/cli/connections"
	output "github.com/project-radius/radius/pkg/cli/output"
)

// MockFactory is a mock of Factory interface.
type MockFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFactoryMockRecorder
}

// MockFactoryMockRecorder is the mock recorder for MockFactory.
type MockFactoryMockRecorder struct {
	mock *MockFactory
}

// NewMockFactory creates a new mock instance.
func NewMockFactory(ctrl *gomock.Controller) *MockFactory {
	mock := &MockFactory{ctrl: ctrl}
	mock.recorder = &MockFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFactory) EXPECT() *MockFactoryMockRecorder {
	return m.recorder
}

// GetConfigHolder mocks base method.
func (m *MockFactory) GetConfigHolder() *shared.ConfigHolder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigHolder")
	ret0, _ := ret[0].(*shared.ConfigHolder)
	return ret0
}

// GetConfigHolder indicates an expected call of GetConfigHolder.
func (mr *MockFactoryMockRecorder) GetConfigHolder() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigHolder", reflect.TypeOf((*MockFactory)(nil).GetConfigHolder))
}

// GetConnectionFactory mocks base method.
func (m *MockFactory) GetConnectionFactory() connections.Factory {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnectionFactory")
	ret0, _ := ret[0].(connections.Factory)
	return ret0
}

// GetConnectionFactory indicates an expected call of GetConnectionFactory.
func (mr *MockFactoryMockRecorder) GetConnectionFactory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnectionFactory", reflect.TypeOf((*MockFactory)(nil).GetConnectionFactory))
}

// GetOutput mocks base method.
func (m *MockFactory) GetOutput() output.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOutput")
	ret0, _ := ret[0].(output.Interface)
	return ret0
}

// GetOutput indicates an expected call of GetOutput.
func (mr *MockFactoryMockRecorder) GetOutput() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOutput", reflect.TypeOf((*MockFactory)(nil).GetOutput))
}
