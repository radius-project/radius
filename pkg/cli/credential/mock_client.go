// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/cli/credential (interfaces: Interface)

// Package credential is a generated GoMock package.
package credential

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v20220901privatepreview "github.com/project-radius/radius/pkg/ucp/api/v20220901privatepreview"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// CreateCredential mocks base method.
func (m *MockInterface) CreateCredential(arg0 context.Context, arg1, arg2, arg3 string, arg4 v20220901privatepreview.CredentialResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCredential", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCredential indicates an expected call of CreateCredential.
func (mr *MockInterfaceMockRecorder) CreateCredential(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCredential", reflect.TypeOf((*MockInterface)(nil).CreateCredential), arg0, arg1, arg2, arg3, arg4)
}

// DeleteCredential mocks base method.
func (m *MockInterface) DeleteCredential(arg0 context.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCredential", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCredential indicates an expected call of DeleteCredential.
func (mr *MockInterfaceMockRecorder) DeleteCredential(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCredential", reflect.TypeOf((*MockInterface)(nil).DeleteCredential), arg0, arg1, arg2, arg3)
}

// GetCredential mocks base method.
func (m *MockInterface) GetCredential(arg0 context.Context, arg1, arg2, arg3 string) (ProviderCredentialConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredential", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(ProviderCredentialConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredential indicates an expected call of GetCredential.
func (mr *MockInterfaceMockRecorder) GetCredential(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredential", reflect.TypeOf((*MockInterface)(nil).GetCredential), arg0, arg1, arg2, arg3)
}

// ListCredential mocks base method.
func (m *MockInterface) ListCredential(arg0 context.Context, arg1, arg2 string) ([]CloudProviderStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCredential", arg0, arg1, arg2)
	ret0, _ := ret[0].([]CloudProviderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCredential indicates an expected call of ListCredential.
func (mr *MockInterfaceMockRecorder) ListCredential(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCredential", reflect.TypeOf((*MockInterface)(nil).ListCredential), arg0, arg1, arg2)
}
