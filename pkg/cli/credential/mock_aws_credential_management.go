// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/radius-project/radius/pkg/cli/credential (interfaces: AWSCredentialManagementClientInterface)
//
// Generated by this command:
//
//	mockgen -typed -destination=./mock_aws_credential_management.go -package=credential -self_package github.com/radius-project/radius/pkg/cli/credential github.com/radius-project/radius/pkg/cli/credential AWSCredentialManagementClientInterface
//

// Package credential is a generated GoMock package.
package credential

import (
	context "context"
	reflect "reflect"

	v20231001preview "github.com/radius-project/radius/pkg/ucp/api/v20231001preview"
	gomock "go.uber.org/mock/gomock"
)

// MockAWSCredentialManagementClientInterface is a mock of AWSCredentialManagementClientInterface interface.
type MockAWSCredentialManagementClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAWSCredentialManagementClientInterfaceMockRecorder
}

// MockAWSCredentialManagementClientInterfaceMockRecorder is the mock recorder for MockAWSCredentialManagementClientInterface.
type MockAWSCredentialManagementClientInterfaceMockRecorder struct {
	mock *MockAWSCredentialManagementClientInterface
}

// NewMockAWSCredentialManagementClientInterface creates a new mock instance.
func NewMockAWSCredentialManagementClientInterface(ctrl *gomock.Controller) *MockAWSCredentialManagementClientInterface {
	mock := &MockAWSCredentialManagementClientInterface{ctrl: ctrl}
	mock.recorder = &MockAWSCredentialManagementClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSCredentialManagementClientInterface) EXPECT() *MockAWSCredentialManagementClientInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockAWSCredentialManagementClientInterface) Delete(arg0 context.Context, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockAWSCredentialManagementClientInterfaceMockRecorder) Delete(arg0, arg1 any) *MockAWSCredentialManagementClientInterfaceDeleteCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAWSCredentialManagementClientInterface)(nil).Delete), arg0, arg1)
	return &MockAWSCredentialManagementClientInterfaceDeleteCall{Call: call}
}

// MockAWSCredentialManagementClientInterfaceDeleteCall wrap *gomock.Call
type MockAWSCredentialManagementClientInterfaceDeleteCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAWSCredentialManagementClientInterfaceDeleteCall) Return(arg0 bool, arg1 error) *MockAWSCredentialManagementClientInterfaceDeleteCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAWSCredentialManagementClientInterfaceDeleteCall) Do(f func(context.Context, string) (bool, error)) *MockAWSCredentialManagementClientInterfaceDeleteCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAWSCredentialManagementClientInterfaceDeleteCall) DoAndReturn(f func(context.Context, string) (bool, error)) *MockAWSCredentialManagementClientInterfaceDeleteCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Get mocks base method.
func (m *MockAWSCredentialManagementClientInterface) Get(arg0 context.Context, arg1 string) (ProviderCredentialConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(ProviderCredentialConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAWSCredentialManagementClientInterfaceMockRecorder) Get(arg0, arg1 any) *MockAWSCredentialManagementClientInterfaceGetCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAWSCredentialManagementClientInterface)(nil).Get), arg0, arg1)
	return &MockAWSCredentialManagementClientInterfaceGetCall{Call: call}
}

// MockAWSCredentialManagementClientInterfaceGetCall wrap *gomock.Call
type MockAWSCredentialManagementClientInterfaceGetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAWSCredentialManagementClientInterfaceGetCall) Return(arg0 ProviderCredentialConfiguration, arg1 error) *MockAWSCredentialManagementClientInterfaceGetCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAWSCredentialManagementClientInterfaceGetCall) Do(f func(context.Context, string) (ProviderCredentialConfiguration, error)) *MockAWSCredentialManagementClientInterfaceGetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAWSCredentialManagementClientInterfaceGetCall) DoAndReturn(f func(context.Context, string) (ProviderCredentialConfiguration, error)) *MockAWSCredentialManagementClientInterfaceGetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// List mocks base method.
func (m *MockAWSCredentialManagementClientInterface) List(arg0 context.Context) ([]CloudProviderStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]CloudProviderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockAWSCredentialManagementClientInterfaceMockRecorder) List(arg0 any) *MockAWSCredentialManagementClientInterfaceListCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockAWSCredentialManagementClientInterface)(nil).List), arg0)
	return &MockAWSCredentialManagementClientInterfaceListCall{Call: call}
}

// MockAWSCredentialManagementClientInterfaceListCall wrap *gomock.Call
type MockAWSCredentialManagementClientInterfaceListCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAWSCredentialManagementClientInterfaceListCall) Return(arg0 []CloudProviderStatus, arg1 error) *MockAWSCredentialManagementClientInterfaceListCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAWSCredentialManagementClientInterfaceListCall) Do(f func(context.Context) ([]CloudProviderStatus, error)) *MockAWSCredentialManagementClientInterfaceListCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAWSCredentialManagementClientInterfaceListCall) DoAndReturn(f func(context.Context) ([]CloudProviderStatus, error)) *MockAWSCredentialManagementClientInterfaceListCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Put mocks base method.
func (m *MockAWSCredentialManagementClientInterface) Put(arg0 context.Context, arg1 v20231001preview.AwsCredentialResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockAWSCredentialManagementClientInterfaceMockRecorder) Put(arg0, arg1 any) *MockAWSCredentialManagementClientInterfacePutCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockAWSCredentialManagementClientInterface)(nil).Put), arg0, arg1)
	return &MockAWSCredentialManagementClientInterfacePutCall{Call: call}
}

// MockAWSCredentialManagementClientInterfacePutCall wrap *gomock.Call
type MockAWSCredentialManagementClientInterfacePutCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockAWSCredentialManagementClientInterfacePutCall) Return(arg0 error) *MockAWSCredentialManagementClientInterfacePutCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockAWSCredentialManagementClientInterfacePutCall) Do(f func(context.Context, v20231001preview.AwsCredentialResource) error) *MockAWSCredentialManagementClientInterfacePutCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockAWSCredentialManagementClientInterfacePutCall) DoAndReturn(f func(context.Context, v20231001preview.AwsCredentialResource) error) *MockAWSCredentialManagementClientInterfacePutCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
