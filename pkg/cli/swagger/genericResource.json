{
    "swagger": "2.0",
    "info": {
      "title": "Generic Resrource Management APIs",
      "description": "REST APIs for Generic Resource",
      "version": "2022-03-15-privatepreview"
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "flow": "implicit",
        "description": "Azure Active Directory OAuth2 Flow.",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    },
    "paths": {
      "/{rootScope}/providers/{resourceType}": {
        "get": {
          "description": "Lists information about all resources of the given resource type in the given root scope",
          "operationId": "GenericResources_ListByRootScope",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "GenericResourceListByRootScope": {
              "$ref": ""
            }
          },
          "tags": [
            "GenericResources"
          ],
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/RootScopeParameter"
            },
            {
                "$ref": "#/parameters/ResourceType"
            }
          ],
          "responses": {
            "200": {
              "description": "List of generic resources",
              "schema": {
                "$ref": "#/definitions/GenericResourcesList"
              }
            },
            "default": {
              "description": "Error response describing the reason for operation failure",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          },
          "deprecated": false,
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/{rootScope}/providers/{resourceType}/{resourceName}": {
        "get": {
          "description": "Retrieves information about a generic resource with the name given of the type given within the root scope",
          "operationId": "GenericResources_Get",
          "produces": [
            "application/json"
          ],
          "tags": [
            "GenericResources"
          ],
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/RootScopeParameter"
            },
            {
              "$ref": "#/parameters/ResourceType"
            },
            {
              "$ref": "#/parameters/GenericResourceNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Generic resource",
              "schema": {
                "$ref": "#/definitions/GenericResource"
              }
            },
            "default": {
              "description": "Error response describing the reason for operation failure",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "description": "Creates or updates a Generic resource",
          "operationId": "GenericResources_CreateOrUpdate",
          "produces": [
            "application/json"
          ],
          "tags": [
            "GenericResources"
          ],
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/RootScopeParameter"
            },
            {
              "$ref": "#/parameters/ResourceType"
            },
            {
              "$ref": "#/parameters/GenericResourceNameParameter"
            },
            {
              "name": "GenericResourceParameters",
              "description": "generic resource create parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/GenericResource"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request was successful; response contains the generic resource",
              "schema": {
                "$ref": "#/definitions/GenericResource"
              }
            },
            "201": {
              "description": "The request was successful, resource will be updated asynchronously",
              "schema": {
                "$ref": "#/definitions/GenericResource"
              }
            },
            "default": {
              "description": "Error response describing the reason for operation failure",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "description": "Deletes an existing Generic resource",
          "operationId": "GenericResources_Delete",
          "produces": [
            "application/json"
          ],
          "tags": [
            "GenericResources"
          ],
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/RootScopeParameter"
            },
            {
              "$ref": "#/parameters/ResourceType"
            },
            {
              "$ref": "#/parameters/GenericResourceNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resource has been successfully deleted."
            },
            "202": {
              "description": "The resource will be deleted asynchronously."
            },
            "204": {
              "description": "The resource does not exist."
            },
            "default": {
              "description": "Error response describing the reason for operation failure",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "GenericResourcesList": {
        "description": "Object that includes an array of GenericResources and a possible link for next set",
        "type": "object",
        "properties": {
          "value": {
            "description": "List of GenericResources resources",
            "type": "array",
            "items": {
              "$ref": "#/definitions/GenericResource"
            }
          },
          "nextLink": {
            "description": "The link used to fetch the next page of resource list.",
            "type": "string"
          }
        }
      },
      "GenericResource": {
        "description": "Generic resource",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/definitions/TrackedResource"
          }
        ],
        "required": [
          "properties"
        ],
        "properties": {
          "systemData": {
            "$ref": "#/definitions/systemData"
          },
          "properties": {
            "type": "object"
          }
        }
      },
      "GenericResourceProperties": {
        "type": "object",
        "properties": {
          "propertyKey": {
            "type": "string"
          },
          "propertyValue": {
            "type":"object"
          }
        }
      },
      "ErrorResponse": {
        "title": "Error response",
        "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
        "type": "object",
        "properties": {
          "error": {
            "description": "The error object.",
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      },
      "ErrorDetail": {
        "description": "The error detail.",
        "type": "object",
        "properties": {
          "code": {
            "readOnly": true,
            "type": "string",
            "description": "The error code."
          },
          "message": {
            "readOnly": true,
            "type": "string",
            "description": "The error message."
          },
          "target": {
            "readOnly": true,
            "type": "string",
            "description": "The error target."
          },
          "details": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "x-ms-identifiers": [
              "message",
              "target"
            ],
            "description": "The error details."
          },
          "additionalInfo": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/definitions/ErrorAdditionalInfo"
            },
            "x-ms-identifiers": [],
            "description": "The error additional info."
          }
        }
      },
      "ErrorAdditionalInfo": {
        "type": "object",
        "properties": {
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The additional info type."
          },
          "info": {
            "readOnly": true,
            "type": "object",
            "description": "The additional info."
          }
        },
        "description": "The resource management error additional info."
      },
      "TrackedResource": {
        "title": "Tracked Resource",
        "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ],
            "description": "Resource tags."
          },
          "location": {
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ],
            "description": "The geo-location where the resource lives"
          }
        },
        "required": [
          "location"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ]
      },
      "Resource": {
        "title": "Resource",
        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "The name of the resource"
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
          }
        },
        "x-ms-azure-resource": true
      },
      "systemData": {
        "description": "Metadata pertaining to creation and last modification of the resource.",
        "type": "object",
        "readOnly": true,
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "The identity that created the resource."
          },
          "createdByType": {
            "type": "string",
            "description": "The type of identity that created the resource.",
            "enum": [
              "User",
              "Application",
              "ManagedIdentity",
              "Key"
            ],
            "x-ms-enum": {
              "name": "createdByType",
              "modelAsString": true
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of resource creation (UTC)."
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The identity that last modified the resource."
          },
          "lastModifiedByType": {
            "type": "string",
            "description": "The type of identity that last modified the resource.",
            "enum": [
              "User",
              "Application",
              "ManagedIdentity",
              "Key"
            ],
            "x-ms-enum": {
              "name": "createdByType",
              "modelAsString": true
            }
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of resource last modification (UTC)"
          }
        }
      }
    },
    "parameters": {
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "The API version to use for this operation.",
        "minLength": 1
      },
      "GenericResourceNameParameter": {
        "description": "The name of the generic resource",
        "name": "resourceName",
        "in": "path",
        "required": true,
        "type": "string",
        "pattern": "^[a-z0-9]+(-[a-z0-9]+)*",
        "maxLength": 128,
        "x-ms-parameter-location": "method"
      },
      "RootScopeParameter": {
        "name": "rootScope",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The scope in which the resource is present. For Azure resource this would be /subscriptions/{subscriptionID}/resourceGroup/{resourcegroupID}",
        "minLength": 1
      },
      "ResourceType": {
        "name": "resourceType",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The azure resource type. For example RedisCache, RabbitMQ and other",
        "minLength": 1
      }
    }
  }