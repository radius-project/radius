// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/radius-project/radius/pkg/cli/clients (interfaces: ApplicationsManagementClient)
//
// Generated by this command:
//
//	mockgen -destination=./mock_applicationsclient.go -package=clients -self_package github.com/radius-project/radius/pkg/cli/clients github.com/radius-project/radius/pkg/cli/clients ApplicationsManagementClient
//

// Package clients is a generated GoMock package.
package clients

import (
	context "context"
	reflect "reflect"

	generated "github.com/radius-project/radius/pkg/cli/clients_new/generated"
	v20231001preview "github.com/radius-project/radius/pkg/corerp/api/v20231001preview"
	v20231001preview0 "github.com/radius-project/radius/pkg/ucp/api/v20231001preview"
	gomock "go.uber.org/mock/gomock"
)

// MockApplicationsManagementClient is a mock of ApplicationsManagementClient interface.
type MockApplicationsManagementClient struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationsManagementClientMockRecorder
}

// MockApplicationsManagementClientMockRecorder is the mock recorder for MockApplicationsManagementClient.
type MockApplicationsManagementClientMockRecorder struct {
	mock *MockApplicationsManagementClient
}

// NewMockApplicationsManagementClient creates a new mock instance.
func NewMockApplicationsManagementClient(ctrl *gomock.Controller) *MockApplicationsManagementClient {
	mock := &MockApplicationsManagementClient{ctrl: ctrl}
	mock.recorder = &MockApplicationsManagementClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApplicationsManagementClient) EXPECT() *MockApplicationsManagementClientMockRecorder {
	return m.recorder
}

// CreateApplicationIfNotFound mocks base method.
func (m *MockApplicationsManagementClient) CreateApplicationIfNotFound(arg0 context.Context, arg1 string, arg2 *v20231001preview.ApplicationResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateApplicationIfNotFound", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateApplicationIfNotFound indicates an expected call of CreateApplicationIfNotFound.
func (mr *MockApplicationsManagementClientMockRecorder) CreateApplicationIfNotFound(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplicationIfNotFound", reflect.TypeOf((*MockApplicationsManagementClient)(nil).CreateApplicationIfNotFound), arg0, arg1, arg2)
}

// CreateOrUpdateApplication mocks base method.
func (m *MockApplicationsManagementClient) CreateOrUpdateApplication(arg0 context.Context, arg1 string, arg2 *v20231001preview.ApplicationResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateApplication", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdateApplication indicates an expected call of CreateOrUpdateApplication.
func (mr *MockApplicationsManagementClientMockRecorder) CreateOrUpdateApplication(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateApplication", reflect.TypeOf((*MockApplicationsManagementClient)(nil).CreateOrUpdateApplication), arg0, arg1, arg2)
}

// CreateOrUpdateEnvironment mocks base method.
func (m *MockApplicationsManagementClient) CreateOrUpdateEnvironment(arg0 context.Context, arg1 string, arg2 *v20231001preview.EnvironmentResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateEnvironment", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdateEnvironment indicates an expected call of CreateOrUpdateEnvironment.
func (mr *MockApplicationsManagementClientMockRecorder) CreateOrUpdateEnvironment(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateEnvironment", reflect.TypeOf((*MockApplicationsManagementClient)(nil).CreateOrUpdateEnvironment), arg0, arg1, arg2)
}

// CreateOrUpdateResourceGroup mocks base method.
func (m *MockApplicationsManagementClient) CreateOrUpdateResourceGroup(arg0 context.Context, arg1, arg2 string, arg3 *v20231001preview0.ResourceGroupResource) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateResourceGroup", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdateResourceGroup indicates an expected call of CreateOrUpdateResourceGroup.
func (mr *MockApplicationsManagementClientMockRecorder) CreateOrUpdateResourceGroup(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateResourceGroup", reflect.TypeOf((*MockApplicationsManagementClient)(nil).CreateOrUpdateResourceGroup), arg0, arg1, arg2, arg3)
}

// DeleteApplication mocks base method.
func (m *MockApplicationsManagementClient) DeleteApplication(arg0 context.Context, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteApplication", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteApplication indicates an expected call of DeleteApplication.
func (mr *MockApplicationsManagementClientMockRecorder) DeleteApplication(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteApplication", reflect.TypeOf((*MockApplicationsManagementClient)(nil).DeleteApplication), arg0, arg1)
}

// DeleteEnvironment mocks base method.
func (m *MockApplicationsManagementClient) DeleteEnvironment(arg0 context.Context, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEnvironment", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteEnvironment indicates an expected call of DeleteEnvironment.
func (mr *MockApplicationsManagementClientMockRecorder) DeleteEnvironment(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEnvironment", reflect.TypeOf((*MockApplicationsManagementClient)(nil).DeleteEnvironment), arg0, arg1)
}

// DeleteResource mocks base method.
func (m *MockApplicationsManagementClient) DeleteResource(arg0 context.Context, arg1, arg2 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResource", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteResource indicates an expected call of DeleteResource.
func (mr *MockApplicationsManagementClientMockRecorder) DeleteResource(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResource", reflect.TypeOf((*MockApplicationsManagementClient)(nil).DeleteResource), arg0, arg1, arg2)
}

// DeleteResourceGroup mocks base method.
func (m *MockApplicationsManagementClient) DeleteResourceGroup(arg0 context.Context, arg1, arg2 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResourceGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteResourceGroup indicates an expected call of DeleteResourceGroup.
func (mr *MockApplicationsManagementClientMockRecorder) DeleteResourceGroup(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResourceGroup", reflect.TypeOf((*MockApplicationsManagementClient)(nil).DeleteResourceGroup), arg0, arg1, arg2)
}

// GetApplication mocks base method.
func (m *MockApplicationsManagementClient) GetApplication(arg0 context.Context, arg1 string) (v20231001preview.ApplicationResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplication", arg0, arg1)
	ret0, _ := ret[0].(v20231001preview.ApplicationResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApplication indicates an expected call of GetApplication.
func (mr *MockApplicationsManagementClientMockRecorder) GetApplication(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplication", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetApplication), arg0, arg1)
}

// GetApplicationGraph mocks base method.
func (m *MockApplicationsManagementClient) GetApplicationGraph(arg0 context.Context, arg1 string) (v20231001preview.ApplicationGraphResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplicationGraph", arg0, arg1)
	ret0, _ := ret[0].(v20231001preview.ApplicationGraphResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApplicationGraph indicates an expected call of GetApplicationGraph.
func (mr *MockApplicationsManagementClientMockRecorder) GetApplicationGraph(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplicationGraph", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetApplicationGraph), arg0, arg1)
}

// GetEnvironment mocks base method.
func (m *MockApplicationsManagementClient) GetEnvironment(arg0 context.Context, arg1 string) (v20231001preview.EnvironmentResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironment", arg0, arg1)
	ret0, _ := ret[0].(v20231001preview.EnvironmentResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironment indicates an expected call of GetEnvironment.
func (mr *MockApplicationsManagementClientMockRecorder) GetEnvironment(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironment", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetEnvironment), arg0, arg1)
}

// GetRecipeMetadata mocks base method.
func (m *MockApplicationsManagementClient) GetRecipeMetadata(arg0 context.Context, arg1 string, arg2 v20231001preview.RecipeGetMetadata) (v20231001preview.RecipeGetMetadataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecipeMetadata", arg0, arg1, arg2)
	ret0, _ := ret[0].(v20231001preview.RecipeGetMetadataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecipeMetadata indicates an expected call of GetRecipeMetadata.
func (mr *MockApplicationsManagementClientMockRecorder) GetRecipeMetadata(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecipeMetadata", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetRecipeMetadata), arg0, arg1, arg2)
}

// GetResource mocks base method.
func (m *MockApplicationsManagementClient) GetResource(arg0 context.Context, arg1, arg2 string) (generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResource", arg0, arg1, arg2)
	ret0, _ := ret[0].(generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResource indicates an expected call of GetResource.
func (mr *MockApplicationsManagementClientMockRecorder) GetResource(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResource", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetResource), arg0, arg1, arg2)
}

// GetResourceGroup mocks base method.
func (m *MockApplicationsManagementClient) GetResourceGroup(arg0 context.Context, arg1, arg2 string) (v20231001preview0.ResourceGroupResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(v20231001preview0.ResourceGroupResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceGroup indicates an expected call of GetResourceGroup.
func (mr *MockApplicationsManagementClientMockRecorder) GetResourceGroup(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceGroup", reflect.TypeOf((*MockApplicationsManagementClient)(nil).GetResourceGroup), arg0, arg1, arg2)
}

// ListApplications mocks base method.
func (m *MockApplicationsManagementClient) ListApplications(arg0 context.Context) ([]v20231001preview.ApplicationResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListApplications", arg0)
	ret0, _ := ret[0].([]v20231001preview.ApplicationResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListApplications indicates an expected call of ListApplications.
func (mr *MockApplicationsManagementClientMockRecorder) ListApplications(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListApplications", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListApplications), arg0)
}

// ListEnvironments mocks base method.
func (m *MockApplicationsManagementClient) ListEnvironments(arg0 context.Context) ([]v20231001preview.EnvironmentResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEnvironments", arg0)
	ret0, _ := ret[0].([]v20231001preview.EnvironmentResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEnvironments indicates an expected call of ListEnvironments.
func (mr *MockApplicationsManagementClientMockRecorder) ListEnvironments(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEnvironments", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListEnvironments), arg0)
}

// ListEnvironmentsAll mocks base method.
func (m *MockApplicationsManagementClient) ListEnvironmentsAll(arg0 context.Context) ([]v20231001preview.EnvironmentResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEnvironmentsAll", arg0)
	ret0, _ := ret[0].([]v20231001preview.EnvironmentResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEnvironmentsAll indicates an expected call of ListEnvironmentsAll.
func (mr *MockApplicationsManagementClientMockRecorder) ListEnvironmentsAll(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEnvironmentsAll", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListEnvironmentsAll), arg0)
}

// ListResourceGroups mocks base method.
func (m *MockApplicationsManagementClient) ListResourceGroups(arg0 context.Context, arg1 string) ([]v20231001preview0.ResourceGroupResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourceGroups", arg0, arg1)
	ret0, _ := ret[0].([]v20231001preview0.ResourceGroupResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourceGroups indicates an expected call of ListResourceGroups.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourceGroups(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourceGroups", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourceGroups), arg0, arg1)
}

// ListResourcesInApplication mocks base method.
func (m *MockApplicationsManagementClient) ListResourcesInApplication(arg0 context.Context, arg1 string) ([]generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourcesInApplication", arg0, arg1)
	ret0, _ := ret[0].([]generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourcesInApplication indicates an expected call of ListResourcesInApplication.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourcesInApplication(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourcesInApplication", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourcesInApplication), arg0, arg1)
}

// ListResourcesInEnvironment mocks base method.
func (m *MockApplicationsManagementClient) ListResourcesInEnvironment(arg0 context.Context, arg1 string) ([]generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourcesInEnvironment", arg0, arg1)
	ret0, _ := ret[0].([]generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourcesInEnvironment indicates an expected call of ListResourcesInEnvironment.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourcesInEnvironment(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourcesInEnvironment", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourcesInEnvironment), arg0, arg1)
}

// ListResourcesOfType mocks base method.
func (m *MockApplicationsManagementClient) ListResourcesOfType(arg0 context.Context, arg1 string) ([]generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourcesOfType", arg0, arg1)
	ret0, _ := ret[0].([]generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourcesOfType indicates an expected call of ListResourcesOfType.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourcesOfType(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourcesOfType", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourcesOfType), arg0, arg1)
}

// ListResourcesOfTypeInApplication mocks base method.
func (m *MockApplicationsManagementClient) ListResourcesOfTypeInApplication(arg0 context.Context, arg1, arg2 string) ([]generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourcesOfTypeInApplication", arg0, arg1, arg2)
	ret0, _ := ret[0].([]generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourcesOfTypeInApplication indicates an expected call of ListResourcesOfTypeInApplication.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourcesOfTypeInApplication(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourcesOfTypeInApplication", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourcesOfTypeInApplication), arg0, arg1, arg2)
}

// ListResourcesOfTypeInEnvironment mocks base method.
func (m *MockApplicationsManagementClient) ListResourcesOfTypeInEnvironment(arg0 context.Context, arg1, arg2 string) ([]generated.GenericResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListResourcesOfTypeInEnvironment", arg0, arg1, arg2)
	ret0, _ := ret[0].([]generated.GenericResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListResourcesOfTypeInEnvironment indicates an expected call of ListResourcesOfTypeInEnvironment.
func (mr *MockApplicationsManagementClientMockRecorder) ListResourcesOfTypeInEnvironment(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListResourcesOfTypeInEnvironment", reflect.TypeOf((*MockApplicationsManagementClient)(nil).ListResourcesOfTypeInEnvironment), arg0, arg1, arg2)
}
