// +build go1.13

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package radclient

const telemetryInfo = "azsdk-go-radclient/<version>"
// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{	
		ActionTypeInternal,
	}
}

// ToPtr returns a *ActionType pointing to the current value.
func (c ActionType) ToPtr() *ActionType {
	return &c
}

// CheckNameAvailabilityReason - The reason why the given name is not available.
type CheckNameAvailabilityReason string

const (
	CheckNameAvailabilityReasonAlreadyExists CheckNameAvailabilityReason = "AlreadyExists"
	CheckNameAvailabilityReasonInvalid CheckNameAvailabilityReason = "Invalid"
)

// PossibleCheckNameAvailabilityReasonValues returns the possible values for the CheckNameAvailabilityReason const type.
func PossibleCheckNameAvailabilityReasonValues() []CheckNameAvailabilityReason {
	return []CheckNameAvailabilityReason{	
		CheckNameAvailabilityReasonAlreadyExists,
		CheckNameAvailabilityReasonInvalid,
	}
}

// ToPtr returns a *CheckNameAvailabilityReason pointing to the current value.
func (c CheckNameAvailabilityReason) ToPtr() *CheckNameAvailabilityReason {
	return &c
}

// ContainerConnectionKind - The kind of connection
type ContainerConnectionKind string

const (
	ContainerConnectionKindAzureComKeyVault ContainerConnectionKind = "azure.com/KeyVault"
	ContainerConnectionKindAzureComServiceBusQueue ContainerConnectionKind = "azure.com/ServiceBusQueue"
	ContainerConnectionKindDaprIoDaprHTTP ContainerConnectionKind = "dapr.io/DaprHttp"
	ContainerConnectionKindDaprIoPubSubTopic ContainerConnectionKind = "dapr.io/PubSubTopic"
	ContainerConnectionKindDaprIoStateStore ContainerConnectionKind = "dapr.io/StateStore"
	ContainerConnectionKindGrpc ContainerConnectionKind = "Grpc"
	ContainerConnectionKindHTTP ContainerConnectionKind = "Http"
	ContainerConnectionKindMicrosoftComSQL ContainerConnectionKind = "microsoft.com/SQL"
	ContainerConnectionKindMongoComMongoDB ContainerConnectionKind = "mongo.com/MongoDB"
	ContainerConnectionKindRabbitmqComMessageQueue ContainerConnectionKind = "rabbitmq.com/MessageQueue"
	ContainerConnectionKindRedislabsComRedis ContainerConnectionKind = "redislabs.com/Redis"
)

// PossibleContainerConnectionKindValues returns the possible values for the ContainerConnectionKind const type.
func PossibleContainerConnectionKindValues() []ContainerConnectionKind {
	return []ContainerConnectionKind{	
		ContainerConnectionKindAzureComKeyVault,
		ContainerConnectionKindAzureComServiceBusQueue,
		ContainerConnectionKindDaprIoDaprHTTP,
		ContainerConnectionKindDaprIoPubSubTopic,
		ContainerConnectionKindDaprIoStateStore,
		ContainerConnectionKindGrpc,
		ContainerConnectionKindHTTP,
		ContainerConnectionKindMicrosoftComSQL,
		ContainerConnectionKindMongoComMongoDB,
		ContainerConnectionKindRabbitmqComMessageQueue,
		ContainerConnectionKindRedislabsComRedis,
	}
}

// ToPtr returns a *ContainerConnectionKind pointing to the current value.
func (c ContainerConnectionKind) ToPtr() *ContainerConnectionKind {
	return &c
}

// ContainerPortProtocol - Protocol in use by the port
type ContainerPortProtocol string

const (
	ContainerPortProtocolTCP ContainerPortProtocol = "TCP"
	ContainerPortProtocolUDP ContainerPortProtocol = "UDP"
)

// PossibleContainerPortProtocolValues returns the possible values for the ContainerPortProtocol const type.
func PossibleContainerPortProtocolValues() []ContainerPortProtocol {
	return []ContainerPortProtocol{	
		ContainerPortProtocolTCP,
		ContainerPortProtocolUDP,
	}
}

// ToPtr returns a *ContainerPortProtocol pointing to the current value.
func (c ContainerPortProtocol) ToPtr() *ContainerPortProtocol {
	return &c
}

// CreatedByType - The type of identity that created the resource.
type CreatedByType string

const (
	CreatedByTypeApplication CreatedByType = "Application"
	CreatedByTypeKey CreatedByType = "Key"
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{	
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ToPtr returns a *CreatedByType pointing to the current value.
func (c CreatedByType) ToPtr() *CreatedByType {
	return &c
}

// DaprPubSubTopicComponentPropertiesKind - The Dapr Pub/Sub kind. These strings match the format used by Dapr Kubernetes components.
type DaprPubSubTopicComponentPropertiesKind string

const (
	DaprPubSubTopicComponentPropertiesKindAny DaprPubSubTopicComponentPropertiesKind = "any"
	DaprPubSubTopicComponentPropertiesKindPubsubAzureServicebus DaprPubSubTopicComponentPropertiesKind = "pubsub.azure.servicebus"
)

// PossibleDaprPubSubTopicComponentPropertiesKindValues returns the possible values for the DaprPubSubTopicComponentPropertiesKind const type.
func PossibleDaprPubSubTopicComponentPropertiesKindValues() []DaprPubSubTopicComponentPropertiesKind {
	return []DaprPubSubTopicComponentPropertiesKind{	
		DaprPubSubTopicComponentPropertiesKindAny,
		DaprPubSubTopicComponentPropertiesKindPubsubAzureServicebus,
	}
}

// ToPtr returns a *DaprPubSubTopicComponentPropertiesKind pointing to the current value.
func (c DaprPubSubTopicComponentPropertiesKind) ToPtr() *DaprPubSubTopicComponentPropertiesKind {
	return &c
}

// DaprSidecarTraitProtocol - Specifies the Dapr app-protocol to use for the component.
type DaprSidecarTraitProtocol string

const (
	DaprSidecarTraitProtocolGrpc DaprSidecarTraitProtocol = "grpc"
	DaprSidecarTraitProtocolHTTP DaprSidecarTraitProtocol = "http"
)

// PossibleDaprSidecarTraitProtocolValues returns the possible values for the DaprSidecarTraitProtocol const type.
func PossibleDaprSidecarTraitProtocolValues() []DaprSidecarTraitProtocol {
	return []DaprSidecarTraitProtocol{	
		DaprSidecarTraitProtocolGrpc,
		DaprSidecarTraitProtocolHTTP,
	}
}

// ToPtr returns a *DaprSidecarTraitProtocol pointing to the current value.
func (c DaprSidecarTraitProtocol) ToPtr() *DaprSidecarTraitProtocol {
	return &c
}

// DaprStateStoreComponentPropertiesKind - The Dapr StateStore kind. These strings match the format used by Dapr Kubernetes components.
type DaprStateStoreComponentPropertiesKind string

const (
	DaprStateStoreComponentPropertiesKindAny DaprStateStoreComponentPropertiesKind = "any"
	DaprStateStoreComponentPropertiesKindStateAzureTablestorage DaprStateStoreComponentPropertiesKind = "state.azure.tablestorage"
	DaprStateStoreComponentPropertiesKindStateRedis DaprStateStoreComponentPropertiesKind = "state.redis"
	DaprStateStoreComponentPropertiesKindStateSqlserver DaprStateStoreComponentPropertiesKind = "state.sqlserver"
)

// PossibleDaprStateStoreComponentPropertiesKindValues returns the possible values for the DaprStateStoreComponentPropertiesKind const type.
func PossibleDaprStateStoreComponentPropertiesKindValues() []DaprStateStoreComponentPropertiesKind {
	return []DaprStateStoreComponentPropertiesKind{	
		DaprStateStoreComponentPropertiesKindAny,
		DaprStateStoreComponentPropertiesKindStateAzureTablestorage,
		DaprStateStoreComponentPropertiesKindStateRedis,
		DaprStateStoreComponentPropertiesKindStateSqlserver,
	}
}

// ToPtr returns a *DaprStateStoreComponentPropertiesKind pointing to the current value.
func (c DaprStateStoreComponentPropertiesKind) ToPtr() *DaprStateStoreComponentPropertiesKind {
	return &c
}

// EncryptionStatus - Indicates whether or not the encryption is enabled for container registry.
type EncryptionStatus string

const (
	EncryptionStatusDisabled EncryptionStatus = "disabled"
	EncryptionStatusEnabled EncryptionStatus = "enabled"
)

// PossibleEncryptionStatusValues returns the possible values for the EncryptionStatus const type.
func PossibleEncryptionStatusValues() []EncryptionStatus {
	return []EncryptionStatus{	
		EncryptionStatusDisabled,
		EncryptionStatusEnabled,
	}
}

// ToPtr returns a *EncryptionStatus pointing to the current value.
func (c EncryptionStatus) ToPtr() *EncryptionStatus {
	return &c
}

// EphemeralVolumeManagedStore - Backing store for the ephemeral volume
type EphemeralVolumeManagedStore string

const (
	EphemeralVolumeManagedStoreDisk EphemeralVolumeManagedStore = "disk"
	EphemeralVolumeManagedStoreMemory EphemeralVolumeManagedStore = "memory"
)

// PossibleEphemeralVolumeManagedStoreValues returns the possible values for the EphemeralVolumeManagedStore const type.
func PossibleEphemeralVolumeManagedStoreValues() []EphemeralVolumeManagedStore {
	return []EphemeralVolumeManagedStore{	
		EphemeralVolumeManagedStoreDisk,
		EphemeralVolumeManagedStoreMemory,
	}
}

// ToPtr returns a *EphemeralVolumeManagedStore pointing to the current value.
func (c EphemeralVolumeManagedStore) ToPtr() *EphemeralVolumeManagedStore {
	return &c
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
type Origin string

const (
	OriginSystem Origin = "system"
	OriginUser Origin = "user"
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{	
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ToPtr returns a *Origin pointing to the current value.
func (c Origin) ToPtr() *Origin {
	return &c
}

// PersistentVolumeRbac - Container read/write access to the volume
type PersistentVolumeRbac string

const (
	PersistentVolumeRbacRead PersistentVolumeRbac = "read"
	PersistentVolumeRbacWrite PersistentVolumeRbac = "write"
)

// PossiblePersistentVolumeRbacValues returns the possible values for the PersistentVolumeRbac const type.
func PossiblePersistentVolumeRbacValues() []PersistentVolumeRbac {
	return []PersistentVolumeRbac{	
		PersistentVolumeRbacRead,
		PersistentVolumeRbacWrite,
	}
}

// ToPtr returns a *PersistentVolumeRbac pointing to the current value.
func (c PersistentVolumeRbac) ToPtr() *PersistentVolumeRbac {
	return &c
}

// SKUTier - This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
type SKUTier string

const (
	SKUTierFree SKUTier = "Free"
	SKUTierBasic SKUTier = "Basic"
	SKUTierStandard SKUTier = "Standard"
	SKUTierPremium SKUTier = "Premium"
)

// PossibleSKUTierValues returns the possible values for the SKUTier const type.
func PossibleSKUTierValues() []SKUTier {
	return []SKUTier{	
		SKUTierFree,
		SKUTierBasic,
		SKUTierStandard,
		SKUTierPremium,
	}
}

// ToPtr returns a *SKUTier pointing to the current value.
func (c SKUTier) ToPtr() *SKUTier {
	return &c
}

