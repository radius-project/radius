// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/project-radius/radius/pkg/rp/secretvalue (interfaces: SecretValueClient)

// Package secretvalue is a generated GoMock package.
package secretvalue

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resourcemodel "github.com/project-radius/radius/pkg/resourcemodel"
)

// MockSecretValueClient is a mock of SecretValueClient interface.
type MockSecretValueClient struct {
	ctrl     *gomock.Controller
	recorder *MockSecretValueClientMockRecorder
}

// MockSecretValueClientMockRecorder is the mock recorder for MockSecretValueClient.
type MockSecretValueClientMockRecorder struct {
	mock *MockSecretValueClient
}

// NewMockSecretValueClient creates a new mock instance.
func NewMockSecretValueClient(ctrl *gomock.Controller) *MockSecretValueClient {
	mock := &MockSecretValueClient{ctrl: ctrl}
	mock.recorder = &MockSecretValueClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretValueClient) EXPECT() *MockSecretValueClientMockRecorder {
	return m.recorder
}

// FetchSecret mocks base method.
func (m *MockSecretValueClient) FetchSecret(arg0 context.Context, arg1 resourcemodel.ResourceIdentity, arg2, arg3 string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSecret", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchSecret indicates an expected call of FetchSecret.
func (mr *MockSecretValueClientMockRecorder) FetchSecret(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSecret", reflect.TypeOf((*MockSecretValueClient)(nil).FetchSecret), arg0, arg1, arg2, arg3)
}
