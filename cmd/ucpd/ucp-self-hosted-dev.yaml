# This is an example of configuration file.
storageProvider:
  # provider: "cosmosdb"
  # cosmosdb:
  #   # Create your own SQL API Cosmos DB account and set url in this configuration or to RADIUS_STORAGEPROVIDER_COSMOSDB_URL environment variable
  #   url: https://radius-eastus-test.documents.azure.com:443/
  #   database: applicationscore
  #   # Set primary key to in this configuration or to RADIUS_STORAGEPROVIDER_COSMOSDB_MASTERKEY environment variable
  #   masterKey: set-me-in-a-different-way

  # provider: "apiserver"
  # apiserver:
  #   context: ''
  #   namespace: 'default'

  provider: "apiserver"
  apiserver:
    context: ''
    namespace: 'default'

secretProvider:
  provider: "kubernetes"

queueProvider:
  provider: "apiserver"
  apiserver:
    context: ''
    namespace: 'default'

profilerProvider:
  enabled: false
  port: 6060

#Default planes configuration with which ucp starts
# TODO: Remove azure and aws planes once rad provider commands are supported
planes:
  - id: "/planes/aws/aws"
    properties:
      kind: "AWS"
  - id: "/planes/radius/local"
    properties:
      resourceProviders:
        Applications.Core: "http://localhost:8080"
        Applications.Link: "http://localhost:8081"
        Applications.Messaging: "http://localhost:8081"
        Applications.Dapr: "http://localhost:8081"
        Applications.Datastores: "http://localhost:8081"
        Microsoft.Resources: "http://localhost:5017"
      kind: "UCPNative"
identity:
  authMethod: default

ucp:
  kind: direct
  direct:
    endpoint: "http://localhost:9000"

# Metrics configuration
# port is not the same as metrics configuration in radius-self-hosted.yaml
# so that we can run both services in debug mode.
metricsProvider:
  prometheus:
    enabled: false
    path: "/metrics"
    port: 9090

# Logging configuration
logging:
  level: "info"
  json: true

# Tracing configuration
tracerProvider:
  serviceName: "ucp"
  zipkin:
    url: "http://localhost:9411/api/v2/spans"