<<<<<<< HEAD
[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/applications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/applications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Application properties"
      },
      "tags": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "extensions": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "The application extension."
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Extension",
    "discriminator": "kind",
    "baseProperties": {},
    "elements": {
      "aci": {
        "$ref": "#/15"
      },
      "daprSidecar": {
        "$ref": "#/16"
      },
      "kubernetesMetadata": {
        "$ref": "#/22"
      },
      "kubernetesNamespace": {
        "$ref": "#/26"
      },
      "manualScaling": {
        "$ref": "#/28"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceExtension",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource group of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceExtension",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource group of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "DaprSidecarExtension",
    "properties": {
      "appPort": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "The Dapr appPort. Specifies the internal listening port for the application to handle requests from the Dapr sidecar."
      },
      "appId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Dapr appId. Specifies the identifier used by Dapr for service invocation."
      },
      "config": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the Dapr configuration to use for the resource."
      },
      "protocol": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The Dapr sidecar extension protocol"
      },
      "kind": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "grpc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "daprSidecar"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtension",
    "properties": {
      "annotations": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Annotations to be applied to the Kubernetes resources output by the resource"
      },
      "labels": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Labels to be applied to the Kubernetes resources output by the resource"
      },
      "kind": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionAnnotations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesMetadata"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesNamespaceExtension",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The namespace of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesNamespace"
  },
  {
    "$type": "ObjectType",
    "name": "ManualScalingExtension",
    "properties": {
      "replicas": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "Replica count."
      },
      "kind": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "manualScaling"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceStatus",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 0,
        "description": "Represents backing compute resource"
      },
      "recipe": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 2,
        "description": "Recipe status at deployment time for a resource."
      },
      "outputResources": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "Properties of an output resource"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EnvironmentCompute",
    "discriminator": "kind",
    "baseProperties": {
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id of the compute resource for application environment."
      },
      "identity": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      }
    },
    "elements": {
      "aci": {
        "$ref": "#/37"
      },
      "kubernetes": {
        "$ref": "#/39"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentitySettings",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 1,
        "description": "IdentitySettingKind is the kind of supported external identity setting"
      },
      "oidcIssuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URI for your compute platform's OIDC issuer"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of the provisioned identity"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.workload"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceCompute",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource group to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceCompute",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource group to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesCompute",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The namespace to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "RecipeStatus",
    "properties": {
      "templateKind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "TemplateKind is the kind of the recipe template used by the portable resource upon deployment."
      },
      "templatePath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "TemplatePath is the path of the recipe consumed by the portable resource upon deployment."
      },
      "templateVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "TemplateVersion is the version number of the template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OutputResource",
    "properties": {
      "localId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The logical identifier scoped to the owning Radius resource. This is only needed or used when a resource has a dependency relationship. LocalIDs do not have any particular format or meaning beyond being compared to determine dependency relationships."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The UCP resource ID of the underlying resource."
      },
      "radiusManaged": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Determines whether Radius manages the lifecycle of the underlying resource."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/47"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/52"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/applications@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/3"
    },
    "flags": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/containers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/containers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/58"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 1,
        "description": "Container properties"
      },
      "tags": {
        "type": {
          "$ref": "#/125"
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "container": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 1,
        "description": "Definition of a container"
      },
      "connections": {
        "type": {
          "$ref": "#/110"
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "Specifies a connection to another resource."
      },
      "identity": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      },
      "extensions": {
        "type": {
          "$ref": "#/111"
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Extensions spec of the resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/114"
          "$ref": "#/114"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'internal', where Radius manages the lifecycle of the resource internally, and 'manual', where a user manages the resource."
      },
      "resources": {
        "type": {
          "$ref": "#/116"
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "A collection of references to resources associated with the container"
      },
      "restartPolicy": {
        "type": {
          "$ref": "#/120"
          "$ref": "#/120"
        },
        "flags": 0,
        "description": "Restart policy for the container"
      },
      "runtimes": {
        "type": {
          "$ref": "#/121"
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "The properties for runtime configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/66"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Container",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The registry and image to download and run in your container"
      },
      "imagePullPolicy": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "The image pull policy for the container"
      },
      "env": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 0,
        "description": "environment"
      },
      "ports": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "container ports"
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "volumes": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "container volumes"
      },
      "command": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 0,
        "description": "Entrypoint array. Overrides the container image's ENTRYPOINT"
      },
      "args": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Arguments to the entrypoint. Overrides the container image's CMD"
      },
      "workingDir": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Working directory for the container"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "IfNotPresent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariable",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value of the environment variable"
      },
      "valueFrom": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The reference to the variable"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariableReference",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 1,
        "description": "This secret is used within a recipe. Secrets are encrypted, often have fine-grained access control, auditing and are recommended to be used to hold sensitive data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretReference",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of an Applications.Core/SecretStore resource containing sensitive data required for recipe execution."
      },
      "key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The key for the secret in the secret store."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerEnv",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/75"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPortProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "protocol": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "The protocol in use by the port"
      },
      "scheme": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the URL scheme of the communication protocol. Consumers can use the scheme to construct a URL. The value defaults to 'http' or 'https' depending on the port value"
      },
      "port": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Specifies the port that will be exposed by this container. Must be set when value different from containerPort is desired"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TCP"
  },
  {
    "$type": "StringLiteralType",
    "value": "UDP"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPorts",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/79"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "HealthProbeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "initialDelaySeconds": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Initial delay in seconds before probing for readiness/liveness"
      },
      "failureThreshold": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Threshold number of times the probe fails after which a failure would be reported"
      },
      "periodSeconds": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Interval for the readiness/liveness probe in seconds"
      },
      "timeoutSeconds": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Number of seconds after which the readiness/liveness probe times out. Defaults to 5 seconds"
      }
    },
    "elements": {
      "exec": {
        "$ref": "#/85"
      },
      "httpGet": {
        "$ref": "#/87"
      },
      "tcp": {
        "$ref": "#/90"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExecHealthProbeProperties",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Command to execute to probe readiness/liveness"
      },
      "kind": {
        "type": {
          "$ref": "#/86"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "exec"
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The route to make the HTTP request on"
      },
      "headers": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "Custom HTTP headers to add to the get request"
      },
      "kind": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbePropertiesHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "httpGet"
  },
  {
    "$type": "ObjectType",
    "name": "TcpHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "kind": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Volume",
    "discriminator": "kind",
    "baseProperties": {
      "mountPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path where the volume is mounted"
      }
    },
    "elements": {
      "ephemeral": {
        "$ref": "#/93"
      },
      "persistent": {
        "$ref": "#/98"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EphemeralVolume",
    "properties": {
      "managedStore": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 1,
        "description": "The managed store for the ephemeral volume"
      },
      "kind": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "memory"
  },
  {
    "$type": "StringLiteralType",
    "value": "disk"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ephemeral"
  },
  {
    "$type": "ObjectType",
    "name": "PersistentVolume",
    "properties": {
      "permission": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 0,
        "description": "The persistent volume permission"
      },
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The source of the volume"
      },
      "kind": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "read"
  },
  {
    "$type": "StringLiteralType",
    "value": "write"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "persistent"
  },
  {
    "$type": "ObjectType",
    "name": "ContainerVolumes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectionProperties",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The source of the connection"
      },
      "disableDefaultEnvVars": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "default environment variable override"
      },
      "iam": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "IAM properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IamProperties",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/108"
          "$ref": "#/108"
        },
        "flags": 1,
        "description": "The kind of IAM provider to configure"
      },
      "roles": {
        "type": {
          "$ref": "#/109"
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "RBAC permissions to be assigned on the source resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure"
  },
  {
    "$type": "StringLiteralType",
    "value": "string"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/107"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPropertiesConnections",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/106"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "internal"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/112"
        "$ref": "#/112"
      },
      {
        "$ref": "#/113"
        "$ref": "#/113"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Resource id of an existing resource"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/115"
      "$ref": "#/115"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnFailure"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/117"
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
        "$ref": "#/119"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RuntimesProperties",
    "properties": {
      "kubernetes": {
        "type": {
          "$ref": "#/122"
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "The runtime configuration properties for Kubernetes"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesRuntimeProperties",
    "properties": {
      "base": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The serialized YAML manifest which represents the base Kubernetes resources to deploy, such as Deployment, Service, ServiceAccount, Secrets, and ConfigMaps."
      },
      "pod": {
        "type": {
          "$ref": "#/124"
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "A strategic merge patch that will be applied to the PodSpec object when this container is being deployed."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesPodSpec",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/123"
      "$ref": "#/123"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/containers@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/60"
    },
    "flags": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/127"
          "$ref": "#/127"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/128"
          "$ref": "#/128"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/130"
          "$ref": "#/130"
        },
        "flags": 1,
        "description": "Environment properties"
      },
      "tags": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/138"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "compute": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 1,
        "description": "Represents backing compute resource"
      },
      "providers": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 0,
        "description": "The Cloud providers configuration."
      },
      "simulated": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Simulated environment."
      },
      "recipes": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 0,
        "description": "Specifies Recipes linked to the Environment."
      },
      "recipeConfig": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "Configuration for Recipes. Defines how each type of Recipe should be configured and run."
      },
      "extensions": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 0,
        "description": "The environment extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/131"
        "$ref": "#/131"
      },
      {
        "$ref": "#/132"
        "$ref": "#/132"
      },
      {
        "$ref": "#/133"
        "$ref": "#/133"
      },
      {
        "$ref": "#/134"
        "$ref": "#/134"
      },
      {
        "$ref": "#/135"
        "$ref": "#/135"
      },
      {
        "$ref": "#/136"
        "$ref": "#/136"
      },
      {
        "$ref": "#/137"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Providers",
    "properties": {
      "azure": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 0,
        "description": "The Azure cloud provider definition."
      },
      "aws": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "The AWS cloud provider definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAzure",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAws",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Target scope for AWS resources to be deployed into.  For example: '/planes/aws/aws/accounts/000000000000/regions/us-west-2'."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RecipeProperties",
    "discriminator": "templateKind",
    "baseProperties": {
      "templatePath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported."
      },
      "parameters": {
        "type": {
          "$ref": "#/123"
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Any object"
      }
    },
    "elements": {
      "bicep": {
        "$ref": "#/143"
      },
      "terraform": {
        "$ref": "#/145"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepRecipeProperties",
    "properties": {
      "plainHttp": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Connect to the Bicep registry using HTTP (not-HTTPS). This should be used when the registry is known not to support HTTPS, for example in a locally-hosted registry. Defaults to false (use HTTPS/TLS)."
      },
      "templateKind": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bicep"
  },
  {
    "$type": "ObjectType",
    "name": "TerraformRecipeProperties",
    "properties": {
      "templateVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of the template to deploy. For Terraform recipes using a module registry this is required, but must be omitted for other module sources."
      },
      "templateKind": {
        "type": {
          "$ref": "#/146"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "terraform"
  },
  {
    "$type": "ObjectType",
    "name": "DictionaryOfRecipeProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/142"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentPropertiesRecipes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/147"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RecipeConfigProperties",
    "properties": {
      "terraform": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "Configuration for Terraform Recipes. Controls how Terraform plans and applies templates as part of Recipe deployment."
      },
      "bicep": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "Configuration for Bicep Recipes. Controls how Bicep plans and applies templates as part of Recipe deployment."
      },
      "env": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "The environment variables injected during Terraform Recipe execution for the recipes in the environment."
      },
      "envSecrets": {
        "type": {
          "$ref": "#/163"
        },
        "flags": 0,
        "description": "Environment variables containing sensitive information can be stored as secrets. The secrets are stored in Applications.Core/SecretStores resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TerraformConfigProperties",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "Authentication information used to access private Terraform module sources. Supported module sources: Git."
      },
      "providers": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0,
        "description": "Configuration for Terraform Recipe Providers. Controls how Terraform interacts with cloud providers, SaaS providers, and other APIs. For more information, please see: https://developer.hashicorp.com/terraform/language/providers/configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthConfig",
    "properties": {
      "git": {
        "type": {
          "$ref": "#/152"
        },
        "flags": 0,
        "description": "Authentication information used to access private Terraform modules from Git repository sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GitAuthConfig",
    "properties": {
      "pat": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 0,
        "description": "Personal Access Token (PAT) configuration used to authenticate to Git platforms."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretConfig",
    "properties": {
      "secret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of an Applications.Core/SecretStore resource containing the Git platform personal access token (PAT). The secret store must have a secret named 'pat', containing the PAT value. A secret named 'username' is optional, containing the username associated with the pat. By default no username is specified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GitAuthConfigPat",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/153"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderConfigProperties",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 0,
        "description": "Sensitive data in provider configuration can be stored as secrets. The secrets are stored in Applications.Core/SecretStores resource."
      }
    },
    "additionalProperties": {
      "$ref": "#/123"
      "$ref": "#/123"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderConfigPropertiesSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/77"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/155"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TerraformConfigPropertiesProviders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/157"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepConfigProperties",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 0,
        "description": "Authentication information used to access private bicep registries, which is a map of registry hostname to secret config that contains credential information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistrySecretConfig",
    "properties": {
      "secret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of an Applications.Core/SecretStore resource containing credential information used to authenticate private container registry.The keys in the secretstore depends on the type."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepConfigPropertiesAuthentication",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/160"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RecipeConfigPropertiesEnvSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/77"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/environments@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/129"
      "$ref": "#/129"
    },
    "flags": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/extenders"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/extenders",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/170"
        },
        "flags": 1,
        "description": "ExtenderResource portable resource properties"
      },
      "tags": {
        "type": {
          "$ref": "#/183"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtenderProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the portable resource is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the application that the portable resource is consumed by (if applicable)"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "secrets": {
        "type": {
          "$ref": "#/123"
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Any object"
      },
      "recipe": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "The recipe used to automatically deploy underlying infrastructure for a portable resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/182"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'recipe', where Radius manages the lifecycle of the resource through a Recipe, and 'manual', where a user manages the resource and provides the values."
      }
    },
    "additionalProperties": {
      "$ref": "#/123"
      "$ref": "#/123"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/173"
      },
      {
        "$ref": "#/174"
      },
      {
        "$ref": "#/175"
      },
      {
        "$ref": "#/176"
      },
      {
        "$ref": "#/177"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Recipe",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the recipe within the environment to use"
      },
      "parameters": {
        "type": {
          "$ref": "#/123"
          "$ref": "#/123"
        },
        "flags": 0,
        "description": "Any object"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "recipe"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/181"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtenderListSecretResponse",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "FunctionType",
    "parameters": [],
    "output": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/extenders@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/169"
    },
    "flags": 0,
    "functions": {
      "listSecrets": {
        "type": {
          "$ref": "#/184"
        },
        "description": "listSecrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/gateways"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/gateways",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 1,
        "description": "Gateway properties"
      },
      "tags": {
        "type": {
          "$ref": "#/205"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "internal": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet)."
      },
      "hostname": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 0,
        "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."
      },
      "routes": {
        "type": {
          "$ref": "#/200"
        },
        "flags": 1,
        "description": "Routes attached to this Gateway"
      },
      "tls": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 0,
        "description": "TLS configuration definition for Gateway resource."
      },
      "url": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "URL of the gateway resource. Readonly"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/192"
      },
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/195"
      },
      {
        "$ref": "#/196"
        "$ref": "#/199"
      },
      {
        "$ref": "#/200"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "GatewayHostname",
    "properties": {
      "prefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specify a prefix for the hostname: myhostname.myapp.PUBLICHOSTNAMEORIP.nip.io. Mutually exclusive with 'fullyQualifiedHostname' and will be overridden if both are defined."
      },
      "fullyQualifiedHostname": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specify a fully-qualified domain name: myapp.mydomain.com. Mutually exclusive with 'prefix' and will take priority if both are defined."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayRoute",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path to match the incoming request path on. Ex - /myservice."
      },
      "destination": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URL or id of the service to route to. Ex - 'http://myservice'."
      },
      "replacePrefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optionally update the prefix when sending the request to the service. Ex - replacePrefix: '/' and path: '/myservice' will transform '/myservice/myroute' to '/myroute'"
      },
      "enableWebsockets": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "Enables websocket support for the route. Defaults to false."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/199"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayTls",
    "properties": {
      "sslPassthrough": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "If true, gateway lets the https traffic sslPassthrough to the backend servers for decryption."
      },
      "minimumProtocolVersion": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "TLS minimum protocol version (defaults to 1.2)."
      },
      "certificateFrom": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id for the secret containing the TLS certificate and key for the gateway."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "1.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.3"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/202"
      },
      {
        "$ref": "#/203"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/gateways@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/188"
    },
    "flags": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/secretStores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/secretStores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/208"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 1,
        "description": "The properties of SecretStore"
      },
      "tags": {
        "type": {
          "$ref": "#/231"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "type": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 0,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 1,
        "description": "An object to represent key-value type secrets"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id of external secret store."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/211"
      },
      {
        "$ref": "#/212"
      },
      {
        "$ref": "#/213"
      },
      {
        "$ref": "#/214"
      },
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "basicAuthentication"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureWorkloadIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "awsIRSA"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/219"
      },
      {
        "$ref": "#/220"
      },
      {
        "$ref": "#/221"
      },
      {
        "$ref": "#/222"
      },
      {
        "$ref": "#/223"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretValueProperties",
    "properties": {
      "encoding": {
        "type": {
          "$ref": "#/228"
        },
        "flags": 0,
        "description": "The type of SecretValue Encoding"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value of secret."
      },
      "valueFrom": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 0,
        "description": "The Secret value source properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "raw"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/226"
      },
      {
        "$ref": "#/227"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ValueFromProperties",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the referenced secret."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The version of the referenced secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStorePropertiesData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResult",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/238"
        },
        "flags": 2,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 2,
        "description": "An object to represent key-value type secrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "basicAuthentication"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureWorkloadIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "awsIRSA"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResultData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/225"
    }
  },
  {
    "$type": "FunctionType",
    "parameters": [],
    "output": {
      "$ref": "#/232"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/secretStores@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/209"
    },
    "flags": 0,
    "functions": {
      "listSecrets": {
        "type": {
          "$ref": "#/240"
        },
        "description": "listSecrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/volumes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/volumes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/242"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 1,
        "description": "Volume properties"
      },
      "tags": {
        "type": {
          "$ref": "#/287"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "VolumeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    },
    "elements": {
      "azure.com.keyvault": {
        "$ref": "#/264"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/246"
      },
      {
        "$ref": "#/247"
      },
      {
        "$ref": "#/248"
      },
      {
        "$ref": "#/249"
      },
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/251"
      },
      {
        "$ref": "#/252"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumeProperties",
    "properties": {
      "certificates": {
        "type": {
          "$ref": "#/277"
        },
        "flags": 0,
        "description": "The KeyVault certificates that this volume exposes"
      },
      "keys": {
        "type": {
          "$ref": "#/279"
        },
        "flags": 0,
        "description": "The KeyVault keys that this volume exposes"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of the keyvault to use for this volume resource"
      },
      "secrets": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "The KeyVault secrets that this volume exposes"
      },
      "kind": {
        "type": {
          "$ref": "#/286"
        },
        "flags": 1,
        "description": "Discriminator property for VolumeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 0,
        "description": "Encoding format. Default utf-8"
      },
      "format": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 0,
        "description": "Represents certificate formats"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the certificate"
      },
      "certType": {
        "type": {
          "$ref": "#/276"
        },
        "flags": 0,
        "description": "Represents certificate types"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Certificate version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/268"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "pem"
  },
  {
    "$type": "StringLiteralType",
    "value": "pfx"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/260"
      },
      {
        "$ref": "#/261"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "privatekey"
  },
  {
    "$type": "StringLiteralType",
    "value": "publickey"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/274"
      },
      {
        "$ref": "#/275"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesCertificates",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/265"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the key"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Key version"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/278"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/284"
        },
        "flags": 0,
        "description": "Encoding format. Default utf-8"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the secret"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "secret version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/271"
      },
      {
        "$ref": "#/272"
      },
      {
        "$ref": "#/273"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/270"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.keyvault"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/volumes@2023-10-01-preview",
    "scopeType": 0,
    "body": {
      "$ref": "#/244"
    },
    "flags": 0,
    "functions": {}
  }
]
=======
[{"1":{"Kind":1}},{"1":{"Kind":2}},{"1":{"Kind":3}},{"1":{"Kind":4}},{"1":{"Kind":5}},{"1":{"Kind":6}},{"1":{"Kind":7}},{"1":{"Kind":8}},{"6":{"Value":"Applications.Core/applications"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/applications","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":8,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":9,"Flags":10,"Description":"The resource api version"},"properties":{"Type":11,"Flags":1,"Description":"Application properties"},"tags":{"Type":50,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"ApplicationProperties","Properties":{"provisioningState":{"Type":19,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"environment":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"extensions":{"Type":36,"Flags":0,"Description":"The application extension."},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[12,13,14,15,16,17,18]}},{"7":{"Name":"Extension","Discriminator":"kind","BaseProperties":{},"Elements":{"aci":21,"daprSidecar":23,"kubernetesMetadata":28,"kubernetesNamespace":32,"manualScaling":34}}},{"2":{"Name":"AzureContainerInstanceExtension","Properties":{"resourceGroup":{"Type":4,"Flags":1,"Description":"The resource group of the application environment."},"kind":{"Type":22,"Flags":1,"Description":"Discriminator property for Extension."}}}},{"6":{"Value":"aci"}},{"2":{"Name":"DaprSidecarExtension","Properties":{"appPort":{"Type":3,"Flags":0,"Description":"The Dapr appPort. Specifies the internal listening port for the application to handle requests from the Dapr sidecar."},"appId":{"Type":4,"Flags":1,"Description":"The Dapr appId. Specifies the identifier used by Dapr for service invocation."},"config":{"Type":4,"Flags":0,"Description":"Specifies the Dapr configuration to use for the resource."},"protocol":{"Type":26,"Flags":0,"Description":"The Dapr sidecar extension protocol"},"kind":{"Type":27,"Flags":1,"Description":"Discriminator property for Extension."}}}},{"6":{"Value":"http"}},{"6":{"Value":"grpc"}},{"5":{"Elements":[24,25]}},{"6":{"Value":"daprSidecar"}},{"2":{"Name":"KubernetesMetadataExtension","Properties":{"annotations":{"Type":29,"Flags":0,"Description":"Annotations to be applied to the Kubernetes resources output by the resource"},"labels":{"Type":30,"Flags":0,"Description":"Labels to be applied to the Kubernetes resources output by the resource"},"kind":{"Type":31,"Flags":1,"Description":"Discriminator property for Extension."}}}},{"2":{"Name":"KubernetesMetadataExtensionAnnotations","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"KubernetesMetadataExtensionLabels","Properties":{},"AdditionalProperties":4}},{"6":{"Value":"kubernetesMetadata"}},{"2":{"Name":"KubernetesNamespaceExtension","Properties":{"namespace":{"Type":4,"Flags":1,"Description":"The namespace of the application environment."},"kind":{"Type":33,"Flags":1,"Description":"Discriminator property for Extension."}}}},{"6":{"Value":"kubernetesNamespace"}},{"2":{"Name":"ManualScalingExtension","Properties":{"replicas":{"Type":3,"Flags":1,"Description":"Replica count."},"kind":{"Type":35,"Flags":1,"Description":"Discriminator property for Extension."}}}},{"6":{"Value":"manualScaling"}},{"3":{"ItemType":20}},{"2":{"Name":"ResourceStatus","Properties":{"compute":{"Type":38,"Flags":0,"Description":"Represents backing compute resource"},"recipe":{"Type":47,"Flags":2,"Description":"Recipe status at deployment time for a resource."},"outputResources":{"Type":49,"Flags":0,"Description":"Properties of an output resource"}}}},{"7":{"Name":"EnvironmentCompute","Discriminator":"kind","BaseProperties":{"resourceId":{"Type":4,"Flags":0,"Description":"The resource id of the compute resource for application environment."},"identity":{"Type":39,"Flags":0,"Description":"IdentitySettings is the external identity setting."}},"Elements":{"aci":43,"kubernetes":45}}},{"2":{"Name":"IdentitySettings","Properties":{"kind":{"Type":42,"Flags":1,"Description":"IdentitySettingKind is the kind of supported external identity setting"},"oidcIssuer":{"Type":4,"Flags":0,"Description":"The URI for your compute platform's OIDC issuer"},"resource":{"Type":4,"Flags":0,"Description":"The resource ID of the provisioned identity"}}}},{"6":{"Value":"undefined"}},{"6":{"Value":"azure.com.workload"}},{"5":{"Elements":[40,41]}},{"2":{"Name":"AzureContainerInstanceCompute","Properties":{"resourceGroup":{"Type":4,"Flags":0,"Description":"The resource group to use for the environment."},"kind":{"Type":44,"Flags":1,"Description":"Discriminator property for EnvironmentCompute."}}}},{"6":{"Value":"aci"}},{"2":{"Name":"KubernetesCompute","Properties":{"namespace":{"Type":4,"Flags":1,"Description":"The namespace to use for the environment."},"kind":{"Type":46,"Flags":1,"Description":"Discriminator property for EnvironmentCompute."}}}},{"6":{"Value":"kubernetes"}},{"2":{"Name":"RecipeStatus","Properties":{"templateKind":{"Type":4,"Flags":1,"Description":"TemplateKind is the kind of the recipe template used by the portable resource upon deployment."},"templatePath":{"Type":4,"Flags":1,"Description":"TemplatePath is the path of the recipe consumed by the portable resource upon deployment."},"templateVersion":{"Type":4,"Flags":0,"Description":"TemplateVersion is the version number of the template."}}}},{"2":{"Name":"OutputResource","Properties":{"localId":{"Type":4,"Flags":0,"Description":"The logical identifier scoped to the owning Radius resource. This is only needed or used when a resource has a dependency relationship. LocalIDs do not have any particular format or meaning beyond being compared to determine dependency relationships."},"id":{"Type":4,"Flags":0,"Description":"The UCP resource ID of the underlying resource."},"radiusManaged":{"Type":2,"Flags":0,"Description":"Determines whether Radius manages the lifecycle of the underlying resource."}}}},{"3":{"ItemType":48}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"SystemData","Properties":{"createdBy":{"Type":4,"Flags":0,"Description":"The identity that created the resource."},"createdByType":{"Type":56,"Flags":0,"Description":"The type of identity that created the resource."},"createdAt":{"Type":4,"Flags":0,"Description":"The timestamp of resource creation (UTC)."},"lastModifiedBy":{"Type":4,"Flags":0,"Description":"The identity that last modified the resource."},"lastModifiedByType":{"Type":61,"Flags":0,"Description":"The type of identity that created the resource."},"lastModifiedAt":{"Type":4,"Flags":0,"Description":"The timestamp of resource last modification (UTC)"}}}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[52,53,54,55]}},{"6":{"Value":"User"}},{"6":{"Value":"Application"}},{"6":{"Value":"ManagedIdentity"}},{"6":{"Value":"Key"}},{"5":{"Elements":[57,58,59,60]}},{"4":{"Name":"Applications.Core/applications@2023-10-01-preview","ScopeType":0,"Body":10}},{"6":{"Value":"Applications.Core/containers"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/containers","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":63,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":64,"Flags":10,"Description":"The resource api version"},"properties":{"Type":66,"Flags":1,"Description":"Container properties"},"tags":{"Type":126,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"ContainerProperties","Properties":{"environment":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"application":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the application"},"provisioningState":{"Type":74,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."},"container":{"Type":75,"Flags":1,"Description":"Definition of a container"},"connections":{"Type":112,"Flags":0,"Description":"Specifies a connection to another resource."},"identity":{"Type":39,"Flags":0,"Description":"IdentitySettings is the external identity setting."},"extensions":{"Type":113,"Flags":0,"Description":"Extensions spec of the resource"},"resourceProvisioning":{"Type":116,"Flags":0,"Description":"Specifies how the underlying service/resource is provisioned and managed. Available values are 'internal', where Radius manages the lifecycle of the resource internally, and 'manual', where a user manages the resource."},"resources":{"Type":118,"Flags":0,"Description":"A collection of references to resources associated with the container"},"restartPolicy":{"Type":122,"Flags":0,"Description":"Restart policy for the container"},"runtimes":{"Type":123,"Flags":0,"Description":"The properties for runtime configuration"}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[67,68,69,70,71,72,73]}},{"2":{"Name":"Container","Properties":{"image":{"Type":4,"Flags":1,"Description":"The registry and image to download and run in your container"},"imagePullPolicy":{"Type":79,"Flags":0,"Description":"The image pull policy for the container"},"env":{"Type":80,"Flags":0,"Description":"environment"},"ports":{"Type":85,"Flags":0,"Description":"container ports"},"readinessProbe":{"Type":86,"Flags":0,"Description":"Properties for readiness/liveness probe"},"livenessProbe":{"Type":86,"Flags":0,"Description":"Properties for readiness/liveness probe"},"volumes":{"Type":105,"Flags":0,"Description":"container volumes"},"command":{"Type":106,"Flags":0,"Description":"Entrypoint array. Overrides the container image's ENTRYPOINT"},"args":{"Type":107,"Flags":0,"Description":"Arguments to the entrypoint. Overrides the container image's CMD"},"workingDir":{"Type":4,"Flags":0,"Description":"Working directory for the container"}}}},{"6":{"Value":"Always"}},{"6":{"Value":"IfNotPresent"}},{"6":{"Value":"Never"}},{"5":{"Elements":[76,77,78]}},{"2":{"Name":"ContainerEnv","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"ContainerPortProperties","Properties":{"containerPort":{"Type":3,"Flags":1,"Description":"The listening port number"},"protocol":{"Type":84,"Flags":0,"Description":"The protocol in use by the port"},"provides":{"Type":4,"Flags":0,"Description":"Specifies a route provided by this port"},"scheme":{"Type":4,"Flags":0,"Description":"Specifies the URL scheme of the communication protocol. Consumers can use the scheme to construct a URL. The value defaults to 'http' or 'https' depending on the port value"},"port":{"Type":3,"Flags":0,"Description":"Specifies the port that will be exposed by this container. Must be set when value different from containerPort is desired"}}}},{"6":{"Value":"TCP"}},{"6":{"Value":"UDP"}},{"5":{"Elements":[82,83]}},{"2":{"Name":"ContainerPorts","Properties":{},"AdditionalProperties":81}},{"7":{"Name":"HealthProbeProperties","Discriminator":"kind","BaseProperties":{"initialDelaySeconds":{"Type":3,"Flags":0,"Description":"Initial delay in seconds before probing for readiness/liveness"},"failureThreshold":{"Type":3,"Flags":0,"Description":"Threshold number of times the probe fails after which a failure would be reported"},"periodSeconds":{"Type":3,"Flags":0,"Description":"Interval for the readiness/liveness probe in seconds"},"timeoutSeconds":{"Type":3,"Flags":0,"Description":"Number of seconds after which the readiness/liveness probe times out. Defaults to 5 seconds"}},"Elements":{"exec":87,"httpGet":89,"tcp":92}}},{"2":{"Name":"ExecHealthProbeProperties","Properties":{"command":{"Type":4,"Flags":1,"Description":"Command to execute to probe readiness/liveness"},"kind":{"Type":88,"Flags":1,"Description":"Discriminator property for HealthProbeProperties."}}}},{"6":{"Value":"exec"}},{"2":{"Name":"HttpGetHealthProbeProperties","Properties":{"containerPort":{"Type":3,"Flags":1,"Description":"The listening port number"},"path":{"Type":4,"Flags":1,"Description":"The route to make the HTTP request on"},"headers":{"Type":90,"Flags":0,"Description":"Custom HTTP headers to add to the get request"},"kind":{"Type":91,"Flags":1,"Description":"Discriminator property for HealthProbeProperties."}}}},{"2":{"Name":"HttpGetHealthProbePropertiesHeaders","Properties":{},"AdditionalProperties":4}},{"6":{"Value":"httpGet"}},{"2":{"Name":"TcpHealthProbeProperties","Properties":{"containerPort":{"Type":3,"Flags":1,"Description":"The listening port number"},"kind":{"Type":93,"Flags":1,"Description":"Discriminator property for HealthProbeProperties."}}}},{"6":{"Value":"tcp"}},{"7":{"Name":"Volume","Discriminator":"kind","BaseProperties":{"mountPath":{"Type":4,"Flags":0,"Description":"The path where the volume is mounted"}},"Elements":{"ephemeral":95,"persistent":100}}},{"2":{"Name":"EphemeralVolume","Properties":{"managedStore":{"Type":98,"Flags":1,"Description":"The managed store for the ephemeral volume"},"kind":{"Type":99,"Flags":1,"Description":"Discriminator property for Volume."}}}},{"6":{"Value":"memory"}},{"6":{"Value":"disk"}},{"5":{"Elements":[96,97]}},{"6":{"Value":"ephemeral"}},{"2":{"Name":"PersistentVolume","Properties":{"permission":{"Type":103,"Flags":0,"Description":"The persistent volume permission"},"source":{"Type":4,"Flags":1,"Description":"The source of the volume"},"kind":{"Type":104,"Flags":1,"Description":"Discriminator property for Volume."}}}},{"6":{"Value":"read"}},{"6":{"Value":"write"}},{"5":{"Elements":[101,102]}},{"6":{"Value":"persistent"}},{"2":{"Name":"ContainerVolumes","Properties":{},"AdditionalProperties":94}},{"3":{"ItemType":4}},{"3":{"ItemType":4}},{"2":{"Name":"ConnectionProperties","Properties":{"source":{"Type":4,"Flags":1,"Description":"The source of the connection"},"disableDefaultEnvVars":{"Type":2,"Flags":0,"Description":"default environment variable override"},"iam":{"Type":109,"Flags":0,"Description":"IAM properties"}}}},{"2":{"Name":"IamProperties","Properties":{"kind":{"Type":110,"Flags":1,"Description":"The kind of IAM provider to configure"},"roles":{"Type":111,"Flags":0,"Description":"RBAC permissions to be assigned on the source resource"}}}},{"6":{"Value":"azure"}},{"3":{"ItemType":4}},{"2":{"Name":"ContainerPropertiesConnections","Properties":{},"AdditionalProperties":108}},{"3":{"ItemType":20}},{"6":{"Value":"internal"}},{"6":{"Value":"manual"}},{"5":{"Elements":[114,115]}},{"2":{"Name":"ResourceReference","Properties":{"id":{"Type":4,"Flags":1,"Description":"Resource id of an existing resource"}}}},{"3":{"ItemType":117}},{"6":{"Value":"Always"}},{"6":{"Value":"OnFailure"}},{"6":{"Value":"Never"}},{"5":{"Elements":[119,120,121]}},{"2":{"Name":"RuntimesProperties","Properties":{"kubernetes":{"Type":124,"Flags":0,"Description":"The runtime configuration properties for Kubernetes"}}}},{"2":{"Name":"KubernetesRuntimeProperties","Properties":{"base":{"Type":4,"Flags":0,"Description":"The serialized YAML manifest which represents the base Kubernetes resources to deploy, such as Deployment, Service, ServiceAccount, Secrets, and ConfigMaps."},"pod":{"Type":125,"Flags":0,"Description":"A strategic merge patch that will be applied to the PodSpec object when this container is being deployed."}}}},{"2":{"Name":"KubernetesPodSpec","Properties":{},"AdditionalProperties":0}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/containers@2023-10-01-preview","ScopeType":0,"Body":65}},{"6":{"Value":"Applications.Core/environments"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/environments","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":128,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":129,"Flags":10,"Description":"The resource api version"},"properties":{"Type":131,"Flags":1,"Description":"Environment properties"},"tags":{"Type":151,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"EnvironmentProperties","Properties":{"provisioningState":{"Type":139,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"compute":{"Type":38,"Flags":1,"Description":"Represents backing compute resource"},"providers":{"Type":140,"Flags":0,"Description":"The Cloud providers configuration"},"simulated":{"Type":2,"Flags":0,"Description":"Simulated environment."},"recipes":{"Type":149,"Flags":0,"Description":"Specifies Recipes linked to the Environment."},"extensions":{"Type":150,"Flags":0,"Description":"The environment extension."}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[132,133,134,135,136,137,138]}},{"2":{"Name":"Providers","Properties":{"azure":{"Type":141,"Flags":0,"Description":"The Azure cloud provider definition"},"aws":{"Type":142,"Flags":0,"Description":"The AWS cloud provider definition"}}}},{"2":{"Name":"ProvidersAzure","Properties":{"scope":{"Type":4,"Flags":1,"Description":"Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'"}}}},{"2":{"Name":"ProvidersAws","Properties":{"scope":{"Type":4,"Flags":1,"Description":"Target scope for AWS resources to be deployed into.  For example: '/planes/aws/aws/accounts/000000000000/regions/us-west-2'"}}}},{"7":{"Name":"RecipeProperties","Discriminator":"templateKind","BaseProperties":{"templatePath":{"Type":4,"Flags":1,"Description":"Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported."},"parameters":{"Type":0,"Flags":0,"Description":"Any object"}},"Elements":{"bicep":144,"terraform":146}}},{"2":{"Name":"BicepRecipeProperties","Properties":{"plainHttp":{"Type":2,"Flags":0,"Description":"Connect to the Bicep registry using HTTP (not-HTTPS). This should be used when the registry is known not to support HTTPS, for example in a locally-hosted registry. Defaults to false (use HTTPS/TLS)."},"templateKind":{"Type":145,"Flags":1,"Description":"Discriminator property for RecipeProperties."}}}},{"6":{"Value":"bicep"}},{"2":{"Name":"TerraformRecipeProperties","Properties":{"templateVersion":{"Type":4,"Flags":0,"Description":"Version of the template to deploy. For Terraform recipes using a module registry this is required, but must be omitted for other module sources."},"templateKind":{"Type":147,"Flags":1,"Description":"Discriminator property for RecipeProperties."}}}},{"6":{"Value":"terraform"}},{"2":{"Name":"DictionaryOfRecipeProperties","Properties":{},"AdditionalProperties":143}},{"2":{"Name":"EnvironmentPropertiesRecipes","Properties":{},"AdditionalProperties":148}},{"3":{"ItemType":20}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/environments@2023-10-01-preview","ScopeType":0,"Body":130}},{"6":{"Value":"Applications.Core/extenders"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/extenders","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":153,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":154,"Flags":10,"Description":"The resource api version"},"properties":{"Type":156,"Flags":1,"Description":"ExtenderResource portable resource properties"},"tags":{"Type":169,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"ExtenderProperties","Properties":{"environment":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the environment that the portable resource is linked to"},"application":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the application that the portable resource is consumed by (if applicable)"},"provisioningState":{"Type":164,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."},"secrets":{"Type":0,"Flags":0,"Description":"Any object"},"recipe":{"Type":165,"Flags":0,"Description":"The recipe used to automatically deploy underlying infrastructure for a portable resource"},"resourceProvisioning":{"Type":168,"Flags":0,"Description":"Specifies how the underlying service/resource is provisioned and managed. Available values are 'recipe', where Radius manages the lifecycle of the resource through a Recipe, and 'manual', where a user manages the resource and provides the values."}},"AdditionalProperties":0}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[157,158,159,160,161,162,163]}},{"2":{"Name":"Recipe","Properties":{"name":{"Type":4,"Flags":1,"Description":"The name of the recipe within the environment to use"},"parameters":{"Type":0,"Flags":0,"Description":"Any object"}}}},{"6":{"Value":"recipe"}},{"6":{"Value":"manual"}},{"5":{"Elements":[166,167]}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/extenders@2023-10-01-preview","ScopeType":0,"Body":155}},{"6":{"Value":"Applications.Core/gateways"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/gateways","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":171,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":172,"Flags":10,"Description":"The resource api version"},"properties":{"Type":174,"Flags":1,"Description":"Gateway properties"},"tags":{"Type":190,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"GatewayProperties","Properties":{"environment":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"application":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the application"},"provisioningState":{"Type":182,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."},"internal":{"Type":2,"Flags":0,"Description":"Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet)."},"hostname":{"Type":183,"Flags":0,"Description":"Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."},"routes":{"Type":185,"Flags":1,"Description":"Routes attached to this Gateway"},"tls":{"Type":186,"Flags":0,"Description":"TLS configuration definition for Gateway resource."},"url":{"Type":4,"Flags":2,"Description":"URL of the gateway resource. Readonly"}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[175,176,177,178,179,180,181]}},{"2":{"Name":"GatewayHostname","Properties":{"prefix":{"Type":4,"Flags":0,"Description":"Specify a prefix for the hostname: myhostname.myapp.PUBLICHOSTNAMEORIP.nip.io. Mutually exclusive with 'fullyQualifiedHostname' and will be overridden if both are defined."},"fullyQualifiedHostname":{"Type":4,"Flags":0,"Description":"Specify a fully-qualified domain name: myapp.mydomain.com. Mutually exclusive with 'prefix' and will take priority if both are defined."}}}},{"2":{"Name":"GatewayRoute","Properties":{"path":{"Type":4,"Flags":0,"Description":"The path to match the incoming request path on. Ex - /myservice."},"destination":{"Type":4,"Flags":0,"Description":"The HttpRoute to route to. Ex - myserviceroute.id."},"replacePrefix":{"Type":4,"Flags":0,"Description":"Optionally update the prefix when sending the request to the service. Ex - replacePrefix: '/' and path: '/myservice' will transform '/myservice/myroute' to '/myroute'"}}}},{"3":{"ItemType":184}},{"2":{"Name":"GatewayTls","Properties":{"sslPassthrough":{"Type":2,"Flags":0,"Description":"If true, gateway lets the https traffic sslPassthrough to the backend servers for decryption."},"minimumProtocolVersion":{"Type":189,"Flags":0,"Description":"Tls Minimum versions for Gateway resource."},"certificateFrom":{"Type":4,"Flags":0,"Description":"The resource id for the secret containing the TLS certificate and key for the gateway."}}}},{"6":{"Value":"1.2"}},{"6":{"Value":"1.3"}},{"5":{"Elements":[187,188]}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/gateways@2023-10-01-preview","ScopeType":0,"Body":173}},{"6":{"Value":"Applications.Core/httpRoutes"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/httpRoutes","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":192,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":193,"Flags":10,"Description":"The resource api version"},"properties":{"Type":195,"Flags":1,"Description":"HTTPRoute properties"},"tags":{"Type":204,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"HttpRouteProperties","Properties":{"environment":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"application":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the application"},"provisioningState":{"Type":203,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."},"hostname":{"Type":4,"Flags":0,"Description":"The internal hostname accepting traffic for the HTTP Route. Readonly."},"port":{"Type":3,"Flags":0,"Description":"The port number for the HTTP Route. Defaults to 80. Readonly."},"scheme":{"Type":4,"Flags":2,"Description":"The scheme used for traffic. Readonly."},"url":{"Type":4,"Flags":2,"Description":"A stable URL that that can be used to route traffic to a resource. Readonly."}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[196,197,198,199,200,201,202]}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/httpRoutes@2023-10-01-preview","ScopeType":0,"Body":194}},{"6":{"Value":"Applications.Core/secretStores"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/secretStores","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":206,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":207,"Flags":10,"Description":"The resource api version"},"properties":{"Type":209,"Flags":1,"Description":"The properties of SecretStore"},"tags":{"Type":227,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"2":{"Name":"SecretStoreProperties","Properties":{"environment":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"application":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the application"},"provisioningState":{"Type":217,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."},"type":{"Type":220,"Flags":0,"Description":"The type of SecretStore data"},"data":{"Type":226,"Flags":1,"Description":"An object to represent key-value type secrets"},"resource":{"Type":4,"Flags":0,"Description":"The resource id of external secret store."}}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[210,211,212,213,214,215,216]}},{"6":{"Value":"generic"}},{"6":{"Value":"certificate"}},{"5":{"Elements":[218,219]}},{"2":{"Name":"SecretValueProperties","Properties":{"encoding":{"Type":224,"Flags":0,"Description":"The type of SecretValue Encoding"},"value":{"Type":4,"Flags":0,"Description":"The value of secret."},"valueFrom":{"Type":225,"Flags":0,"Description":"The Secret value source properties"}}}},{"6":{"Value":"raw"}},{"6":{"Value":"base64"}},{"5":{"Elements":[222,223]}},{"2":{"Name":"ValueFromProperties","Properties":{"name":{"Type":4,"Flags":1,"Description":"The name of the referenced secret."},"version":{"Type":4,"Flags":0,"Description":"The version of the referenced secret."}}}},{"2":{"Name":"SecretStorePropertiesData","Properties":{},"AdditionalProperties":221}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/secretStores@2023-10-01-preview","ScopeType":0,"Body":208}},{"6":{"Value":"Applications.Core/volumes"}},{"6":{"Value":"2023-10-01-preview"}},{"2":{"Name":"Applications.Core/volumes","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":229,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":230,"Flags":10,"Description":"The resource api version"},"properties":{"Type":232,"Flags":1,"Description":"Volume properties"},"tags":{"Type":264,"Flags":0,"Description":"Resource tags."},"location":{"Type":4,"Flags":1,"Description":"The geo-location where the resource lives"},"systemData":{"Type":51,"Flags":2,"Description":"Metadata pertaining to creation and last modification of the resource."}}}},{"7":{"Name":"VolumeProperties","Discriminator":"kind","BaseProperties":{"environment":{"Type":4,"Flags":0,"Description":"Fully qualified resource ID for the environment that the application is linked to"},"application":{"Type":4,"Flags":1,"Description":"Fully qualified resource ID for the application"},"provisioningState":{"Type":240,"Flags":2,"Description":"Provisioning state of the resource at the time the operation was called"},"status":{"Type":37,"Flags":2,"Description":"Status of a resource."}},"Elements":{"azure.com.keyvault":241}}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Canceled"}},{"6":{"Value":"Provisioning"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Accepted"}},{"5":{"Elements":[233,234,235,236,237,238,239]}},{"2":{"Name":"AzureKeyVaultVolumeProperties","Properties":{"certificates":{"Type":254,"Flags":0,"Description":"The KeyVault certificates that this volume exposes"},"keys":{"Type":256,"Flags":0,"Description":"The KeyVault keys that this volume exposes"},"resource":{"Type":4,"Flags":1,"Description":"The ID of the keyvault to use for this volume resource"},"secrets":{"Type":262,"Flags":0,"Description":"The KeyVault secrets that this volume exposes"},"kind":{"Type":263,"Flags":1,"Description":"Discriminator property for VolumeProperties."}}}},{"2":{"Name":"CertificateObjectProperties","Properties":{"alias":{"Type":4,"Flags":0,"Description":"File name when written to disk"},"encoding":{"Type":246,"Flags":0,"Description":"Represents secret encodings"},"format":{"Type":249,"Flags":0,"Description":"Represents certificate formats"},"name":{"Type":4,"Flags":1,"Description":"The name of the certificate"},"certType":{"Type":253,"Flags":0,"Description":"Represents certificate types"},"version":{"Type":4,"Flags":0,"Description":"Certificate version"}}}},{"6":{"Value":"utf-8"}},{"6":{"Value":"hex"}},{"6":{"Value":"base64"}},{"5":{"Elements":[243,244,245]}},{"6":{"Value":"pem"}},{"6":{"Value":"pfx"}},{"5":{"Elements":[247,248]}},{"6":{"Value":"certificate"}},{"6":{"Value":"privatekey"}},{"6":{"Value":"publickey"}},{"5":{"Elements":[250,251,252]}},{"2":{"Name":"AzureKeyVaultVolumePropertiesCertificates","Properties":{},"AdditionalProperties":242}},{"2":{"Name":"KeyObjectProperties","Properties":{"alias":{"Type":4,"Flags":0,"Description":"File name when written to disk"},"name":{"Type":4,"Flags":1,"Description":"The name of the key"},"version":{"Type":4,"Flags":0,"Description":"Key version"}}}},{"2":{"Name":"AzureKeyVaultVolumePropertiesKeys","Properties":{},"AdditionalProperties":255}},{"2":{"Name":"SecretObjectProperties","Properties":{"alias":{"Type":4,"Flags":0,"Description":"File name when written to disk"},"encoding":{"Type":261,"Flags":0,"Description":"Represents secret encodings"},"name":{"Type":4,"Flags":1,"Description":"The name of the secret"},"version":{"Type":4,"Flags":0,"Description":"secret version"}}}},{"6":{"Value":"utf-8"}},{"6":{"Value":"hex"}},{"6":{"Value":"base64"}},{"5":{"Elements":[258,259,260]}},{"2":{"Name":"AzureKeyVaultVolumePropertiesSecrets","Properties":{},"AdditionalProperties":257}},{"6":{"Value":"azure.com.keyvault"}},{"2":{"Name":"TrackedResourceTags","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Applications.Core/volumes@2023-10-01-preview","ScopeType":0,"Body":231}},{"8":{"Name":"listSecrets","ResourceType":"Applications.Core/extenders","ApiVersion":"2023-10-01-preview","Output":0,"Input":0}},{"2":{"Name":"SecretStoreListSecretsResult","Properties":{"type":{"Type":270,"Flags":2,"Description":"The type of SecretStore data"},"data":{"Type":271,"Flags":2,"Description":"An object to represent key-value type secrets"}}}},{"6":{"Value":"generic"}},{"6":{"Value":"certificate"}},{"5":{"Elements":[268,269]}},{"2":{"Name":"SecretStoreListSecretsResultData","Properties":{},"AdditionalProperties":221}},{"8":{"Name":"listSecrets","ResourceType":"Applications.Core/secretStores","ApiVersion":"2023-10-01-preview","Output":267,"Input":0}}]
>>>>>>> a6a9571b0 (regen)
