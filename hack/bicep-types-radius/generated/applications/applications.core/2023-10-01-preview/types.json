[
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/applications"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/applications",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 1,
        "description": "Application properties"
      },
      "tags": {
        "type": {
          "$ref": "#/50"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "extensions": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The application extension."
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/5"
      },
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      }
    ]
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Extension",
    "discriminator": "kind",
    "baseProperties": {},
    "elements": {
      "aci": {
        "$ref": "#/15"
      },
      "daprSidecar": {
        "$ref": "#/17"
      },
      "kubernetesMetadata": {
        "$ref": "#/23"
      },
      "kubernetesNamespace": {
        "$ref": "#/27"
      },
      "manualScaling": {
        "$ref": "#/29"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceExtension",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The resource group of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "DaprSidecarExtension",
    "properties": {
      "appPort": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "The Dapr appPort. Specifies the internal listening port for the application to handle requests from the Dapr sidecar."
      },
      "appId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The Dapr appId. Specifies the identifier used by Dapr for service invocation."
      },
      "config": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the Dapr configuration to use for the resource."
      },
      "protocol": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "The Dapr sidecar extension protocol"
      },
      "kind": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "StringLiteralType",
    "value": "http"
  },
  {
    "$type": "StringLiteralType",
    "value": "grpc"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/20"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "daprSidecar"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtension",
    "properties": {
      "annotations": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "Annotations to be applied to the Kubernetes resources output by the resource"
      },
      "labels": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Labels to be applied to the Kubernetes resources output by the resource"
      },
      "kind": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionAnnotations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesMetadataExtensionLabels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesMetadata"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesNamespaceExtension",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The namespace of the application environment."
      },
      "kind": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetesNamespace"
  },
  {
    "$type": "ObjectType",
    "name": "ManualScalingExtension",
    "properties": {
      "replicas": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "Replica count."
      },
      "kind": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "Discriminator property for Extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "manualScaling"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceStatus",
    "properties": {
      "compute": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 0,
        "description": "Represents backing compute resource"
      },
      "recipe": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 2,
        "description": "Recipe status at deployment time for a resource."
      },
      "outputResources": {
        "type": {
          "$ref": "#/49"
        },
        "flags": 0,
        "description": "Properties of an output resource"
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "EnvironmentCompute",
    "discriminator": "kind",
    "baseProperties": {
      "resourceId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id of the compute resource for application environment."
      },
      "identity": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      }
    },
    "elements": {
      "aci": {
        "$ref": "#/42"
      },
      "kubernetes": {
        "$ref": "#/44"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentitySettings",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 1,
        "description": "IdentitySettingKind is the kind of supported external identity setting"
      },
      "oidcIssuer": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URI for your compute platform's OIDC issuer"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource ID of the provisioned identity"
      },
      "managedIdentity": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "The list of user assigned managed identities"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "undefined"
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.workload"
  },
  {
    "$type": "StringLiteralType",
    "value": "userAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "systemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "systemAssignedUserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/38"
      },
      {
        "$ref": "#/39"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureContainerInstanceCompute",
    "properties": {
      "resourceGroup": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource group to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "aci"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesCompute",
    "properties": {
      "namespace": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The namespace to use for the environment."
      },
      "kind": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 1,
        "description": "Discriminator property for EnvironmentCompute."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "kubernetes"
  },
  {
    "$type": "ObjectType",
    "name": "RecipeStatus",
    "properties": {
      "templateKind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "TemplateKind is the kind of the recipe template used by the portable resource upon deployment."
      },
      "templatePath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "TemplatePath is the path of the recipe consumed by the portable resource upon deployment."
      },
      "templateVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "TemplateVersion is the version number of the template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OutputResource",
    "properties": {
      "localId": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The logical identifier scoped to the owning Radius resource. This is only needed or used when a resource has a dependency relationship. LocalIDs do not have any particular format or meaning beyond being compared to determine dependency relationships."
      },
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The UCP resource ID of the underlying resource."
      },
      "radiusManaged": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Determines whether Radius manages the lifecycle of the underlying resource."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/47"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/52"
      },
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/applications@2023-10-01-preview",
    "body": {
      "$ref": "#/3"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/containers"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/containers",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/63"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 1,
        "description": "Container properties"
      },
      "tags": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "container": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 1,
        "description": "Definition of a container"
      },
      "connections": {
        "type": {
          "$ref": "#/118"
        },
        "flags": 0,
        "description": "Specifies a connection to another resource."
      },
      "identity": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 0,
        "description": "IdentitySettings is the external identity setting."
      },
      "extensions": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "Extensions spec of the resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'internal', where Radius manages the lifecycle of the resource internally, and 'manual', where a user manages the resource."
      },
      "resources": {
        "type": {
          "$ref": "#/124"
        },
        "flags": 0,
        "description": "A collection of references to resources associated with the container"
      },
      "restartPolicy": {
        "type": {
          "$ref": "#/128"
        },
        "flags": 0,
        "description": "Restart policy for the container"
      },
      "runtimes": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "The properties for runtime configuration"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/73"
      },
      {
        "$ref": "#/74"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Container",
    "properties": {
      "image": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The registry and image to download and run in your container"
      },
      "imagePullPolicy": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "The image pull policy for the container"
      },
      "env": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 0,
        "description": "environment"
      },
      "ports": {
        "type": {
          "$ref": "#/89"
        },
        "flags": 0,
        "description": "container ports"
      },
      "readinessProbe": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "livenessProbe": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 0,
        "description": "Properties for readiness/liveness probe"
      },
      "volumes": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "container volumes"
      },
      "command": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "Entrypoint array. Overrides the container image's ENTRYPOINT"
      },
      "args": {
        "type": {
          "$ref": "#/111"
        },
        "flags": 0,
        "description": "Arguments to the entrypoint. Overrides the container image's CMD"
      },
      "workingDir": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Working directory for the container"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "IfNotPresent"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/77"
      },
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariable",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value of the environment variable"
      },
      "valueFrom": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "The reference to the variable"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariableReference",
    "properties": {
      "secretRef": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 1,
        "description": "This secret is used within a recipe. Secrets are encrypted, often have fine-grained access control, auditing and are recommended to be used to hold sensitive data."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretReference",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of an Applications.Core/SecretStore resource containing sensitive data required for recipe execution."
      },
      "key": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The key for the secret in the secret store."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerEnv",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/81"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPortProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "protocol": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "The protocol in use by the port"
      },
      "scheme": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specifies the URL scheme of the communication protocol. Consumers can use the scheme to construct a URL. The value defaults to 'http' or 'https' depending on the port value"
      },
      "port": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Specifies the port that will be exposed by this container. Must be set when value different from containerPort is desired"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "TCP"
  },
  {
    "$type": "StringLiteralType",
    "value": "UDP"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/87"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPorts",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/85"
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "HealthProbeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "initialDelaySeconds": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Initial delay in seconds before probing for readiness/liveness"
      },
      "failureThreshold": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Threshold number of times the probe fails after which a failure would be reported"
      },
      "periodSeconds": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Interval for the readiness/liveness probe in seconds"
      },
      "timeoutSeconds": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "Number of seconds after which the readiness/liveness probe times out. Defaults to 5 seconds"
      }
    },
    "elements": {
      "exec": {
        "$ref": "#/91"
      },
      "httpGet": {
        "$ref": "#/93"
      },
      "tcp": {
        "$ref": "#/96"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExecHealthProbeProperties",
    "properties": {
      "command": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Command to execute to probe readiness/liveness"
      },
      "kind": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "exec"
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The route to make the HTTP request on"
      },
      "headers": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "Custom HTTP headers to add to the get request"
      },
      "kind": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "HttpGetHealthProbePropertiesHeaders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "httpGet"
  },
  {
    "$type": "ObjectType",
    "name": "TcpHealthProbeProperties",
    "properties": {
      "containerPort": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 1,
        "description": "The listening port number"
      },
      "kind": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 1,
        "description": "Discriminator property for HealthProbeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "tcp"
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "Volume",
    "discriminator": "kind",
    "baseProperties": {
      "mountPath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path where the volume is mounted"
      }
    },
    "elements": {
      "ephemeral": {
        "$ref": "#/99"
      },
      "persistent": {
        "$ref": "#/104"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EphemeralVolume",
    "properties": {
      "managedStore": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 1,
        "description": "The managed store for the ephemeral volume"
      },
      "kind": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "memory"
  },
  {
    "$type": "StringLiteralType",
    "value": "disk"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ephemeral"
  },
  {
    "$type": "ObjectType",
    "name": "PersistentVolume",
    "properties": {
      "permission": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 0,
        "description": "The persistent volume permission"
      },
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The source of the volume"
      },
      "kind": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 1,
        "description": "Discriminator property for Volume."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "read"
  },
  {
    "$type": "StringLiteralType",
    "value": "write"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/105"
      },
      {
        "$ref": "#/106"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "persistent"
  },
  {
    "$type": "ObjectType",
    "name": "ContainerVolumes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/98"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectionProperties",
    "properties": {
      "source": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The source of the connection"
      },
      "disableDefaultEnvVars": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "default environment variable override"
      },
      "iam": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 0,
        "description": "IAM properties"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IamProperties",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 1,
        "description": "The kind of IAM provider to configure"
      },
      "roles": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 0,
        "description": "RBAC permissions to be assigned on the source resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure"
  },
  {
    "$type": "StringLiteralType",
    "value": "string"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/114"
      },
      {
        "$ref": "#/115"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ContainerPropertiesConnections",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/112"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "internal"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/121"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Resource id of an existing resource"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Always"
  },
  {
    "$type": "StringLiteralType",
    "value": "OnFailure"
  },
  {
    "$type": "StringLiteralType",
    "value": "Never"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/126"
      },
      {
        "$ref": "#/127"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "RuntimesProperties",
    "properties": {
      "kubernetes": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "The runtime configuration properties for Kubernetes"
      },
      "aci": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 0,
        "description": "The runtime configuration properties for Kubernetes"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesRuntimeProperties",
    "properties": {
      "base": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The serialized YAML manifest which represents the base Kubernetes resources to deploy, such as Deployment, Service, ServiceAccount, Secrets, and ConfigMaps."
      },
      "pod": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "A strategic merge patch that will be applied to the PodSpec object when this container is being deployed."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "KubernetesPodSpec",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ACIRuntimeProperties",
    "properties": {
      "gatewayID": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of the gateway that is providing L7 traffic for the container"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/containers@2023-10-01-preview",
    "body": {
      "$ref": "#/65"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/environments"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/environments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/137"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 1,
        "description": "Environment properties"
      },
      "tags": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "compute": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "Represents backing compute resource"
      },
      "providers": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 0,
        "description": "The Cloud providers configuration."
      },
      "simulated": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Simulated environment."
      },
      "recipes": {
        "type": {
          "$ref": "#/158"
        },
        "flags": 0,
        "description": "Specifies Recipes linked to the Environment."
      },
      "recipeConfig": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "Configuration for Recipes. Defines how each type of Recipe should be configured and run."
      },
      "extensions": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "The environment extension."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Providers",
    "properties": {
      "azure": {
        "type": {
          "$ref": "#/150"
        },
        "flags": 0,
        "description": "The Azure cloud provider definition."
      },
      "aws": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "The AWS cloud provider definition."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAzure",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvidersAws",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Target scope for AWS resources to be deployed into.  For example: '/planes/aws/aws/accounts/000000000000/regions/us-west-2'."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "RecipeProperties",
    "discriminator": "templateKind",
    "baseProperties": {
      "templatePath": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported."
      },
      "parameters": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "Any object"
      }
    },
    "elements": {
      "bicep": {
        "$ref": "#/153"
      },
      "terraform": {
        "$ref": "#/155"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepRecipeProperties",
    "properties": {
      "plainHttp": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Connect to the Bicep registry using HTTP (not-HTTPS). This should be used when the registry is known not to support HTTPS, for example in a locally-hosted registry. Defaults to false (use HTTPS/TLS)."
      },
      "templateKind": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "bicep"
  },
  {
    "$type": "ObjectType",
    "name": "TerraformRecipeProperties",
    "properties": {
      "templateVersion": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Version of the template to deploy. For Terraform recipes using a module registry this is required, but must be omitted for other module sources."
      },
      "templateKind": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 1,
        "description": "Discriminator property for RecipeProperties."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "terraform"
  },
  {
    "$type": "ObjectType",
    "name": "DictionaryOfRecipeProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/152"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentPropertiesRecipes",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/157"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RecipeConfigProperties",
    "properties": {
      "terraform": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 0,
        "description": "Configuration for Terraform Recipes. Controls how Terraform plans and applies templates as part of Recipe deployment."
      },
      "bicep": {
        "type": {
          "$ref": "#/169"
        },
        "flags": 0,
        "description": "Configuration for Bicep Recipes. Controls how Bicep plans and applies templates as part of Recipe deployment."
      },
      "env": {
        "type": {
          "$ref": "#/172"
        },
        "flags": 0,
        "description": "The environment variables injected during Terraform Recipe execution for the recipes in the environment."
      },
      "envSecrets": {
        "type": {
          "$ref": "#/173"
        },
        "flags": 0,
        "description": "Environment variables containing sensitive information can be stored as secrets. The secrets are stored in Applications.Core/SecretStores resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TerraformConfigProperties",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 0,
        "description": "Authentication information used to access private Terraform module sources. Supported module sources: Git."
      },
      "providers": {
        "type": {
          "$ref": "#/168"
        },
        "flags": 0,
        "description": "Configuration for Terraform Recipe Providers. Controls how Terraform interacts with cloud providers, SaaS providers, and other APIs. For more information, please see: https://developer.hashicorp.com/terraform/language/providers/configuration."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthConfig",
    "properties": {
      "git": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 0,
        "description": "Authentication information used to access private Terraform modules from Git repository sources."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GitAuthConfig",
    "properties": {
      "pat": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 0,
        "description": "Personal Access Token (PAT) configuration used to authenticate to Git platforms."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretConfig",
    "properties": {
      "secret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of an Applications.Core/SecretStore resource containing the Git platform personal access token (PAT). The secret store must have a secret named 'pat', containing the PAT value. A secret named 'username' is optional, containing the username associated with the pat. By default no username is specified."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GitAuthConfigPat",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/163"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderConfigProperties",
    "properties": {
      "secrets": {
        "type": {
          "$ref": "#/166"
        },
        "flags": 0,
        "description": "Sensitive data in provider configuration can be stored as secrets. The secrets are stored in Applications.Core/SecretStores resource."
      }
    },
    "additionalProperties": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderConfigPropertiesSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/165"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TerraformConfigPropertiesProviders",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/167"
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepConfigProperties",
    "properties": {
      "authentication": {
        "type": {
          "$ref": "#/171"
        },
        "flags": 0,
        "description": "Authentication information used to access private bicep registries, which is a map of registry hostname to secret config that contains credential information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "RegistrySecretConfig",
    "properties": {
      "secret": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The ID of an Applications.Core/SecretStore resource containing credential information used to authenticate private container registry.The keys in the secretstore depends on the type."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BicepConfigPropertiesAuthentication",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/170"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EnvironmentVariables",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "RecipeConfigPropertiesEnvSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/83"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/14"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/environments@2023-10-01-preview",
    "body": {
      "$ref": "#/138"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/extenders"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/extenders",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/177"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/178"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/180"
        },
        "flags": 1,
        "description": "ExtenderResource portable resource properties"
      },
      "tags": {
        "type": {
          "$ref": "#/194"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtenderProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the environment that the portable resource is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the application that the portable resource is consumed by (if applicable)"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/189"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "secrets": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "Any object"
      },
      "recipe": {
        "type": {
          "$ref": "#/190"
        },
        "flags": 0,
        "description": "The recipe used to automatically deploy underlying infrastructure for a portable resource"
      },
      "resourceProvisioning": {
        "type": {
          "$ref": "#/193"
        },
        "flags": 0,
        "description": "Specifies how the underlying service/resource is provisioned and managed. Available values are 'recipe', where Radius manages the lifecycle of the resource through a Recipe, and 'manual', where a user manages the resource and provides the values."
      }
    },
    "additionalProperties": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/181"
      },
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      },
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/186"
      },
      {
        "$ref": "#/187"
      },
      {
        "$ref": "#/188"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Recipe",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the recipe within the environment to use"
      },
      "parameters": {
        "type": {
          "$ref": "#/131"
        },
        "flags": 0,
        "description": "Any object"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "recipe"
  },
  {
    "$type": "StringLiteralType",
    "value": "manual"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/191"
      },
      {
        "$ref": "#/192"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ExtenderListSecretResponse",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/131"
    }
  },
  {
    "$type": "FunctionType",
    "parameters": [],
    "output": {
      "$ref": "#/195"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/extenders@2023-10-01-preview",
    "body": {
      "$ref": "#/179"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {
      "listSecrets": {
        "type": {
          "$ref": "#/196"
        },
        "description": "listSecrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/gateways"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/gateways",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/199"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 1,
        "description": "Gateway properties"
      },
      "tags": {
        "type": {
          "$ref": "#/219"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "internal": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet)."
      },
      "hostname": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 0,
        "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."
      },
      "routes": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 1,
        "description": "Routes attached to this Gateway"
      },
      "tls": {
        "type": {
          "$ref": "#/215"
        },
        "flags": 0,
        "description": "TLS configuration definition for Gateway resource."
      },
      "url": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 2,
        "description": "URL of the gateway resource. Readonly"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/202"
      },
      {
        "$ref": "#/203"
      },
      {
        "$ref": "#/204"
      },
      {
        "$ref": "#/205"
      },
      {
        "$ref": "#/206"
      },
      {
        "$ref": "#/207"
      },
      {
        "$ref": "#/208"
      },
      {
        "$ref": "#/209"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "GatewayHostname",
    "properties": {
      "prefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specify a prefix for the hostname: myhostname.myapp.PUBLICHOSTNAMEORIP.nip.io. Mutually exclusive with 'fullyQualifiedHostname' and will be overridden if both are defined."
      },
      "fullyQualifiedHostname": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Specify a fully-qualified domain name: myapp.mydomain.com. Mutually exclusive with 'prefix' and will take priority if both are defined."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayRoute",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The path to match the incoming request path on. Ex - /myservice."
      },
      "destination": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The URL or id of the service to route to. Ex - 'http://myservice'."
      },
      "replacePrefix": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Optionally update the prefix when sending the request to the service. Ex - replacePrefix: '/' and path: '/myservice' will transform '/myservice/myroute' to '/myroute'"
      },
      "enableWebsockets": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "Enables websocket support for the route. Defaults to false."
      },
      "timeoutPolicy": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0,
        "description": "Gateway route timeout policy"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayRouteTimeoutPolicy",
    "properties": {
      "request": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The request timeout in duration for the route. Defaults to 15 seconds."
      },
      "backendRequest": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The backend request timeout in duration for the route. Cannot be greater than the request timeout."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/212"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GatewayTls",
    "properties": {
      "sslPassthrough": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "If true, gateway lets the https traffic sslPassthrough to the backend servers for decryption."
      },
      "minimumProtocolVersion": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 0,
        "description": "TLS minimum protocol version (defaults to 1.2)."
      },
      "certificateFrom": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id for the secret containing the TLS certificate and key for the gateway."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "1.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.3"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/gateways@2023-10-01-preview",
    "body": {
      "$ref": "#/200"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {}
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/secretStores"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/secretStores",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/221"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/222"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/224"
        },
        "flags": 1,
        "description": "The properties of SecretStore"
      },
      "tags": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreProperties",
    "properties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/233"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      },
      "type": {
        "type": {
          "$ref": "#/239"
        },
        "flags": 0,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/245"
        },
        "flags": 1,
        "description": "An object to represent key-value type secrets"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The resource id of external secret store."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/225"
      },
      {
        "$ref": "#/226"
      },
      {
        "$ref": "#/227"
      },
      {
        "$ref": "#/228"
      },
      {
        "$ref": "#/229"
      },
      {
        "$ref": "#/230"
      },
      {
        "$ref": "#/231"
      },
      {
        "$ref": "#/232"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "basicAuthentication"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureWorkloadIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "awsIRSA"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretValueProperties",
    "properties": {
      "encoding": {
        "type": {
          "$ref": "#/243"
        },
        "flags": 0,
        "description": "The type of SecretValue Encoding"
      },
      "value": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The value of secret."
      },
      "valueFrom": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 0,
        "description": "The Secret value source properties"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "raw"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ValueFromProperties",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the referenced secret."
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The version of the referenced secret."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStorePropertiesData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/240"
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResult",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/253"
        },
        "flags": 2,
        "description": "The type of SecretStore data"
      },
      "data": {
        "type": {
          "$ref": "#/254"
        },
        "flags": 2,
        "description": "An object to represent key-value type secrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "generic"
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "basicAuthentication"
  },
  {
    "$type": "StringLiteralType",
    "value": "azureWorkloadIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "awsIRSA"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/248"
      },
      {
        "$ref": "#/249"
      },
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/251"
      },
      {
        "$ref": "#/252"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "SecretStoreListSecretsResultData",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/240"
    }
  },
  {
    "$type": "FunctionType",
    "parameters": [],
    "output": {
      "$ref": "#/247"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/secretStores@2023-10-01-preview",
    "body": {
      "$ref": "#/223"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {
      "listSecrets": {
        "type": {
          "$ref": "#/255"
        },
        "description": "listSecrets"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Applications.Core/volumes"
  },
  {
    "$type": "StringLiteralType",
    "value": "2023-10-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Applications.Core/volumes",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 25,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/257"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/260"
        },
        "flags": 1,
        "description": "Volume properties"
      },
      "tags": {
        "type": {
          "$ref": "#/293"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "VolumeProperties",
    "discriminator": "kind",
    "baseProperties": {
      "environment": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Fully qualified resource ID for the environment that the application is linked to"
      },
      "application": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "Fully qualified resource ID for the application"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/269"
        },
        "flags": 2,
        "description": "Provisioning state of the resource at the time the operation was called"
      },
      "status": {
        "type": {
          "$ref": "#/32"
        },
        "flags": 2,
        "description": "Status of a resource."
      }
    },
    "elements": {
      "azure.com.keyvault": {
        "$ref": "#/270"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Provisioning"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/261"
      },
      {
        "$ref": "#/262"
      },
      {
        "$ref": "#/263"
      },
      {
        "$ref": "#/264"
      },
      {
        "$ref": "#/265"
      },
      {
        "$ref": "#/266"
      },
      {
        "$ref": "#/267"
      },
      {
        "$ref": "#/268"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumeProperties",
    "properties": {
      "certificates": {
        "type": {
          "$ref": "#/283"
        },
        "flags": 0,
        "description": "The KeyVault certificates that this volume exposes"
      },
      "keys": {
        "type": {
          "$ref": "#/285"
        },
        "flags": 0,
        "description": "The KeyVault keys that this volume exposes"
      },
      "resource": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The ID of the keyvault to use for this volume resource"
      },
      "secrets": {
        "type": {
          "$ref": "#/291"
        },
        "flags": 0,
        "description": "The KeyVault secrets that this volume exposes"
      },
      "kind": {
        "type": {
          "$ref": "#/292"
        },
        "flags": 1,
        "description": "Discriminator property for VolumeProperties."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CertificateObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/275"
        },
        "flags": 0,
        "description": "Encoding format. Default utf-8"
      },
      "format": {
        "type": {
          "$ref": "#/278"
        },
        "flags": 0,
        "description": "Represents certificate formats"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the certificate"
      },
      "certType": {
        "type": {
          "$ref": "#/282"
        },
        "flags": 0,
        "description": "Represents certificate types"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Certificate version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/272"
      },
      {
        "$ref": "#/273"
      },
      {
        "$ref": "#/274"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "pem"
  },
  {
    "$type": "StringLiteralType",
    "value": "pfx"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/276"
      },
      {
        "$ref": "#/277"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "certificate"
  },
  {
    "$type": "StringLiteralType",
    "value": "privatekey"
  },
  {
    "$type": "StringLiteralType",
    "value": "publickey"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/279"
      },
      {
        "$ref": "#/280"
      },
      {
        "$ref": "#/281"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesCertificates",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/271"
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the key"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "Key version"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesKeys",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/284"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SecretObjectProperties",
    "properties": {
      "alias": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "File name when written to disk"
      },
      "encoding": {
        "type": {
          "$ref": "#/290"
        },
        "flags": 0,
        "description": "Encoding format. Default utf-8"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 1,
        "description": "The name of the secret"
      },
      "version": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 0,
        "description": "secret version"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "utf-8"
  },
  {
    "$type": "StringLiteralType",
    "value": "hex"
  },
  {
    "$type": "StringLiteralType",
    "value": "base64"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/287"
      },
      {
        "$ref": "#/288"
      },
      {
        "$ref": "#/289"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AzureKeyVaultVolumePropertiesSecrets",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/286"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "azure.com.keyvault"
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/0"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Applications.Core/volumes@2023-10-01-preview",
    "body": {
      "$ref": "#/259"
    },
    "readableScopes": 0,
    "writableScopes": 0,
    "functions": {}
  }
]