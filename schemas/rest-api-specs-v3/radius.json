{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ApplicationList": {
      "description": "List of Application resources.",
      "properties": {
        "value": {
          "description": "List of Application resources.",
          "items": {
            "$ref": "#/definitions/ApplicationResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "ApplicationProperties": {
      "additionalProperties": false,
      "description": "Properties of an application.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ApplicationStatus",
          "description": "Status of the application",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ApplicationResource": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Application resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationProperties",
          "description": "Properties of the application."
        }
      },
      "type": "object",
      "x-ms-azure-resource": true
    },
    "ApplicationStatus": {
      "additionalProperties": false,
      "description": "Status of an application.",
      "properties": {
        "healthErrorDetails": {
          "description": "Health errors for the application",
          "type": "string"
        },
        "healthState": {
          "description": "Health state of the application",
          "type": "string"
        },
        "provisioningErrorDetails": {
          "description": "Provisioning errors for the application",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the application",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureCosmosDBMongoComponentList": {
      "description": "List of azure.com.CosmosDBMongoComponent resources.",
      "properties": {
        "value": {
          "description": "List of azure.com.CosmosDBMongoComponent resources.",
          "items": {
            "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "AzureCosmosDBMongoComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a Resource must be specified",
          "type": "boolean"
        },
        "resource": {
          "description": "The ID of the user-managed CosmosDB with Mongo API to use for this Component",
          "example": [
            "account::mongodb.id"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureCosmosDBMongoComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Azure CosmosDB with Mongo",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureCosmosDBMongoComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "AzureCosmosDBSQLComponentList": {
      "description": "List of azure.com.CosmosDBSQLComponent resources.",
      "properties": {
        "value": {
          "description": "List of azure.com.CosmosDBSQLComponent resources.",
          "items": {
            "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "AzureCosmosDBSQLComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a Resource must be specified",
          "type": "boolean"
        },
        "resource": {
          "description": "The ID of the user-managed CosmosDB with SQL API to use for this Component",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureCosmosDBSQLComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Azure CosmosDB with SQL",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureCosmosDBSQLComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "AzureEntityResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "description": "Resource Etag.",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "Entity Resource",
      "x-ms-client-name": "AzureEntityResource"
    },
    "AzureKeyVaultComponentList": {
      "description": "List of azure.com.KeyVaultComponent resources.",
      "properties": {
        "value": {
          "description": "List of azure.com.KeyVaultComponent resources.",
          "items": {
            "$ref": "#/definitions/AzureKeyVaultComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "AzureKeyVaultComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a Resource must be specified. (KeyVault currently only supports true)",
          "enum": [
            true
          ],
          "example": [
            true
          ],
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AzureKeyVaultComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Azure KeyVault",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureKeyVaultComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "AzureServiceBusComponentList": {
      "description": "List of azure.com.ServiceBusQueueComponent resources.",
      "properties": {
        "value": {
          "description": "List of azure.com.ServiceBusQueueComponent resources.",
          "items": {
            "$ref": "#/definitions/AzureServiceBusComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "AzureServiceBusComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. For now only true is accepted for this Component",
          "enum": [
            true
          ],
          "example": [
            true
          ],
          "type": "boolean"
        },
        "queue": {
          "description": "The name of the queue",
          "type": "string"
        }
      },
      "required": [
        "managed",
        "queue"
      ],
      "type": "object"
    },
    "AzureServiceBusComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Azure ServiceBus",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureServiceBusComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "BasicComponentProperties": {
      "description": "Basic properties of a component.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ComponentStatus",
          "description": "Status of the component",
          "type": "object"
        }
      },
      "type": "object"
    },
    "BasicRouteProperties": {
      "description": "Basic properties of a route.",
      "properties": {
        "status": {
          "$ref": "#/definitions/RouteStatus",
          "description": "Status of the component",
          "type": "object"
        }
      },
      "type": "object"
    },
    "CheckNameAvailabilityRequest": {
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "description": "The name of the resource for which availability needs to be checked.",
          "type": "string"
        },
        "type": {
          "description": "The resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CheckNameAvailabilityResponse": {
      "description": "The check availability result.",
      "properties": {
        "message": {
          "description": "Detailed reason why the given name is available.",
          "type": "string"
        },
        "nameAvailable": {
          "description": "Indicates if the resource name is available.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CheckNameAvailabilityReason"
          }
        }
      },
      "type": "object"
    },
    "ComponentOutputResource": {
      "description": "Properties of an output resource.",
      "type": "object"
    },
    "ComponentStatus": {
      "description": "Status of a component.",
      "properties": {
        "healthState": {
          "description": "Health state of the component",
          "type": "string"
        },
        "outputResources": {
          "items": {
            "$ref": "#/definitions/ComponentOutputResource"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "Provisioning state of the component",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ComponentTrait": {
      "description": "Trait of a component.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "type": "object"
    },
    "ContainerComponentList": {
      "description": "List of ContainerComponent resources.",
      "properties": {
        "value": {
          "description": "List of ContainerComponent resources.",
          "items": {
            "$ref": "#/definitions/ContainerComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "ContainerComponentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "connections": {
          "additionalProperties": {
            "$ref": "#/definitions/ContainerConnection"
          },
          "type": "object"
        },
        "container": {
          "additionalProperties": false,
          "properties": {
            "env": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "image": {
              "description": "The registry and image to download and run in your container",
              "type": "string"
            },
            "livenessProbe": {
              "$ref": "#/definitions/HealthProbeProperties",
              "type": "object"
            },
            "ports": {
              "additionalProperties": {
                "$ref": "#/definitions/ContainerPort"
              },
              "type": "object"
            },
            "readinessProbe": {
              "$ref": "#/definitions/HealthProbeProperties",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "type": "object"
        },
        "traits": {
          "description": "Traits spec of the component",
          "items": {
            "$ref": "#/definitions/ComponentTrait"
          },
          "type": "array"
        }
      }
    },
    "ContainerComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "The radius.dev/Container component provides an abstraction for a container workload that can be run on any Radius platform",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContainerComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "ContainerConnection": {
      "additionalProperties": false,
      "description": "Specifies a connection from the container to another resource",
      "properties": {
        "kind": {
          "description": "The kind of connection",
          "enum": [
            "azure.com/KeyVault",
            "azure.com/ServiceBusQueue",
            "dapr.io/Invoke",
            "dapr.io/PubSubTopic",
            "dapr.io/StateStore",
            "Grpc",
            "Http",
            "microsoft.com/SQL",
            "mongo.com/MongoDB",
            "redislabs.com/Redis"
          ],
          "type": "string"
        },
        "source": {
          "description": "The source of the connection",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerPort": {
      "additionalProperties": false,
      "description": "Specifies a listening port for the container",
      "properties": {
        "containerPort": {
          "description": "The listening port number",
          "type": "number"
        },
        "protocol": {
          "description": "Protocol in use by the port",
          "enum": [
            "TCP",
            "UDP"
          ],
          "type": "string"
        },
        "provides": {
          "description": "Specifies a route provided by this port",
          "type": "string"
        }
      },
      "required": [
        "containerPort"
      ],
      "type": "object"
    },
    "DaprInvokeRouteList": {
      "description": "List of dapr.io.InvokeRoute resources.",
      "properties": {
        "value": {
          "description": "List of dapr.io.InvokeRoute resources.",
          "items": {
            "$ref": "#/definitions/DaprInvokeRouteResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DaprInvokeRouteProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicRouteProperties"
        }
      ],
      "properties": {
        "appId": {
          "description": "The Dapr appId used for the reoute",
          "type": "string"
        }
      },
      "required": [
        "appId"
      ],
      "type": "object"
    },
    "DaprInvokeRouteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Resource that specifies an Dapr Service Invocation Route. A Dapr Service Invocation Route describes a pattern of communication between components.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DaprInvokeRouteProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "DaprPubSubTopicComponentList": {
      "description": "List of dapr.io.PubSubTopicComponent resources.",
      "properties": {
        "value": {
          "description": "List of dapr.io.PubSubTopicComponent resources.",
          "items": {
            "$ref": "#/definitions/DaprPubSubTopicComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DaprPubSubTopicComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "kind": {
          "description": "The Dapr Pub/Sub kind. These strings match the format used by Dapr Kubernetes components.",
          "enum": [
            "any",
            "pubsub.azure.servicebus"
          ],
          "type": "string"
        },
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a resource is required",
          "type": "boolean"
        },
        "resource": {
          "description": "PubSub resource, for unmanaged",
          "type": "string"
        },
        "topic": {
          "description": "PubSub topic",
          "type": "string"
        }
      },
      "required": [
        "kind"
      ]
    },
    "DaprPubSubTopicComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Dapr Pub/Sub",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DaprPubSubTopicComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "DaprStateStoreComponentList": {
      "description": "List of dapr.io.StateStoreComponent resources.",
      "properties": {
        "value": {
          "description": "List of dapr.io.StateStoreComponent resources.",
          "items": {
            "$ref": "#/definitions/DaprStateStoreComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "DaprStateStoreComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "kind": {
          "description": "The Dapr StateStore kind. These strings match the format used by Dapr Kubernetes components.",
          "enum": [
            "any",
            "state.sqlserver",
            "state.azure.tablestorage"
          ],
          "type": "string"
        },
        "managed": {
          "description": "Indicates if the resource is Radius-managed. For now only true is accepted for this Component",
          "enum": [
            true
          ],
          "example": [
            true
          ],
          "type": "boolean"
        }
      },
      "required": [
        "managed",
        "kind"
      ]
    },
    "DaprStateStoreComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Component for Dapr state store",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DaprStateStoreComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "DaprTrait": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ComponentTrait"
        }
      ],
      "description": "Dapr ComponentTrait",
      "properties": {
        "appId": {
          "description": "Dapr appId.",
          "type": "string"
        },
        "appPort": {
          "description": "Dapr appPort.",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "dapr.io/App@v1alpha1"
    },
    "ErrorAdditionalInfo": {
      "description": "The resource management error additional info.",
      "properties": {
        "info": {
          "description": "The additional info.",
          "readOnly": true,
          "type": "object"
        },
        "type": {
          "description": "The additional info type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "properties": {
        "additionalInfo": {
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "type": "array"
        },
        "code": {
          "description": "The error code.",
          "readOnly": true,
          "type": "string"
        },
        "details": {
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "type": "array"
        },
        "message": {
          "description": "The error message.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "description": "The error target.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorResponse": {
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      },
      "title": "Error response",
      "type": "object"
    },
    "ExecHealthProbeProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/HealthProbeProperties"
        }
      ],
      "description": "Specifies the properties for readiness/liveness probe using an executable",
      "properties": {
        "command": {
          "description": "Command to execute to probe readiness/liveness",
          "type": "string"
        },
        "failureThreshold": {
          "description": "Threshold number of times the probe fails after which a failure would be reported",
          "type": "number"
        },
        "initialDelaySeconds": {
          "description": "Initial delay in seconds before probing for readiness/liveness",
          "type": "number"
        },
        "periodSeconds": {
          "description": "Interval for the readiness/liveness probe in seconds",
          "type": "number"
        }
      },
      "required": [
        "kind",
        "command"
      ],
      "type": "object",
      "x-ms-discriminator-value": "exec"
    },
    "HealthProbeCommonProperties": {
      "description": "Properties for readiness/liveness probe",
      "properties": {
        "failureThreshold": {
          "description": "Threshold number of times the probe fails after which a failure would be reported",
          "type": "number"
        },
        "initialDelaySeconds": {
          "description": "Initial delay in seconds before probing for readiness/liveness",
          "type": "number"
        },
        "periodSeconds": {
          "description": "Interval for the readiness/liveness probe in seconds",
          "type": "number"
        }
      },
      "type": "object"
    },
    "HealthProbeProperties": {
      "description": "Properties for readiness/liveness probe",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "type": "object"
    },
    "HttpGetHealthProbeProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/HealthProbeProperties"
        }
      ],
      "description": "Specifies the properties for readiness/liveness probe using HTTP Get",
      "properties": {
        "containerPort": {
          "description": "The listening port number",
          "type": "number"
        },
        "failureThreshold": {
          "description": "Threshold number of times the probe fails after which a failure would be reported",
          "type": "number"
        },
        "headers": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom HTTP headers to add to the get request",
          "type": "object"
        },
        "initialDelaySeconds": {
          "description": "Initial delay in seconds before probing for readiness/liveness",
          "type": "number"
        },
        "path": {
          "description": "The route to make the HTTP request on",
          "type": "string"
        },
        "periodSeconds": {
          "description": "Interval for the readiness/liveness probe in seconds",
          "type": "number"
        }
      },
      "required": [
        "kind",
        "containerPort",
        "path"
      ],
      "type": "object",
      "x-ms-discriminator-value": "httpGet"
    },
    "HttpRouteGateway": {
      "additionalProperties": false,
      "description": "Specifies configuration to allow public traffic from outside the network to the route. Configure a gateway to accept traffic from the internet.",
      "properties": {
        "hostname": {
          "description": "Specifies the public hostname for the route. Use '*' to listen on all hostnames.",
          "type": "string"
        }
      },
      "required": [
        "hostname"
      ],
      "type": "object"
    },
    "HttpRouteList": {
      "description": "List of HttpRoute resources.",
      "properties": {
        "value": {
          "description": "List of HttpRoute resources.",
          "items": {
            "$ref": "#/definitions/HttpRouteResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "HttpRouteProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicRouteProperties"
        }
      ],
      "properties": {
        "gateway": {
          "$ref": "#/definitions/HttpRouteGateway"
        },
        "hostname": {
          "description": "The internal hostname accepting traffic for the route. Readonly.",
          "type": "number"
        },
        "port": {
          "description": "The port number for the route. Defaults to 80.",
          "type": "number"
        },
        "scheme": {
          "description": "The scheme used for traffic. Readonly.",
          "type": "number"
        },
        "url": {
          "description": "A stable URL that that can be used to route traffic to a component. Readonly.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "HttpRouteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Resource that specifies an HTTP Route. An HTTP Route resource provides a stable URL that can be used to route internal or extrnal traffic to a component.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HttpRouteProperties"
        }
      },
      "type": "object",
      "x-ms-azure-resource": true
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "description": "The principal ID of resource identity.",
          "readOnly": true,
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ResourceIdentityType"
          }
        }
      }
    },
    "KeyVaultProperties": {
      "properties": {
        "identity": {
          "description": "The client ID of the identity which will be used to access key vault.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManualScalingTrait": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ComponentTrait"
        }
      ],
      "description": "ManualScaling ComponentTrait",
      "properties": {
        "replicas": {
          "description": "Replica count.",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "radius.dev/ManualScaling@v1alpha1"
    },
    "MongoDBComponentList": {
      "description": "List of mongodb.com.MongoDBComponent resources.",
      "properties": {
        "value": {
          "description": "List of mongodb.com.MongoDBComponent resources.",
          "items": {
            "$ref": "#/definitions/MongoDBComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "MongoDBComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a Resource must be specified",
          "type": "boolean"
        },
        "resource": {
          "description": "The ID of the user-managed DB with Mongo API to use for this Component",
          "example": [
            "account::mongodb.id"
          ],
          "type": "string"
        }
      }
    },
    "MongoDBComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "The mongodb.com/MongoDB component is a portable component which can be deployed to any Radius platform.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoDBComponentProperties"
        }
      },
      "type": "object",
      "x-ms-azure-resource": true
    },
    "Operation": {
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ActionType"
          }
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "properties": {
            "description": {
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true,
              "type": "string"
            },
            "operation": {
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true,
              "type": "string"
            },
            "provider": {
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true,
              "type": "string"
            },
            "resource": {
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true,
              "type": "string"
            }
          }
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true,
          "type": "string"
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Origin"
          }
        }
      },
      "title": "REST API Operation",
      "type": "object"
    },
    "OperationListResult": {
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "type": "array"
        }
      }
    },
    "OperationStatusResult": {
      "description": "The current status of an async operation.",
      "properties": {
        "endTime": {
          "description": "The end time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        },
        "id": {
          "description": "Fully qualified ID for the async operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the async operation.",
          "type": "string"
        },
        "operations": {
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          },
          "type": "array"
        },
        "percentComplete": {
          "description": "Percent of the operation that is complete.",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "startTime": {
          "description": "The start time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "Plan": {
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "description": "A user defined name of the 3rd Party Artifact that is being procured.",
          "type": "string"
        },
        "product": {
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. ",
          "type": "string"
        },
        "promotionCode": {
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic",
          "type": "string"
        },
        "version": {
          "description": "The version of the desired product/artifact.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "title": "Proxy Resource",
      "type": "object"
    },
    "RabbitMQComponentList": {
      "description": "List of rabbitmq.com.MessageQueue resources.",
      "properties": {
        "value": {
          "description": "List of rabbitmq.com.MessageQueue resources.",
          "items": {
            "$ref": "#/definitions/RabbitMQComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "RabbitMQComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "managed": {
          "description": "Indicates if the resource is Radius-managed. For now only true is accepted for this Component.",
          "enum": [
            true
          ],
          "example": [
            true
          ],
          "type": "boolean"
        },
        "queue": {
          "description": "The name of the queue",
          "type": "string"
        }
      },
      "required": [
        "managed",
        "queue"
      ]
    },
    "RabbitMQComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "The rabbitmq.com/MessageQueue component is a Kubernetes specific component for message brokering.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RabbitMQComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "RadiusResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Interface for generic component -- useful for listing components without specifying a type",
      "properties": {
        "properties": {
          "type": "object"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "RadiusResourceList": {
      "description": "List of RadiusResource resources.",
      "properties": {
        "value": {
          "description": "List of RadiusResource resources.",
          "items": {
            "$ref": "#/definitions/RadiusResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "RedisComponentList": {
      "description": "List of redislabs.com.Redis resources.",
      "properties": {
        "value": {
          "description": "List of redislabs.com.Redis resources.",
          "items": {
            "$ref": "#/definitions/RedisComponentResource"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "RedisComponentProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BasicComponentProperties"
        }
      ],
      "properties": {
        "connectionString": {
          "description": "The Redis connection string used to connect to the redis cache",
          "example": [
            "myrediscache.redis.cache.windows.net:6380",
            "redis.default.svc.cluster.local:6379"
          ],
          "type": "string"
        },
        "host": {
          "description": "The host name of the redis cache to which you are connecting",
          "example": [
            "myrediscache.redis.cache.windows.net",
            "redis.default.svc.cluster.local"
          ],
          "type": "string"
        },
        "managed": {
          "description": "Indicates if the resource is Radius-managed. If false, a Resource must be specified. (Redis currently only supports true)",
          "enum": [
            true
          ],
          "example": [
            true
          ],
          "type": "boolean"
        },
        "port": {
          "description": "The port value of the redis cache to which you are connecting",
          "example": [
            6380,
            6379
          ],
          "type": "integer"
        }
      },
      "required": [
        "managed"
      ]
    },
    "RedisComponentResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "The redislabs.com/Redis component is a portable component which can be deployed to any Radius platform.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedisComponentProperties"
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true
    },
    "Resource": {
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the resource",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "Resource",
      "type": "object",
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "etag": {
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ]
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "managedBy": {
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "readOnly": true,
          "type": "string"
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "RouteOutputResource": {
      "description": "Properties of an output resource.",
      "type": "object"
    },
    "RouteStatus": {
      "description": "Status of a route.",
      "properties": {
        "healthState": {
          "description": "Health state of the route",
          "type": "string"
        },
        "outputResources": {
          "items": {
            "$ref": "#/definitions/RouteOutputResource"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "Provisioning state of the route",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "capacity": {
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "format": "int32",
          "type": "integer"
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SkuTier"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "TcpHealthProbeProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/HealthProbeProperties"
        }
      ],
      "description": "Specifies the properties for readiness/liveness probe using TCP",
      "properties": {
        "containerPort": {
          "description": "The listening port number",
          "type": "number"
        },
        "failureThreshold": {
          "description": "Threshold number of times the probe fails after which a failure would be reported",
          "type": "number"
        },
        "initialDelaySeconds": {
          "description": "Initial delay in seconds before probing for readiness/liveness",
          "type": "number"
        },
        "periodSeconds": {
          "description": "Interval for the readiness/liveness probe in seconds",
          "type": "number"
        }
      },
      "required": [
        "kind",
        "containerPort"
      ],
      "type": "object",
      "x-ms-discriminator-value": "tcp"
    },
    "TrackedResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        }
      },
      "title": "Tracked Resource",
      "type": "object"
    },
    "encryptionProperties": {
      "description": "Configuration of key for data encryption",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        },
        "status": {
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EncryptionStatus"
          }
        }
      },
      "type": "object"
    },
    "locationData": {
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "city": {
          "description": "The city or locality where the resource is located.",
          "type": "string"
        },
        "countryOrRegion": {
          "description": "The country or region where the resource is located",
          "type": "string"
        },
        "district": {
          "description": "The district, state, or province where the resource is located.",
          "type": "string"
        },
        "name": {
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "description": "The timestamp of resource creation (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string"
        },
        "createdByType": {
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "createdByType"
          }
        },
        "lastModifiedAt": {
          "description": "The timestamp of resource last modification (UTC)",
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "createdByType"
          }
        }
      },
      "readOnly": true,
      "type": "object"
    }
  },
  "host": "management.azure.com",
  "info": {
    "description": "APIs for deploying and managing applications with Radius.",
    "title": "RadiusClient",
    "version": "2018-09-01-preview",
    "x-ms-code-generation-settings": {
      "name": "radiusClient"
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "description": "The API version to use for this operation.",
      "in": "query",
      "minLength": 1,
      "name": "api-version",
      "required": true,
      "type": "string"
    },
    "ApplicationNameParameter": {
      "description": "The name of the Application resource.",
      "in": "path",
      "name": "applicationName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureCosmosDBMongoComponentNameParameter": {
      "description": "The name of the azure.com.CosmosDBMongoComponent resource.",
      "in": "path",
      "name": "azureCosmosDBMongoComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureCosmosDBSQLComponentNameParameter": {
      "description": "The name of the azure.com.CosmosDBSQLComponent resource.",
      "in": "path",
      "name": "azureCosmosDBSQLComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureKeyVaultComponentNameParameter": {
      "description": "The name of the azure.com.KeyVaultComponent resource.",
      "in": "path",
      "name": "azureKeyVaultComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureServiceBusComponentNameParameter": {
      "description": "The name of the azure.com.ServiceBusQueueComponent resource.",
      "in": "path",
      "name": "azureServiceBusComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ContainerComponentNameParameter": {
      "description": "The name of the ContainerComponent resource.",
      "in": "path",
      "name": "containerComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DaprInvokeRouteNameParameter": {
      "description": "The name of the dapr.io.InvokeRoute resource.",
      "in": "path",
      "name": "daprInvokeRouteName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DaprPubSubTopicComponentNameParameter": {
      "description": "The name of the dapr.io.PubSubTopicComponent resource.",
      "in": "path",
      "name": "daprPubSubTopicComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DaprStateStoreComponentNameParameter": {
      "description": "The name of the dapr.io.StateStoreComponent resource.",
      "in": "path",
      "name": "daprStateStoreComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "HttpRouteNameParameter": {
      "description": "The name of the HttpRoute resource.",
      "in": "path",
      "name": "httpRouteName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "description": "The name of Azure region.",
      "in": "path",
      "minLength": 1,
      "name": "location",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MongoDBComponentNameParameter": {
      "description": "The name of the mongodb.com.MongoDBComponent resource.",
      "in": "path",
      "name": "mongoDBComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "description": "The ID of an ongoing async operation.",
      "in": "path",
      "minLength": 1,
      "name": "operationId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RabbitMQComponentNameParameter": {
      "description": "The name of the rabbitmq.com.MessageQueue resource.",
      "in": "path",
      "name": "rabbitMQComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RadiusResourceNameParameter": {
      "description": "The name of the RadiusResource resource.",
      "in": "path",
      "name": "radiusResourceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RadiusResourceTypeParameter": {
      "description": "The type of the RadiusResource.",
      "in": "path",
      "name": "radiusResourceType",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RedisComponentNameParameter": {
      "description": "The name of the redislabs.com.Redis resource.",
      "in": "path",
      "name": "redisComponentName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "description": "The name of the resource group. The name is case insensitive.",
      "in": "path",
      "maxLength": 90,
      "minLength": 1,
      "name": "resourceGroupName",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "description": "The ID of the target subscription.",
      "in": "path",
      "minLength": 1,
      "name": "subscriptionId",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application": {
      "get": {
        "description": "List the Application resources deployed in the application.",
        "operationId": "Application_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Application resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Application"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}": {
      "delete": {
        "description": "Deletes a Application resource.",
        "operationId": "Application_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Application resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Application"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a Application resource by name.",
        "operationId": "Application_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Application resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Application"
        ]
      },
      "put": {
        "description": "Creates or updates a Application resource.",
        "operationId": "Application_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a Application resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing Application resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "201": {
            "description": "The new Application resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "202": {
            "description": "The existing Application resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Application"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/ContainerComponent": {
      "get": {
        "description": "List the ContainerComponent resources deployed in the application.",
        "operationId": "ContainerComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of ContainerComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "ContainerComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/ContainerComponent/{containerComponentName}": {
      "delete": {
        "description": "Deletes a ContainerComponent resource.",
        "operationId": "ContainerComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The ContainerComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "ContainerComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a ContainerComponent resource by name.",
        "operationId": "ContainerComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The ContainerComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "ContainerComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a ContainerComponent resource.",
        "operationId": "ContainerComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a ContainerComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing ContainerComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ContainerComponentResource"
            }
          },
          "201": {
            "description": "The new ContainerComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/ContainerComponentResource"
            }
          },
          "202": {
            "description": "The existing ContainerComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ContainerComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "ContainerComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/HttpRoute": {
      "get": {
        "description": "List the HttpRoute resources deployed in the application.",
        "operationId": "HttpRoute_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of HttpRoute resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/HttpRouteList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HttpRoute"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/HttpRoute/{httpRouteName}": {
      "delete": {
        "description": "Deletes a HttpRoute resource.",
        "operationId": "HttpRoute_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/HttpRouteNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The HttpRoute resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HttpRoute"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a HttpRoute resource by name.",
        "operationId": "HttpRoute_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/HttpRouteNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The HttpRoute resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/HttpRouteResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HttpRoute"
        ]
      },
      "put": {
        "description": "Creates or updates a HttpRoute resource.",
        "operationId": "HttpRoute_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/HttpRouteNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a HttpRoute resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HttpRouteResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing HttpRoute resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/HttpRouteResource"
            }
          },
          "201": {
            "description": "The new HttpRoute resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/HttpRouteResource"
            }
          },
          "202": {
            "description": "The existing HttpRoute resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/HttpRouteResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HttpRoute"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/RadiusResource": {
      "get": {
        "description": "List the RadiusResource resources deployed in the application.",
        "operationId": "RadiusResource_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of RadiusResource resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RadiusResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "RadiusResource"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.CosmosDBMongoComponent": {
      "get": {
        "description": "List the azure.com.CosmosDBMongoComponent resources deployed in the application.",
        "operationId": "azure.com.CosmosDBMongoComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of azure.com.CosmosDBMongoComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBMongoComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.CosmosDBMongoComponent/{azureCosmosDBMongoComponentName}": {
      "delete": {
        "description": "Deletes a azure.com.CosmosDBMongoComponent resource.",
        "operationId": "azure.com.CosmosDBMongoComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBMongoComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The azure.com.CosmosDBMongoComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBMongoComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a azure.com.CosmosDBMongoComponent resource by name.",
        "operationId": "azure.com.CosmosDBMongoComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBMongoComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The azure.com.CosmosDBMongoComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBMongoComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a azure.com.CosmosDBMongoComponent resource.",
        "operationId": "azure.com.CosmosDBMongoComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBMongoComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a azure.com.CosmosDBMongoComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing azure.com.CosmosDBMongoComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
            }
          },
          "201": {
            "description": "The new azure.com.CosmosDBMongoComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
            }
          },
          "202": {
            "description": "The existing azure.com.CosmosDBMongoComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBMongoComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBMongoComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.CosmosDBSQLComponent": {
      "get": {
        "description": "List the azure.com.CosmosDBSQLComponent resources deployed in the application.",
        "operationId": "azure.com.CosmosDBSQLComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of azure.com.CosmosDBSQLComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBSQLComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.CosmosDBSQLComponent/{azureCosmosDBSQLComponentName}": {
      "delete": {
        "description": "Deletes a azure.com.CosmosDBSQLComponent resource.",
        "operationId": "azure.com.CosmosDBSQLComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBSQLComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The azure.com.CosmosDBSQLComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBSQLComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a azure.com.CosmosDBSQLComponent resource by name.",
        "operationId": "azure.com.CosmosDBSQLComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBSQLComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The azure.com.CosmosDBSQLComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBSQLComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a azure.com.CosmosDBSQLComponent resource.",
        "operationId": "azure.com.CosmosDBSQLComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureCosmosDBSQLComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a azure.com.CosmosDBSQLComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing azure.com.CosmosDBSQLComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
            }
          },
          "201": {
            "description": "The new azure.com.CosmosDBSQLComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
            }
          },
          "202": {
            "description": "The existing azure.com.CosmosDBSQLComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureCosmosDBSQLComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.CosmosDBSQLComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.KeyVaultComponent": {
      "get": {
        "description": "List the azure.com.KeyVaultComponent resources deployed in the application.",
        "operationId": "azure.com.KeyVaultComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of azure.com.KeyVaultComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.KeyVaultComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.KeyVaultComponent/{azureKeyVaultComponentName}": {
      "delete": {
        "description": "Deletes a azure.com.KeyVaultComponent resource.",
        "operationId": "azure.com.KeyVaultComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureKeyVaultComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The azure.com.KeyVaultComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.KeyVaultComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a azure.com.KeyVaultComponent resource by name.",
        "operationId": "azure.com.KeyVaultComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureKeyVaultComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The azure.com.KeyVaultComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.KeyVaultComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a azure.com.KeyVaultComponent resource.",
        "operationId": "azure.com.KeyVaultComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureKeyVaultComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a azure.com.KeyVaultComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing azure.com.KeyVaultComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentResource"
            }
          },
          "201": {
            "description": "The new azure.com.KeyVaultComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentResource"
            }
          },
          "202": {
            "description": "The existing azure.com.KeyVaultComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.KeyVaultComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.ServiceBusQueueComponent": {
      "get": {
        "description": "List the azure.com.ServiceBusQueueComponent resources deployed in the application.",
        "operationId": "azure.com.ServiceBusQueueComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of azure.com.ServiceBusQueueComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.ServiceBusQueueComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/azure.com.ServiceBusQueueComponent/{azureServiceBusComponentName}": {
      "delete": {
        "description": "Deletes a azure.com.ServiceBusQueueComponent resource.",
        "operationId": "azure.com.ServiceBusQueueComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureServiceBusComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The azure.com.ServiceBusQueueComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.ServiceBusQueueComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a azure.com.ServiceBusQueueComponent resource by name.",
        "operationId": "azure.com.ServiceBusQueueComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureServiceBusComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The azure.com.ServiceBusQueueComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.ServiceBusQueueComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a azure.com.ServiceBusQueueComponent resource.",
        "operationId": "azure.com.ServiceBusQueueComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/AzureServiceBusComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a azure.com.ServiceBusQueueComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing azure.com.ServiceBusQueueComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentResource"
            }
          },
          "201": {
            "description": "The new azure.com.ServiceBusQueueComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentResource"
            }
          },
          "202": {
            "description": "The existing azure.com.ServiceBusQueueComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/AzureServiceBusComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "azure.com.ServiceBusQueueComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.InvokeRoute": {
      "get": {
        "description": "List the dapr.io.InvokeRoute resources deployed in the application.",
        "operationId": "dapr.io.InvokeRoute_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of dapr.io.InvokeRoute resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.InvokeRoute"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.InvokeRoute/{daprInvokeRouteName}": {
      "delete": {
        "description": "Deletes a dapr.io.InvokeRoute resource.",
        "operationId": "dapr.io.InvokeRoute_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprInvokeRouteNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The dapr.io.InvokeRoute resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.InvokeRoute"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a dapr.io.InvokeRoute resource by name.",
        "operationId": "dapr.io.InvokeRoute_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprInvokeRouteNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The dapr.io.InvokeRoute resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.InvokeRoute"
        ]
      },
      "put": {
        "description": "Creates or updates a dapr.io.InvokeRoute resource.",
        "operationId": "dapr.io.InvokeRoute_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprInvokeRouteNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a dapr.io.InvokeRoute resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing dapr.io.InvokeRoute resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteResource"
            }
          },
          "201": {
            "description": "The new dapr.io.InvokeRoute resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteResource"
            }
          },
          "202": {
            "description": "The existing dapr.io.InvokeRoute resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprInvokeRouteResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.InvokeRoute"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.PubSubTopicComponent": {
      "get": {
        "description": "List the dapr.io.PubSubTopicComponent resources deployed in the application.",
        "operationId": "dapr.io.PubSubTopicComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of dapr.io.PubSubTopicComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.PubSubTopicComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.PubSubTopicComponent/{daprPubSubTopicComponentName}": {
      "delete": {
        "description": "Deletes a dapr.io.PubSubTopicComponent resource.",
        "operationId": "dapr.io.PubSubTopicComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprPubSubTopicComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The dapr.io.PubSubTopicComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.PubSubTopicComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a dapr.io.PubSubTopicComponent resource by name.",
        "operationId": "dapr.io.PubSubTopicComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprPubSubTopicComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The dapr.io.PubSubTopicComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.PubSubTopicComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a dapr.io.PubSubTopicComponent resource.",
        "operationId": "dapr.io.PubSubTopicComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprPubSubTopicComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a dapr.io.PubSubTopicComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing dapr.io.PubSubTopicComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentResource"
            }
          },
          "201": {
            "description": "The new dapr.io.PubSubTopicComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentResource"
            }
          },
          "202": {
            "description": "The existing dapr.io.PubSubTopicComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprPubSubTopicComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.PubSubTopicComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.StateStoreComponent": {
      "get": {
        "description": "List the dapr.io.StateStoreComponent resources deployed in the application.",
        "operationId": "dapr.io.StateStoreComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of dapr.io.StateStoreComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.StateStoreComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/dapr.io.StateStoreComponent/{daprStateStoreComponentName}": {
      "delete": {
        "description": "Deletes a dapr.io.StateStoreComponent resource.",
        "operationId": "dapr.io.StateStoreComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprStateStoreComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The dapr.io.StateStoreComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.StateStoreComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a dapr.io.StateStoreComponent resource by name.",
        "operationId": "dapr.io.StateStoreComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprStateStoreComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The dapr.io.StateStoreComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.StateStoreComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a dapr.io.StateStoreComponent resource.",
        "operationId": "dapr.io.StateStoreComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/DaprStateStoreComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a dapr.io.StateStoreComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing dapr.io.StateStoreComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentResource"
            }
          },
          "201": {
            "description": "The new dapr.io.StateStoreComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentResource"
            }
          },
          "202": {
            "description": "The existing dapr.io.StateStoreComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/DaprStateStoreComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "dapr.io.StateStoreComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/mongodb.com.MongoDBComponent": {
      "get": {
        "description": "List the mongodb.com.MongoDBComponent resources deployed in the application.",
        "operationId": "mongodb.com.MongoDBComponent_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of mongodb.com.MongoDBComponent resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "mongodb.com.MongoDBComponent"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/mongodb.com.MongoDBComponent/{mongoDBComponentName}": {
      "delete": {
        "description": "Deletes a mongodb.com.MongoDBComponent resource.",
        "operationId": "mongodb.com.MongoDBComponent_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDBComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The mongodb.com.MongoDBComponent resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "mongodb.com.MongoDBComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a mongodb.com.MongoDBComponent resource by name.",
        "operationId": "mongodb.com.MongoDBComponent_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDBComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The mongodb.com.MongoDBComponent resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "mongodb.com.MongoDBComponent"
        ]
      },
      "put": {
        "description": "Creates or updates a mongodb.com.MongoDBComponent resource.",
        "operationId": "mongodb.com.MongoDBComponent_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDBComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a mongodb.com.MongoDBComponent resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoDBComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing mongodb.com.MongoDBComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/MongoDBComponentResource"
            }
          },
          "201": {
            "description": "The new mongodb.com.MongoDBComponent resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/MongoDBComponentResource"
            }
          },
          "202": {
            "description": "The existing mongodb.com.MongoDBComponent resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/MongoDBComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "mongodb.com.MongoDBComponent"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/rabbitmq.com.MessageQueue": {
      "get": {
        "description": "List the rabbitmq.com.MessageQueue resources deployed in the application.",
        "operationId": "rabbitmq.com.MessageQueue_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of rabbitmq.com.MessageQueue resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "rabbitmq.com.MessageQueue"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/rabbitmq.com.MessageQueue/{rabbitMQComponentName}": {
      "delete": {
        "description": "Deletes a rabbitmq.com.MessageQueue resource.",
        "operationId": "rabbitmq.com.MessageQueue_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RabbitMQComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The rabbitmq.com.MessageQueue resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "rabbitmq.com.MessageQueue"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a rabbitmq.com.MessageQueue resource by name.",
        "operationId": "rabbitmq.com.MessageQueue_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RabbitMQComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The rabbitmq.com.MessageQueue resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "rabbitmq.com.MessageQueue"
        ]
      },
      "put": {
        "description": "Creates or updates a rabbitmq.com.MessageQueue resource.",
        "operationId": "rabbitmq.com.MessageQueue_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RabbitMQComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a rabbitmq.com.MessageQueue resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing rabbitmq.com.MessageQueue resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentResource"
            }
          },
          "201": {
            "description": "The new rabbitmq.com.MessageQueue resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentResource"
            }
          },
          "202": {
            "description": "The existing rabbitmq.com.MessageQueue resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/RabbitMQComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "rabbitmq.com.MessageQueue"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/redislabs.com.Redis": {
      "get": {
        "description": "List the redislabs.com.Redis resources deployed in the application.",
        "operationId": "redislabs.com.Redis_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of redislabs.com.Redis resources was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RedisComponentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "redislabs.com.Redis"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/redislabs.com.Redis/{redisComponentName}": {
      "delete": {
        "description": "Deletes a redislabs.com.Redis resource.",
        "operationId": "redislabs.com.Redis_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RedisComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The redislabs.com.Redis resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "redislabs.com.Redis"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a redislabs.com.Redis resource by name.",
        "operationId": "redislabs.com.Redis_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RedisComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The redislabs.com.Redis resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RedisComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "redislabs.com.Redis"
        ]
      },
      "put": {
        "description": "Creates or updates a redislabs.com.Redis resource.",
        "operationId": "redislabs.com.Redis_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RedisComponentNameParameter"
          },
          {
            "description": "Parameters supplied to the CreateOrUpdate operation of a redislabs.com.Redis resource.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedisComponentResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing redislabs.com.Redis resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/RedisComponentResource"
            }
          },
          "201": {
            "description": "The new redislabs.com.Redis resource was successfully created.",
            "schema": {
              "$ref": "#/definitions/RedisComponentResource"
            }
          },
          "202": {
            "description": "The existing redislabs.com.Redis resource was successfully updated.",
            "schema": {
              "$ref": "#/definitions/RedisComponentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "redislabs.com.Redis"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/radiusv3/Application/{applicationName}/{radiusResourceType}/{radiusResourceName}": {
      "delete": {
        "description": "Deletes a RadiusResource resource.",
        "operationId": "RadiusResource_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RadiusResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/RadiusResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The RadiusResource resource was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "RadiusResource"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "description": "Gets a RadiusResource resource by name.",
        "operationId": "RadiusResource_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApplicationNameParameter"
          },
          {
            "$ref": "#/parameters/RadiusResourceTypeParameter"
          },
          {
            "$ref": "#/parameters/RadiusResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The RadiusResource resource was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/RadiusResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "RadiusResource"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2"
    }
  },
  "swagger": "2.0"
}