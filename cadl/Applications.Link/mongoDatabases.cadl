// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@cadl-lang/openapi";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

import "./global.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;
using OpenAPI;


@service({
  title: "Applications.Link Management APIs",
  version: "2022-03-15-privatepreview",
})
@doc("REST APIs for Applications.Link/mongoDatabases")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Applications.Link;
@doc("MongoDatabase link")
model MongoDatabaseResource is TrackedResource<MongoDatabaseProperties> {
  @doc("The name of the MongoDatabase link resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @path
  @segment("mongoDatabases")
  @key("mongoDatabaseName")
  @extension("x-ms-parameter-location", "method")
  name: string;
}

@doc("The secret values for the given MongoDatabase resource")
model MongoDatabaseListSecretsResult is MongoDatabaseSecrets;

@doc("The secret values for the given MongoDatabase resource")
model MongoDatabaseSecrets {
  @doc("Username to use when connecting to the target Mongo database")
  username?: string;

  @doc("Password to use when connecting to the target Mongo database")
  password?: string;

  @doc("Connection string used to connect to the target Mongo database")
  connectionString?: string;
}

@doc("MongoDatabase Properties for Mode Resource")
model ResourceMongoDatabaseProperties extends MongoDatabaseProperties{
  @doc("Fully qualified resource ID of a supported resource with Mongo API to use for this link")
  resource: string;

  @doc("Host name of the target Mongo database")
  host?: string;

  @doc("Port value of the target Mongo database")
  port?: int32;

  @doc("Database name of the target Mongo database")
  @visibility("read")
  database?: string;

  @doc("How to build the Mongo database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "resource";
}
@doc("MongoDatabase Properties for Mode Values")
model ValuesMongoDatabaseProperties extends MongoDatabaseProperties{
  @doc("Host name of the target Mongo database")
  host: string;

  @doc("Port value of the target Mongo database")
  port: int32;

  @doc("Database name of the target Mongo database")
  @visibility("read")
  database?: string; 

  @doc("How to build the Mongo database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "values";
}
@doc("MongoDatabase Properties for Mode Recipe")
model RecipeMongoDatabaseProperties extends MongoDatabaseProperties{
  @doc("Host name of the target Mongo database")
  host?: string;

  @doc("Port value of the target Mongo database")
  port?: int32;

  @doc("Database name of the target Mongo database")
  @visibility("read")
  database?: string;

  @doc("The recipe used to automatically deploy underlying infrastructure for the mongodatabases link")
  recipe: Recipe;

  @doc("How to build the Mongo database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "recipe";
}
@doc("MongoDatabase link properties")
@discriminator("mode")
model MongoDatabaseProperties extends BasicResourceProperties{
  @doc("Provisioning state of the mongo database link at the time the operation was called")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @doc("Secrets values provided for the resource")
  secrets?: MongoDatabaseSecrets;
}

#suppress "@azure-tools/cadl-azure-resource-manager/arm-resource-operation-outside-interface" "This is an interface template"
@doc("Lists secrets values for the specified MongoDatabase resource")
@post
@route("/{rootScope}/providers/Applications.Link/mongoDatabases/{mongoDatabaseName}/listSecrets")
op MongoDatabases_listSecrets(...ApiVersionParameter,
  ...RootScopeParam,
  @doc("The name of the MongoDatabase link resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @path
  @extension("x-ms-parameter-location", "method")
  mongoDatabaseName: string): ArmResponse<MongoDatabaseListSecretsResult>
   | ErrorResponse;

@armResourceOperations
interface MongoDatabases
  extends Radius.ResourceOperationWithAsyncDelete<
      MongoDatabaseResource,
      MongoDatabaseProperties,
      RootScopeParam
    > {}