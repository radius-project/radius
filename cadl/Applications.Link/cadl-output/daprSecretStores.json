{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Link Management APIs",
    "version": "0000-00-00",
    "description": "REST API for Applications.Link DaprSecretStore Resource",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      }
    }
  },
  "tags": [
    {
      "name": "DaprSecretStore"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/{rootScope}/providers/Applications.Link/daprSecretStores": {
      "get": {
        "tags": [
          "DaprSecretStore"
        ],
        "operationId": "DaprSecretStore_ListByResourceGroup",
        "description": "List DaprSecretStoreResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Link/daprSecretStores/{daprSecretStoreName}": {
      "get": {
        "tags": [
          "DaprSecretStore"
        ],
        "operationId": "DaprSecretStore_Get",
        "description": "Get a DaprSecretStoreResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/DaprSecretStoreResource.daprSecretStoreName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DaprSecretStore"
        ],
        "operationId": "DaprSecretStore_CreateOrUpdate",
        "description": "Create a DaprSecretStoreResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/DaprSecretStoreResource.daprSecretStoreName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "DaprSecretStore"
        ],
        "operationId": "DaprSecretStore_Update",
        "description": "Update a DaprSecretStoreResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/DaprSecretStoreResource.daprSecretStoreName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprSecretStoreResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DaprSecretStore"
        ],
        "operationId": "DaprSecretStore_Delete",
        "description": "Delete a DaprSecretStoreResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/DaprSecretStoreResource.daprSecretStoreName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Applications.Link/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Application": {
      "type": "string",
      "description": "Fully qualified resource ID for the application that the link is consumed by"
    },
    "BasicResourceProperties": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ResourceStatus",
          "description": "Status of a resource.",
          "readOnly": true
        }
      },
      "description": "Basic properties of a Radius resource.",
      "required": [
        "status"
      ]
    },
    "DaprSecretStoreProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the dapr secret store link at the time the operation was called",
          "readOnly": true
        },
        "application": {
          "$ref": "#/definitions/Application",
          "description": "Fully qualified resource ID for the application that the link is consumed by"
        },
        "environment": {
          "type": "string",
          "description": "Fully qualified resource ID for the environment that the link is linked to"
        },
        "kind": {
          "type": "string",
          "enum": [
            "generic"
          ],
          "description": "Radius kind for Dapr Secret Store"
        },
        "type": {
          "type": "string",
          "description": "Dapr Secret Store type. These strings match the types defined in Dapr Component format: https://docs.dapr.io/reference/components-reference/supported-secret-stores/"
        },
        "version": {
          "type": "string",
          "description": "Dapr component version"
        },
        "metadata": {
          "$ref": "#/definitions/object",
          "description": "Metadata for the Secret Store resource. This should match the values specified in Dapr component spec"
        }
      },
      "description": "DaprSecretStore properties",
      "required": [
        "environment",
        "kind",
        "type",
        "version",
        "metadata"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasicResourceProperties"
        }
      ]
    },
    "DaprSecretStoreResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DaprSecretStoreProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DaprSecretStoreResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaprSecretStoreResource"
          },
          "x-cadl-name": "DaprSecretStoreResource[]",
          "description": "The DaprSecretStoreResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation<DaprSecretStoreResource>"
        }
      },
      "description": "The response of a DaprSecretStoreResource list operation.",
      "required": [
        "value"
      ]
    },
    "DaprSecretStoreResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/DaprSecretStoreResourceUpdateProperties"
        }
      },
      "description": "The type used for update operations of the DaprSecretStoreResource."
    },
    "DaprSecretStoreResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application",
          "description": "Fully qualified resource ID for the application that the link is consumed by"
        },
        "environment": {
          "type": "string",
          "description": "Fully qualified resource ID for the environment that the link is linked to"
        },
        "kind": {
          "type": "string",
          "enum": [
            "generic"
          ],
          "description": "Radius kind for Dapr Secret Store"
        },
        "type": {
          "type": "string",
          "description": "Dapr Secret Store type. These strings match the types defined in Dapr Component format: https://docs.dapr.io/reference/components-reference/supported-secret-stores/"
        },
        "version": {
          "type": "string",
          "description": "Dapr component version"
        },
        "metadata": {
          "$ref": "#/definitions/object",
          "description": "Metadata for the Secret Store resource. This should match the values specified in Dapr component spec"
        }
      },
      "description": "The updatable properties of the DaprSecretStoreResource."
    },
    "OutputResource": {
      "type": "object",
      "properties": {},
      "description": "Properties of an output resource."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceStatus": {
      "type": "object",
      "properties": {
        "outputResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputResource"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "OutputResource[]",
          "description": "Properties of an output resource"
        }
      },
      "description": "Status of a resource.",
      "required": [
        "outputResources"
      ]
    },
    "object": {
      "type": "object",
      "properties": {}
    }
  },
  "parameters": {
    "DaprSecretStoreResource.daprSecretStoreName": {
      "name": "daprSecretStoreName",
      "in": "path",
      "required": true,
      "description": "DaprSecretStore name",
      "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RootScopeParam": {
      "name": "rootScope",
      "in": "path",
      "required": true,
      "description": "root scope path",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
