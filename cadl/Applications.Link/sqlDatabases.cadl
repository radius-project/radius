/*
Copyright 2023 The Radius Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0
    
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@cadl-lang/openapi";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

import "./global.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;
using OpenAPI;

@armProviderNamespace
@service({
  title: "Applications.Link Management APIs",
  version: "2022-03-15-privatepreview",
})
@doc("REST APIs for Applications.Link/sqlDatabases")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Applications.Link;

interface Operations extends Azure.ResourceManager.Operations {}

@doc("SqlDatabase Properties for Mode Resource")
model ResourceSqlDatabaseProperties extends SqlDatabaseProperties{
  @doc("How to build the Sql database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "resource";

  @doc("Fully qualified resource ID of a supported resource with Sql API to use for this link")
  resource: string;

  @doc("The name of the Sql database.")
  database?: string;

  @doc("The fully qualified domain name of the Sql database.")
  server?: string;
}
@doc("SqlDatabase Properties for Mode Values")
model ValuesSqlDatabaseProperties extends SqlDatabaseProperties{
  @doc("How to build the Sql database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "values";
  
  @doc("The name of the Sql database.")
  database: string;

  @doc("The fully qualified domain name of the Sql database.")
  server: string;
}
@doc("SqlDatabase Properties for Mode Recipe")
model RecipeSqlDatabaseProperties extends SqlDatabaseProperties{
  @doc("How to build the Sql database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "recipe";

  @doc("The recipe used to automatically deploy underlying infrastructure for the sqldatabases link")
  recipe: Recipe;

  @doc("The name of the Sql database.")
  database?: string;

  @doc("The fully qualified domain name of the Sql database.")
  server?: string;
}
@doc("SqlDatabase properties")
@discriminator("mode")
model SqlDatabaseProperties extends BasicResourceProperties {
  @doc("Provisioning state of the Sql database link at the time the operation was called")
  @visibility("read")
  provisioningState?: ProvisioningState;
}

@doc("SqlDatabase link")
model SqlDatabaseResource is TrackedResource<SqlDatabaseProperties> {
  @doc("The name of the SqlDatabase link resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @key("sqlDatabaseName")
  @path
  @segment("sqlDatabases")
  @extension("x-ms-parameter-location", "method")
  name: string;
}

@armResourceOperations
interface SqlDatabases
  extends Radius.ResourceOperationWithSyncDelete<
      SqlDatabaseResource,
      SqlDatabaseProperties,
      RootScopeParam
    > {}
