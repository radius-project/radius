/*
Copyright 2023 The Radius Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0
    
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@cadl-lang/openapi";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;
using OpenAPI;

namespace Applications.Datastores;

@doc("RedisCache portable resource")
model RedisCacheResource
  is TrackedResource<RedisCacheProperties> {
  @doc("The name of the RedisCache portable resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @key("redisCacheName")
  @path
  @segment("redisCaches")
  name: string;
}

@doc("The secret values for the given RedisCache resource")
model RedisCacheListSecretsResult is RedisCacheSecrets;

@doc("The secret values for the given RedisCache resource")
model RedisCacheSecrets {
  @doc("The connection string used to connect to the Redis cache")
  connectionString?: string;

  @doc("The password for this Redis cache instance")
  password?: string;
}

@doc("RedisCache Properties for Mode Resource")
model ResourceRedisCacheProperties extends RedisCacheProperties {
  @doc("How to build the RedisCache portable resource. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "resource";

  @doc("Fully qualified resource ID of a supported resource with Redis API to use for this portable resource")
  resource: string;

  @doc("The host name of the target Redis cache")
  host?: string;

  @doc("The port value of the target Redis cache")
  port?: int32;

  @doc("The username for Redis cache")
  @visibility("read")
  username?: string;
}
@doc("RedisCache Properties for Mode Values")
model ValuesRedisCacheProperties extends RedisCacheProperties {
  @doc("How to build the RedisCache portable resource. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "values";

  @doc("The host name of the target Redis cache")
  host: string;

  @doc("The port value of the target Redis cache")
  port: int32;

  @doc("The username for Redis cache")
  @visibility("read")
  username?: string;
}
@doc("RedisCache Properties for Mode Recipe")
model RecipeRedisCacheProperties extends RedisCacheProperties {
  @doc("How to build the RedisCache portable resource. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.")
  mode: "recipe";

  @doc("The host name of the target Redis cache")
  host?: string;

  @doc("The port value of the target Redis cache")
  port?: int32;

  @doc("The username for Redis cache")
  @visibility("read")
  username?: string;

  @doc("The recipe used to automatically deploy underlying infrastructure for the rediscaches portable resource")
  recipe: Recipe;
}

@discriminator("mode")
@doc("RedisCache portable resource properties")
model RedisCacheProperties extends BasicResourceProperties {
  @doc("Provisioning state of the redis cache portable resource at the time the operation was called")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @doc("Secrets provided by resource")
  secrets?: RedisCacheSecrets;
}
#suppress "@azure-tools/cadl-azure-resource-manager/arm-resource-operation-outside-interface" "This is an interface template"
@doc("Lists secrets values for the specified RedisCache resource")
@route("/{rootScope}/providers/Applications.Datastores/redisCaches/{redisCacheName}/listSecrets")
@post
op RedisCaches_listSecrets(
  ...ApiVersionParameter,
  ...RootScopeParam, 
  @doc("The name of the RedisCache portable resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @path
  @extension("x-ms-parameter-location", "method")
  redisCacheName: string): ArmResponse<RedisCacheListSecretsResult> | ErrorResponse;

@armResourceOperations
interface RedisCaches
  extends Radius.ResourceOperationWithSyncDelete<
      RedisCacheResource,
      RedisCacheProperties,
      RootScopeParam
    > {}