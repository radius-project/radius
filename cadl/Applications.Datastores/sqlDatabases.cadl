/*
Copyright 2023 The Radius Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0
    
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@cadl-lang/openapi";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;
using OpenAPI;

namespace Applications.Datastores;
@doc("SqlDatabase properties")
model SqlDatabaseProperties extends BasicResourceProperties {
  @doc("Provisioning state of the SQL database portable resource at the time the operation was called")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @doc("The name of the SQL database.")
  database?: string;

  @doc("The fully qualified domain name of the SQL database.")
  server?: string;

  @doc("Port value of the target SQL database")
  port?: int32;

  @doc("Username to use when connecting to the target SQL database")
  username?: string;

  @doc("The recipe used to automatically deploy underlying infrastructure for the SQL databases portable resource")
  recipe?: Recipe;

  @doc("List of the resource IDs that support the SQL Database resource")
  resources?: ResourceReference[];

  @doc("Specifies how the underlying service/resource is provisioned and managed.")
  resourceProvisioning?: ResourceProvisioning;

  @doc("Secret values provided for the resource")
  secrets?: SqlDatabaseSecrets;
}

@doc("The secret values for the given SQL Database resource")
model SqlDatabaseListSecretsResult is SqlDatabaseSecrets;

@doc("The secret values for the given SQL Database resource")
model SqlDatabaseSecrets {
  @doc("Password to use when connecting to the target SQL database")
  password?: string;

  @doc("Connection string used to connect to the target SQL database")
  connectionString?: string;
}

@doc("SqlDatabase portable resource")
model SqlDatabaseResource is TrackedResource<SqlDatabaseProperties> {
  @doc("The name of the SQL Database portable resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @key("sqlDatabaseName")
  @path
  @segment("sqlDatabases")
  @extension("x-ms-parameter-location", "method")
  name: string;
}

#suppress "@azure-tools/cadl-azure-resource-manager/arm-resource-operation-outside-interface" "This is an interface template"
@doc("Lists secrets values for the specified SQL Database resource")
@post
@route("/{rootScope}/providers/Applications.Datastores/sqlDatabases/{sqlDatabaseName}/listSecrets")
op SqlDatabases_listSecrets(...ApiVersionParameter,
  ...RootScopeParam,
  @doc("The name of the SqlDatabase portable resource")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @path
  @extension("x-ms-parameter-location", "method")
  sqlDatabaseName: string): ArmResponse<SqlDatabaseListSecretsResult>
   | ErrorResponse;

@armResourceOperations
interface SqlDatabases
  extends Radius.ResourceOperationWithSyncDelete<
      SqlDatabaseResource,
      SqlDatabaseProperties,
      RootScopeParam
    > {}