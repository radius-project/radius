// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------
import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";


// This file allows to use {rootScope} in our paths with a custom resourceOperations object
import "./customRootScope.cadl";

using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;

@armNamespace
@serviceTitle("Applications.Core Management APIs")
@doc("REST API for Applications.Core Environment Resource")
namespace Applications.Core;

@discriminator("kind")
@doc("Compute resource used by application environment resource.")
model EnvironmentCompute {
  @doc("The resource id of the compute resource for application environment.")
  resourceId: string;
}

@doc("Specifies the properties for Kubernetes compute environment")
model KubernetesCompute extends EnvironmentCompute {
  @doc("resource compute kind")
  kind: "kubernetes";

  @doc("The namespace to use for the environment")
  nameSpace: string;
}

@doc("Environment properties")
model EnvironmentProperties {
  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;

  @doc("The compute resource used by application environment.")
  compute: EnvironmentCompute;
}

model EnvironmentResource is TrackedResource<EnvironmentProperties> {
  @doc("environment name")
  @maxLength(63)
  @pattern("^[a-z]([-a-z0-9]*[a-z0-9])?$")
  @key("environmentName")
  @path
  @segment("environments")
  name: string;
}

@armResourceOperations
interface Environment
  extends Radius.RootScopeResourceOperations<EnvironmentResource, EnvironmentProperties, RootScopeParam> {}

@knownValues(ProvisioningStateKV)
model ProvisioningState is string {}
enum ProvisioningStateKV {
  Succeeded,
  Failed,
  Canceled,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}
