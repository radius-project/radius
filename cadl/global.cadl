enum ProvisioningState {
  Succeeded: "Succeeded",
  Failed: "Failed",
  Canceled: "Canceled",
  Accepted: "Accepted",
  Updating: "Updating",
  Deleting: "Deleting",
  Provisioning: "Provisioning",
}

model BasicResourceProperties {
  status: ResourceStatus;
}

model ResourceStatus {
  outputResources: OutputResource[];
}

@minLength(1)
model ApiVersionParameter is string {}

model OutputResource {}

@minLength(1)
model RootScopeParameter is string {}

model systemData {
  @visibility("read")
  createdBy: string;
  createdByType: "User" | "Application" | "ManagedIdentity" | "Key";
  createdAt: string;
  lastModifiedBy: zonedDateTime;
  lastModifiedByType: "User" | "Application" | "ManagedIdentity" | "Key";
  lastModifiedAt: zonedDateTime;
}

@error
@doc("Error response describing why the operation failed")
model ErrorResponse {
  error: ErrorDetail;
}

model ErrorDetail {
  code: string;
  message: string;
  target: string;
  details: ErrorDetail[];
  additionalInfo: ErrorAdditionalInfo[];
}

model ErrorAdditionalInfo {
  type: string;
  info: {};
}

model TrackedResource extends Resource {
  tags?: Map<string, string>;
  location: string;
}

model Resource {
  @visibility("read")
  id: string;

  @visibility("read")
  name: string;

  @visibility("@read")
  type: string;
}
