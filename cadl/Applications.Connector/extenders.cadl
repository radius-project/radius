// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

import "./global.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;

@armNamespace
@serviceTitle("Applications.Link Management APIs")
@doc("REST API for Applications.Link Extender Resource")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Applications.Link;

@doc("Extender connector")
model ExtenderResource is TrackedResource<ExtenderProperties> {
  @doc("Extender name")
  @maxLength(63)
  @pattern("^[a-z]([-a-z0-9]*[a-z0-9])?$")
  @key("extenderName")
  @path
  @segment("extenders")
  name: string;
}

@doc("Extender connector")
model ExtenderResponseResource is TrackedResource<ExtenderResponseProperties> {
  @doc("Extender name")
  @maxLength(63)
  @pattern("^[a-z]([-a-z0-9]*[a-z0-9])?$")
  @key("extenderName")
  @path
  @segment("extenders")
  name: string;
}

@doc("The secret values for the given Extender resource")
model ExtenderListSecretsResult is ExtenderSecrets;

@doc("The secret values for the given Extender resource")
model ExtenderSecrets {}

@doc("Extender connector properties")
model ExtenderResponseProperties extends BasicResourceProperties {
  @doc("Provisioning state of the extender connector at the time the operation was called")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @doc("Fully qualified resource ID for the environment that the connector is linked to")
  environment: string;

  @doc("Fully qualified resource ID for the application that the connector is consumed by")
  application?: Application;
}

@doc("Extender connector properties")
model ExtenderProperties extends ExtenderResponseProperties {
  @doc("The secrets value for the resource")
  secrets?: ExtenderSecrets;
}

@doc("Lists secrets values for the specified Extender resource")
@route("/{rootScope}/providers/Applications.Link/extenders/{extenderName}/listSecrets")
op post(@path rootScope: RootScopeParam, @path extenderName: string): {
  @statusCode statusCode: 200;
  schema: ExtenderListSecretsResult;
} | ErrorResponse;

@armResourceOperations
interface Extenders
  extends Radius.RootScopeResourceOperations<
      ExtenderResponseResource,
      ExtenderResponseProperties,
      RootScopeParam
    > {}
