// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

// Currently, our spec is not approved by ARM so this is a workaround that the CADL team gave us
// so that we can preface our paths with {rootScope}
// To generate {rootScope} in the path, use the tag --import "./aksrootscope.cadl" while compiling

import "@cadl-lang/openapi";
import "@cadl-lang/rest";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-azure-core";

namespace Azure.ResourceManager.Radius;

using Cadl.Http;
using Cadl.Rest;
using OpenAPI;
using Autorest;
using Azure.Core;
using Azure.ResourceManager.Foundations;

// Skip generation of ListBySubscription
interface PlaneResourceListBySubscription<TResource> {}

model CommonParameters<TResource> {
  ...ApiVersionParameter;
}

model PlaneParentScope<TResource, TRootParams> {
  ...CommonParameters<TResource>;
  ...ParentKeysOf<TResource>;
}

model ResourceParentScope<TResource, TRootParams> {
  ...CommonParameters<TResource>;
  ...ParentKeysOf<TResource>;
  ...TRootParams;
}

model PlaneInstanceParameters<TResource, TRootParams> {
  ...CommonParameters<TResource>;
  ...KeysOf<TResource>;
  ...TRootParams;
}

model ResourceGroupInstanceParameters<TResource, TRootParams> {
  ...CommonParameters<TResource>;
  ...TRootParams;
  ...KeysOf<TResource>;
}

interface CommonResourceOperations<
  TResource extends ArmResource,
  TProperties extends object,
  TRootParams
>
  extends Azure.ResourceManager.Radius.ResourceRead<
      TResource,
      ResourceGroupInstanceParameters<TResource, TRootParams>
    >,
    Azure.ResourceManager.Radius.ResourceCreate<
      TResource,
      ResourceGroupInstanceParameters<TResource, TRootParams>
    >,
    Azure.ResourceManager.Radius.ResourceDelete<
      TResource,
      ResourceGroupInstanceParameters<TResource, TRootParams>
    >,
    ListByParent<TResource, TRootParams> {}

interface PlaneResourceOperations<
  TResource extends ArmResource,
  TProperties extends object,
  TRootParams
>
  extends Azure.ResourceManager.Radius.ResourceRead<
      TResource,
      PlaneInstanceParameters<TResource, TRootParams>
    >,
    Azure.ResourceManager.Radius.ResourceCreate<
      TResource,
      PlaneInstanceParameters<TResource, TRootParams>
    >,
    Azure.ResourceManager.Radius.ResourceDelete<
      TResource,
      PlaneInstanceParameters<TResource, TRootParams>
    >,
    PlaneListByParent<TResource, TRootParams> {}

interface PlaneTypeOperations<
  TResource extends ArmResource,
  TProperties extends object,
  TRootParams
>
  extends Azure.ResourceManager.Radius.ResourceRead<
      TResource,
      PlaneInstanceParameters<TResource, TRootParams>
    > {}

interface ListByParent<TResource extends ArmResource, TRootParams> {
  @get
  //@pageable
  @doc("Lists information about all {name}", TResource)
  @autoRoute
  @list(TResource)
  @segmentOf(TResource)
  @armResourceList(TResource)
  ListByRootScope(
    ...ResourceParentScope<TResource, TRootParams>
  ): ArmResponse<ResourceListResult<TResource>> | ErrorResponse;
}

interface PlaneListByParent<TResource extends ArmResource, TRootParams> {
  @get
  //@pageable
  @doc("Lists information about all {name}s in the given plane", TResource)
  @autoRoute
  @list(TResource)
  @segmentOf(TResource)
  @armResourceList(TResource)
  ListByRootScope(
    ...PlaneParentScope<TResource, TRootParams>
  ): ArmResponse<ResourceListResult<TResource>> | ErrorResponse;
}
