{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Core Management APIs",
    "version": "0000-00-00",
    "description": "REST API for Applications.Core Gateway Resource",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      }
    }
  },
  "tags": [
    {
      "name": "Gateway"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/{rootScope}/providers/Applications.Core/gateways": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_ListByResourceGroup",
        "description": "List GatewayResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Get",
        "description": "Get a GatewayResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/GatewayResource.gatewayName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_CreateOrUpdate",
        "description": "Create a GatewayResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/GatewayResource.gatewayName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Update",
        "description": "Update a GatewayResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/GatewayResource.gatewayName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/GatewayResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Delete",
        "description": "Delete a GatewayResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RootScopeParam"
          },
          {
            "$ref": "#/parameters/GatewayResource.gatewayName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Applications.Core/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "BasicResourceProperties": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ResourceStatus",
          "description": "Status of a resource."
        }
      },
      "description": "Basic properties of a Radius resource.",
      "required": [
        "status"
      ]
    },
    "GatewayProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the Gateway at the time the operation was called.",
          "readOnly": true
        },
        "application": {
          "type": "string",
          "description": "The resource id of the application linked to Gateway resource."
        },
        "internal": {
          "type": "boolean",
          "description": "Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet).",
          "default": false
        },
        "hostname": {
          "$ref": "#/definitions/GatewayPropertiesHostname",
          "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRoute"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "GatewayRoute[]",
          "description": "Routes attached to this Gateway"
        },
        "url": {
          "type": "string",
          "description": "URL of the gateway resource. Readonly",
          "readOnly": true
        }
      },
      "description": "Gateway properties",
      "required": [
        "application",
        "routes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasicResourceProperties"
        }
      ]
    },
    "GatewayPropertiesHostname": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "Specify a prefix for the hostname: myhostname.myapp.PUBLICHOSTNAMEORIP.nip.io. Mutually exclusive with 'fullyQualifiedHostname' and will be overridden if both are defined."
        },
        "fullyQualifiedHostname": {
          "type": "string",
          "description": "Specify a fully-qualified domain name: myapp.mydomain.com. Mutually exclusive with 'prefix' and will take priority if both are defined."
        }
      },
      "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io.",
      "required": [
        "prefix",
        "fullyQualifiedHostname"
      ]
    },
    "GatewayResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "GatewayResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayResource"
          },
          "x-cadl-name": "GatewayResource[]",
          "description": "The GatewayResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation<GatewayResource>"
        }
      },
      "description": "The response of a GatewayResource list operation.",
      "required": [
        "value"
      ]
    },
    "GatewayResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/GatewayResourceUpdateProperties"
        }
      },
      "description": "The type used for update operations of the GatewayResource."
    },
    "GatewayResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string",
          "description": "The resource id of the application linked to Gateway resource."
        },
        "internal": {
          "type": "boolean",
          "description": "Sets Gateway to not be exposed externally (no public IP address associated). Defaults to false (exposed to internet).",
          "default": false
        },
        "hostname": {
          "$ref": "#/definitions/GatewayPropertiesHostname",
          "description": "Declare hostname information for the Gateway. Leaving the hostname empty auto-assigns one: mygateway.myapp.PUBLICHOSTNAMEORIP.nip.io."
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayRoute"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "GatewayRoute[]",
          "description": "Routes attached to this Gateway"
        },
        "status": {
          "$ref": "#/definitions/ResourceStatus",
          "description": "Status of a resource."
        }
      },
      "description": "The updatable properties of the GatewayResource."
    },
    "GatewayRoute": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to match the incoming request path on. Ex - /myservice."
        },
        "destination": {
          "type": "string",
          "description": "The HttpRoute to route to. Ex - myserviceroute.id."
        },
        "replacePrefix": {
          "type": "string",
          "description": "Optionally update the prefix when sending the request to the service. Ex - replacePrefix: '/' and path: '/myservice' will transform '/myservice/myroute' to '/myroute'"
        }
      },
      "description": "Route attached to Gateway",
      "required": [
        "path",
        "destination",
        "replacePrefix"
      ]
    },
    "OutputResource": {
      "type": "object",
      "properties": {},
      "description": "Properties of an output resource."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceStatus": {
      "type": "object",
      "properties": {
        "outputResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputResource"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "OutputResource[]",
          "description": "Properties of an output resource"
        }
      },
      "description": "Status of a resource.",
      "required": [
        "outputResources"
      ]
    }
  },
  "parameters": {
    "GatewayResource.gatewayName": {
      "name": "gatewayName",
      "in": "path",
      "required": true,
      "description": "Gateway name",
      "pattern": "^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$",
      "maxLength": 63,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RootScopeParam": {
      "name": "rootScope",
      "in": "path",
      "required": true,
      "description": "root scope path",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
