/*
Copyright 2023 The Radius Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";

// These files allow the use of {rootScope} in the generated paths with a custom resourceOperations object
import "../customRootScope.cadl";
import "../aksrootscope.cadl";

import "./global.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.ResourceManager.Radius;

@armNamespace
@serviceTitle("Applications.Core Management APIs")
@doc("REST API for Applications.Core Environment Resource")
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Applications.Core;

@discriminator("kind")
@doc("Compute resource used by application environment resource.")
model EnvironmentCompute {
  @doc("The resource id of the compute resource for application environment.")
  resourceId: string;
}

@doc("Specifies the properties for Kubernetes compute environment")
model KubernetesCompute extends EnvironmentCompute {
  @doc("resource compute kind")
  kind: "kubernetes";

  @doc("The namespace to use for the environment")
  nameSpace: string;
}

@doc("Environment properties")
model EnvironmentProperties {
  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;

  @doc("The compute resource used by application environment.")
  compute: EnvironmentCompute;
}

model EnvironmentResource is TrackedResource<EnvironmentProperties> {
  @doc("environment name")
  @maxLength(63)
  @pattern("^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$")
  @key("environmentName")
  @path
  @segment("environments")
  name: string;
}

@armResourceOperations
interface Environment
  extends Radius.RootScopeResourceOperations<
      EnvironmentResource,
      EnvironmentProperties,
      RootScopeParam
    > {}

@knownValues(ProvisioningStateKV)
model ProvisioningState is string;
enum ProvisioningStateKV {
  Succeeded,
  Failed,
  Canceled,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}
