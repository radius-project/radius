# Reference: https://github.com/home-assistant/android/blob/master/.github/actions/create-release-notes/action.yml

name: Generate release notes
description: Generates the release notes for a new release.
inputs:
  tag_name:
    description: The tag for the current release. If it is empty, the main branch will be used.
    required: true
  github-token:
    description: The GitHub token used to generate the release notes
    required: true
  relnote_root:
    description: The root directory of the release notes
    required: true
  version:
    description: The version of the release
    required: true
runs:
  using: 'composite'
  steps:
    - name: Find the previous tag
      uses: actions/github-script@v6
      id: latest-release-tag
      with:
        github-token: ${{ inputs.github-token }}
        result-encoding: string
        script: |
          const { data } = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
          return data.tag_name
    - name: Generate the release notes
      uses: actions/github-script@v6
      id: generate-notes
      with:
        github-token: ${{ inputs.github-token }}
        result-encoding: string
        script: |
          const { data } = await github.rest.repos.generateReleaseNotes({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: '${{ inputs.tag_name }}',
            target_commitish: 'main',
            previous_tag_name: '${{ steps.latest-release-tag.outputs.result }}',
          })
          return data.body
    - name: Generate release note file from template
      id: version-generator
      shell: bash
      run: |
        echo "Previous Release Tag:"
        echo "${{ steps.latest-release-tag.outputs.result }}"
        
        echo "Full Changelog:"
        CHANGELOG="${{ steps.generate-notes.outputs.result }}"
        echo "$CHANGELOG"

        RELNOTE_FILE=${{ inputs.relnote_root }}/v${{ inputs.version }}.md
        cp ${{ inputs.relnote_root }}/template.md $RELNOTE_FILE

        sed -i "s/X.Y.Z/${{ inputs.version }}/gi" $RELNOTE_FILE

        echo "$CHANGELOG" >> $RELNOTE_FILE

        cat $RELNOTE_FILE
