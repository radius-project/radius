# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: assets

on:
  push:
    branches:
      - main
    tags:
      - v*
jobs:
  publish:
    name: Assets
    runs-on: [self-hosted, 1ES.Pool=1ES-Radius ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Parse release version and set enviroment variables
        run: python ./.github/scripts/get_release_version.py
      # The install scripts are not versioned. They go to tools/rad/install.{sh,ps1}
      - name: Upload install.sh
        uses: bacongobbler/azure-blob-storage-upload@v3.0.0
        with:
          source_dir: 'deploy'
          container_name: 'tools'
          connection_string: ${{ secrets.ASSETS_STORAGE_CONNECTION_STRING }}
          sync: 'true'
          extra_args: '--destination-path rad --pattern install.sh --overwrite true'
      - name: Upload install.ps1
        uses: bacongobbler/azure-blob-storage-upload@v3.0.0
        with:
          source_dir: 'deploy'
          container_name: 'tools'
          connection_string: ${{ secrets.ASSETS_STORAGE_CONNECTION_STRING }}
          sync: 'true'
          extra_args: '--destination-path rad --pattern install.ps1 --overwrite true'
      
      # Logic: If this is a real release (tagged, non-rc) then compare to our existing full
      # release and see if it's newer. This prevents a patch release of an older vintage from overwriting
      # a newer release
      - name: Download version marker file
        run: |
          curl https://get.radapp.dev/version/stable.txt -o current-stable.txt
        if: ${{ success() && env.UPDATE_RELEASE == 'true' }}
      - name: Get version
        id: setcurrentversion
        if: ${{ success() && env.UPDATE_RELEASE == 'true' }}
        run: echo "version=$(cat current-stable.txt)" >> $GITHUB_OUTPUT
      - name: Compare versions
        uses: madhead/semver-utils@latest
        if: ${{ success() && env.UPDATE_RELEASE == 'true' }}
        id: compare
        with:
          version: ${{ env.REL_CHANNEL }}.0
          compare-to: ${{ steps.setcurrentversion.outputs.version }}.0
      - name: Print info (for sanity)
        if: ${{ success() && env.UPDATE_RELEASE == 'true' }}
        run: |
          echo "current stable channel: ${{ steps.setcurrentversion.outputs.version }}"
          echo "this build channel: ${{ env.REL_CHANNEL }}"
          echo "comparison: ${{ steps.compare.outputs.comparison-result }}"
      - name: Write stable.txt
        if: ${{ success() && steps.compare.outputs.comparison-result == '>' }}
        run: |
          echo $REL_CHANNEL > stable.txt
      - name: 'Update latest version marker'
        uses: bacongobbler/azure-blob-storage-upload@v3.0.0
        if: ${{ success() && steps.compare.outputs.comparison-result == '>' }}
        with:
          container_name: 'version'
          connection_string: ${{ secrets.ASSETS_STORAGE_CONNECTION_STRING }}
          sync: true
          source_dir: .
          extra_args: '--pattern stable.txt --overwrite true' 
