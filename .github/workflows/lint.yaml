# ------------------------------------------------------------
# Copyright 2023 The Radius Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------

name: Check code is up-to-date

on:
  pull_request:
    branches:
      - main
      - release/*

concurrency:
  # Cancel the previously triggered build for only PR build.
  group: lint-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  linter_check:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      GOVER: '1.21.7'
      GOPROXY: https://proxy.golang.org
      HELM_CHARTS_DIR: deploy/Chart
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up Go ${{ env.GOVER }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOVER }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install TypeSpec compiler
        run: |
          pushd typespec
          npm ci
          popd
      - name: Install autorest
        run: npm install -g autorest@3.6.1
      - name: Install oav
        run: npm install -g oav@3.2.0
      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.5.0
      - name: Install controller-gen
        run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.9.1
      - name: Install helm
        uses: Azure/setup-helm@v3
        with:
          version: 'v3.11.1'
      - name: Run Helm linter
        run: |
          helm lint ${{ env.HELM_CHARTS_DIR }}
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: 'latest'
          args: --timeout=10m
      - name: Run make generate
        run: make generate
      - name: Check if generated code is up to date
        continue-on-error: true
        id: gitdiff
        run: |
          git diff --exit-code
      - name: Check failures
        if: steps.gitdiff.outcome != 'success'
        run: |
          echo "Generated code is not up to date, run 'make generate' to update generated code."
          exit 1
