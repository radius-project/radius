# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: nightly-tests

on:
  push:
    branches:
      - main
      - release-*
      - any
    tags:
      - v*
  pull_request:
    branches:
      - main
      - release-*
  # schedule:
  #   - cron: '0 */2 * * *'
  # repository_dispatch:
  #   types: [nightly-tests]
jobs:
  build:
    name: Build ${{ matrix.target_os }}_${{ matrix.target_arch }} binaries
    runs-on: ${{ matrix.os }}
    env:
      GOVER: '^1.15.0'
      GOLANGCILINT_VER: 1.26.0
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      GOPROXY: https://proxy.golang.org
      ARCHIVE_OUTDIR: dist/archives
      RADIUS_PATH: $GITHUB_WORKSPACE/dist/${{ matrix.target_os }}_${{ matrix.target_arch }}/release
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      RADIUS_TEST_SUBSCRIPTION_ID: "66d1209e-1382-45d3-99bb-650e6bf63fc0"
      RADIUS_TEST_DEFAULT_LOCATION: "westus2"
      RADIUS_TEST_BASE_GROUP_NAME: "rad-it"
    strategy:
      matrix:
        os: [ubuntu-latest]
        target_arch: [arm, amd64]
        include:
          - os: ubuntu-latest
            target_os: linux
          - os: windows-latest
            target_os: windows
          - os: macOS-latest
            target_os: darwin
        exclude:
          - os: windows-latest
            target_arch: arm
          - os: macOS-latest
            target_arch: arm
    steps:
      - name: Set up Go ${{ env.GOVER }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVER }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Make
        run: make
      - name: Run linter
        if: matrix.target_arch != 'arm' && matrix.target_os == 'linux'
        uses: golangci/golangci-lint-action@v2.4.0
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.37
      - name: Parse release version and set REL_VERSION
        run: python ./.github/scripts/get_release_version.py
      - name: Run make nightly-tests
        if: matrix.target_arch != 'arm'
        run: |
          echo "radius path: ${{ env.RADIUS_PATH }}"
          echo "tenant id: ${{ env.AZURE_TENANT_ID }}"
          echo "sub id: ${{ env.RADIUS_TEST_SUBSCRIPTION_ID }}"
          export PATH=$PATH:${{ env.RADIUS_PATH }}
          export AZURE_TENANT_ID=${{ env.AZURE_TENANT_ID }}
          export AZURE_CLIENT_ID=${{ env.AZURE_CLIENT_ID }}
          export AZURE_CLIENT_SECRET=${{ env.AZURE_CLIENT_SECRET }}
          export RADIUS_TEST_SUBSCRIPTION_ID=${{ env.RADIUS_TEST_SUBSCRIPTION_ID }}
          export RADIUS_TEST_DEFAULT_LOCATION=${{ env.RADIUS_TEST_DEFAULT_LOCATION }}
          export RADIUS_TEST_BASE_GROUP_NAME=${{ env.RADIUS_TEST_BASE_GROUP_NAME }}
          make nightly-tests