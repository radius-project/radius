name: radius-bot

on:
  issue_comment: 
    types: 
    - created

jobs:
  radiusbot:
    name: bot-processor
    runs-on: ubuntu-latest
    steps:
    - name: Analyze context
      uses: actions/github-script@v4
      id: analyze
      with:
        script: |
          const owners = [
            "vinayada1",
            "rynowak",
            "kachawla"
          ];

          console.log("Analyzing comment with: " + JSON.stringify(context));
          if (owners.indexOf(context.actor) < 0) {
            console.log(`User ${context.actor} is not trusted`);
            return { };
          }

          const regex = /^\/([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)$/;
          const matches = context.payload.comment.body.match(regex)
          let command = null;
          if (matches.length > 0) {
            command = matches[1]
          }

          const result = {
            isPullRequest: !!context.payload.issue.pull_request,
            command: command,
          }
          console.log("Analysis done: " + JSON.stringify(result));
          return result
    - name: Analyze context
      uses: actions/github-script@v4
      id: analyze
      if: success() && steps.analyze.outputs.result.command == 'create-environment' && steps.analyze.outputs.result.isPullRequest == true
      with:
        github-token: ${{secrets.RADIUS_BOT_TOKEN}}
        script: |
          const pull = await github.pulls.get({
            owner: context.issue.owner,
            repo: context.issue.repo,
            pull_number: context.issue.number
          });

          const payload = {
            ref: pull.data.head.sha,
          };
      
          // Fire repository_dispatch event to trigger e2e test
          await github.repos.createDispatchEvent({
            owner: context.issue.owner,
            repo: context.issue.repo,
            event_type: "create-environment",
            client_payload: payload,
          });
                  
          console.log(`Triggering environment creation for ${JSON.stringify(payload)}`);

    - name: Analyze context
      uses: actions/github-script@v4
      id: analyze
      if: success() && steps.analyze.outputs.result.command == 'run-e2e-tests' && steps.analyze.outputs.result.isPullRequest == true
      with:
        github-token: ${{secrets.RADIUS_BOT_TOKEN}}
        script: |
          const pull = await github.pulls.get({
            owner: context.issue.owner,
            repo: context.issue.repo,
            pull_number: context.issue.number
          });

          // Get commit id and repo from pull head
          const e2eTestsPayload = {
            pull_head_ref: pull.data.head.sha,
            pull_head_repo: pull.data.head.repo.full_name,
            command: "run-e2e-tests",
            issue: context.issue,
          };

          // Fire repository_dispatch event to trigger e2e test
          await github.repos.createDispatchEvent({
            owner: issue.owner,
            repo: issue.repo,
            event_type: "e2e-tests",
            client_payload: e2eTestsPayload,
          });

          console.log(`Triggering end to end tests for ${JSON.stringify(e2eTestsPayload)}`);