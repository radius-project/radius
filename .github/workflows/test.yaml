name: Nightly rad CLI tests

on:
  schedule:
    # Run every day at 11:47 PM UTC
    - cron: '47 23 * * *'
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/test.yaml

jobs:
  download:
    runs-on: ubuntu-latest
    if: github.repository == 'radius-project/radius'
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            file: rad
          - os: linux
            arch: arm64
            file: rad
          - os: linux
            arch: arm
            file: rad
          - os: darwin
            arch: amd64
            file: rad
          - os: darwin
            arch: arm64
            file: rad
          - os: windows
            arch: amd64
            file: rad
            ext: .exe
    steps:
      - name: Get latest version
        run: |
          radReleaseUrl="https://api.github.com/repos/radius-project/radius/releases"
          echo "Fetching releases from: ${radReleaseUrl}"

          # Make API call and capture HTTP status
          response=$(curl -s -w "%{http_code}" "${radReleaseUrl}")
          http_code="${response: -3}"
          api_response="${response%???}"

          echo "GitHub API HTTP status code: ${http_code}"

          # Check if API call was successful
          if [ "${http_code}" != "200" ]; then
            echo "ERROR: GitHub API call failed with status ${http_code}"
            echo "API Response: ${api_response}"
            exit 1
          fi

          # Extract version from response
          rad_version=$(echo "${api_response}" | grep "tag_name" | grep -v rc | awk 'NR==1{print $2}' | sed -n 's/"\(.*\)",/\1/p')

          # Validate that we got a version
          if [ -z "${rad_version}" ]; then
            echo "ERROR: Failed to extract RAD_VERSION from API response"
            echo "API Response preview: $(echo "${api_response}" | head -c 500)"
            exit 1
          fi

          echo "Successfully extracted RAD_VERSION: ${rad_version}"
          echo "RAD_VERSION=${rad_version}" >> $GITHUB_ENV
      - name: Download file
        run: curl -sSLI -w "%{http_code}" "https://github.com/radius-project/radius/releases/download/${{ env.RAD_VERSION }}/${{ matrix.file }}_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.ext }}" --fail-with-body -o "${{ matrix.file }}_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.ext }}"
      - name: Test Linux x64
        if: ${{ matrix.os == 'linux' && matrix.arch == 'x64' }}
        run: |
          chmod +x ./${{ matrix.file }}_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.ext }}
          ./${{ matrix.file }}_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.ext }} version
      - name: Create GitHub issue on failure
        if: ${{ failure() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue create --title "CLI nightly test failed - ${{ matrix.os }}-${{ matrix.arch }}" --body "Test failed on ${{ github.repository }} for ${{ matrix.os }}-${{ matrix.arch }}. See [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details." --label "test-failure" --repo ${{ github.repository }}
