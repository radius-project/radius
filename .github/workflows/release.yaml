# ------------------------------------------------------------
# Copyright 2023 The Radius Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------

name: Release Radius

on:
  push:
    branches:
      - main
    paths:
      - 'versions.json'
  pull_request:
    branches:
      - main
    paths:
      - 'versions.json'

env:
  RELEASE_VERSION: ''
  FINAL_RELEASE: 'false'
  GITHUB_TOKEN: ${{ secrets.GH_RAD_CI_BOT_PAT }}

jobs:
  generate_release_note:
    name: Generate release note from template
    runs-on: [ self-hosted, 1ES.Pool=1ES-Radius ]
    steps:
      - name: Checkout project-radius/radius
        uses: actions/checkout@v3
      - name: Determine release version from versions.json
        run: |
          ./.github/scripts/release-get-version.sh "."
      - name: Find the previous tag
        uses: actions/github-script@v6
        id: latest-release-tag
        with:
          github-token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          result-encoding: string
          script: |
            const { data } = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            return data.tag_name
      - name: Generate the release notes
        uses: actions/github-script@v6
        id: generate-notes
        with:
          github-token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          result-encoding: string
          script: |
            const { data } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ env.RELEASE_VERSION }}',
              target_commitish: 'main',
              previous_tag_name: '${{ steps.latest-release-tag.outputs.result }}',
            })
            return data.body
      - uses: marocchino/sticky-pull-request-comment@v2
        continue-on-error: true
        with:
          header: relnote-${{ github.run_id }}
          number: ${{ github.event.pull_request.number }}
          hide: true
          hide_classify: 'OUTDATED'
          message: |
            ## Release Information
            * Previous version: ${{ steps.latest-release-tag.outputs.result }}
            * New version: ${{ env.RELEASE_VERSION }}

            ## Change logs
            ```
            ${{ steps.generate-notes.outputs.result }}
            ```
  release:
    name: Create a new Radius release
    if: ${{ false }}
    runs-on: [ self-hosted, 1ES.Pool=1ES-Radius ]
    steps:
      - name: Checkout project-radius/radius@${{ github.event.pull_request.head.sha }}
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          path: radius-pr
      - name: Checkout project-radius/radius@main
        uses: actions/checkout@v3
        with:
          repository: project-radius/radius
          ref: main
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          path: radius
      - name: Checkout project-radius/bicep@bicep-extensibility
        uses: actions/checkout@v3
        with:
          repository: project-radius/bicep
          ref: bicep-extensibility
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          path: bicep
      - name: Checkout project-radius/deployment-engine@main
        uses: actions/checkout@v3
        with:
          repository: project-radius/deployment-engine
          ref: main
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          path: deployment-engine
      - name: Checkout project-radius/recipes@main
        uses: actions/checkout@v3
        with:
          repository: project-radius/recipes
          ref: main
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
          path: recipes
      - name: Set up GitHub credentials
        run: |
          git config --global user.name "Radius CI Bot"
          git config --global user.email "radiuscoreteam@service.microsoft.com"
      - name: Determine release version from versions.json
        run: |
          ./radius-pr/.github/scripts/release-get-version.sh "radius-pr"
      - name: Generate release summary
        run: |
          echo "## Release" >> $GITHUB_STEP_SUMMARY
          echo "* Release driver: $GITHUB_ACTOR "> $GITHUB_STEP_SUMMARY
          echo "* Release version: $RELEASE_VERSION" >> $GITHUB_STEP_SUMMARY
          echo "* Final release: $FINAL_RELEASE" >> $GITHUB_STEP_SUMMARY
          echo "* Release date: $(date)" >> $GITHUB_STEP_SUMMARY
      - name: Release project-radius/radius version ${{ env.RELEASE_VERSION }}
        run: |
          ./radius-pr/.github/scripts/release-create-repo-tag.sh radius ${{ env.RELEASE_VERSION }} ${{ env.FINAL_RELEASE }}
        if: success()
      - name: Release project-radius/bicep version ${{ env.RELEASE_VERSION }}
        run: |
          ./radius-pr/.github/scripts/release-create-repo-tag.sh bicep ${{ env.RELEASE_VERSION }} ${{ env.FINAL_RELEASE }}
        if: success()
      - name: Release project-radius/deployment-engine version ${{ env.RELEASE_VERSION }}
        run: |
          ./radius-pr/.github/scripts/release-create-repo-tag.sh deployment-engine ${{ env.RELEASE_VERSION }} ${{ env.FINAL_RELEASE }}
        if: success()
      - name: Release project-radius/recipes version ${{ env.RELEASE_VERSION }}
        run: |
          ./radius-pr/.github/scripts/release-create-repo-tag.sh recipes ${{ env.RELEASE_VERSION }} ${{ env.FINAL_RELEASE }}
        if: success()
