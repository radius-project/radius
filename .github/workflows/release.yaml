# ------------------------------------------------------------
# Copyright 2023 The Radius Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------

name: Create a new Project Radius release

on:
  workflow_dispatch:
    inputs:
      channel:
        description: "The release channel (e.g. 0.21)."
        required: true
      version:
        description: "The release version (e.g. v0.21.0 or v0.21.0-rc1)."
        required: true

env:
  RELEASE_BRANCH_NAME: 'release/${{ github.event.inputs.channel }}'
  TAG_NAME: 'v${{ github.event.inputs.version }}'
  FINAL_RELEASE: ${{ !contains(github.event.inputs.version, 'rc') }}

jobs:
  release:
    name: Release
    runs-on: [ self-hosted, 1ES.Pool=1ES-Radius ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - repo: radius
            branch: main
          - repo: deployment-engine
            branch: main
          - repo: bicep
            branch: bicep-extensibility
    steps:
      - name: Checkout {{ matrix.branch }} from project-radius/${{ matrix.repo }} 
        uses: actions/checkout@v2
        with:
          repository: project-radius/${{ matrix.repo }}
          ref: ${{ matrix.branch }}
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
      - name: Create and push tag ${{ env.TAG_NAME }} to ${{ matrix.repo }}
        run: |
          git config --global user.name "Radius CI Bot"
          git config --global user.email "radiuscoreteam@service.microsoft.com"
          git checkout -B ${{ env.RELEASE_BRANCH_NAME }}
          git pull origin ${{ env.RELEASE_BRANCH_NAME }}
          git tag ${{ env.TAG_NAME }}
          git push origin --tags
          git push origin ${{ env.RELEASE_BRANCH_NAME }}
          if [[ matrix.repo == "bicep" ]]; then
            git tag delete ${{ env.TAG_NAME }}
            git push origin --tags
            git tag ${{ env.TAG_NAME }}
            git push origin --tags
          fi
      - name: Checkout edge from project-radius/docs
        uses: actions/checkout@v2
        with:
          repository: project-radius/docs
          ref: edge
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
        if: env.FINAL_RELEASE == 'true'
      - name: Update docs
        run: |
          git config --global user.name "Radius CI Bot"
          git config --global user.email "radiuscoreteam@service.microsoft.com"
          git checkout -B v${{ github.event.inputs.channel }}
          sed -i 's/baseURL = "https:\/\/edge.radapp.dev\/"/baseURL = "https:\/\/radapp.dev\/"/g' docs/config.toml
          sed -i "s/version = \"edge\"/version = \"v${VERSION}\"/g" docs/config.toml
          sed -i "s/chart_version = \"edge\"/chart_version = \"${VERSION}.0\"/g" docs/config.toml
          sed -i 's/indexName: "radapp-dev-edge"/indexName: "radapp-dev"/g' docs/layouts/partials/hooks/body-end.html
          sed -i "s/downloads\/edge/downloads\/v${VERSION}/g" docs/content/getting-started/install/_index.md
          git add .
          git commit -m "Update to v${VERSION}"
          git push origin v${VERSION}
        if: env.FINAL_RELEASE == 'true'
      - name: Checkout edge from project-radius/samples
        uses: actions/checkout@v2
        with:
          repository: project-radius/docs
          ref: edge
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
        if: env.FINAL_RELEASE == 'true'
      - name: Update samples
        run: |
          git config --global user.name "Radius CI Bot"
          git config --global user.email "radiuscoreteam@service.microsoft.com"
          git pull origin edge
          git checkout -b v0.21
          git pull origin v0.21
          git push origin v0.21
        if: env.FINAL_RELEASE == 'true'
