{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Core Management APIs",
    "description": "REST API for Applications.Core Persistent SecretStore Resource",
    "version": "2022-03-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{rootScope}/providers/Applications.Core/secretStores": {
      "get": {
        "description": "List all secret stores in the given scope.",
        "operationId": "SecretStores_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresList": {
            "$ref": "./examples/SecretStoresList.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SecretStores list.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/secretStores/{secretStoreName}": {
      "get": {
        "description": "Gets the properties of a secret store.",
        "operationId": "SecretStores_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresGet": {
            "$ref": "./examples/SecretStoresGet.json"
          },
          "RadiusSecretStoresAzureKeyVaultGet": {
            "$ref": "./examples/SecretStoresGet_AzureKeyVault.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretStoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "SecretStore details.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a secret store.",
        "operationId": "SecretStores_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresPutValueFrom": {
            "$ref": "./examples/SecretStoresPutValueFrom.json"
          },
          "RadiusSecretStoresPutValue": {
            "$ref": "./examples/SecretStoresPutValue.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretStoreNameParameter"
          },
          {
            "name": "SecretStoreResource",
            "description": "SecretStore details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update the properties of an existing secret store.",
        "operationId": "SecretStores_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresPatch": {
            "$ref": "./examples/SecretStoresPatch.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretStoreNameParameter"
          },
          {
            "name": "SecretStoreResource",
            "description": "SecretStore details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/SecretStoreResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a secret store.",
        "operationId": "SecretStores_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresDelete": {
            "$ref": "./examples/SecretStoresDelete.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretStoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The SecretStore was successfully deleted."
          },
          "202": {
            "description": "The SecretStore will be deleted asynchronously."
          },
          "204": {
            "description": "The SecretStore does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/secretStores/{secretStoreName}/listSecrets": {
      "post": {
        "description": "List the secrets of a secret stores.",
        "operationId": "SecretStores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusSecretStoresPostListSecret": {
            "$ref": "./examples/SecretStoresListSecrets.json"
          }
        },
        "tags": [
          "SecretStores"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretStoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of secret values in this secret store",
            "schema": {
              "$ref": "#/definitions/SecretListProperties"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SecretStoreResourceList": {
      "description": "The list of SecretStores.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of SecretStore.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretStoreResource"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of SecretStores list.",
          "type": "string"
        }
      }
    },
    "SecretStoreResource": {
      "description": "Radius SecretStore Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecretStoreProperties"
        }
      }
    },
    "SecretStoreProperties": {
      "allOf": [
        {
          "$ref": "global.json#/definitions/BasicResourceProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "global.json#/definitions/ProvisioningState",
          "description": "Provisioning state of the SecretStore at the time the operation was called."
        },
        "type": {
          "description": "The type of secret store data",
          "type": "string",
          "enum": [
            "generic",
            "certificate"
          ],
          "default": "generic",
          "x-ms-enum": {
            "name": "SecretStoreDataType",
            "modelAsString": false
          }
        },
        "data": {
          "description": "An object to represent key-value type secrets",
          "additionalProperties": {
            "$ref": "#/definitions/SecretValueProperties"
          },
          "type": "object"
        },
        "resource": {
          "description": "The resource id of external secret store.",
          "type": "string"
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "SecretListProperties": {
      "description": "The list of secrets",
      "properties": {
        "type": {
          "description": "The type of secret store data",
          "type": "string",
          "readOnly": true
        },
        "data": {
          "description": "An object to represent key-value type secrets",
          "additionalProperties": {
            "$ref": "#/definitions/SecretValueProperties"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SecretValueProperties": {
      "properties": {
        "encoding": {
          "description": "The encoding of value",
          "type": "string",
          "enum": [
            "raw",
            "base64"
          ],
          "default": "raw",
          "x-ms-enum": {
            "name": "SecretValueEncoding",
            "modelAsString": false
          }
        },
        "value": {
          "description": "The value of secret.",
          "type": "string",
          "x-ms-secret": true
        },
        "valueFrom": {
          "description": "The referenced secret in properties.resource",
          "$ref": "#/definitions/ValueFromProperties"
        }
      },
      "type": "object"
    },
    "ValueFromProperties": {
      "properties": {
        "name": {
          "description": "The name of the referenced secret.",
          "type": "string"
        },
        "version": {
          "description": "The version of the referenced secret.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    }
  },
  "parameters": {
    "SecretStoreNameParameter": {
      "name": "secretStoreName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the secret store.",
      "pattern": "^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}
