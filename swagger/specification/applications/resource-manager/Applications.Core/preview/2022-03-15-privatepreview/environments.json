{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Core Management APIs",
    "description": "REST API for Applications.Core Environment Resource",
    "version": "2022-03-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{rootScope}/providers/Applications.Core/environments": {
      "get": {
        "description": "List all environments in a scope.",
        "operationId": "Environments_ListByScope",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsListByScope": {
            "$ref": "./examples/EnvironmentsListByScope.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Environment details.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/environments/{environmentName}": {
      "get": {
        "description": "Gets the properties of an Environment.",
        "operationId": "Environments_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsGet": {
            "$ref": "./examples/EnvironmentsGetEnv0.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Environment details.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update an Environment.",
        "operationId": "Environments_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsPut": {
            "$ref": "./examples/EnvironmentsPutEnv0.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "EnvironmentResource",
            "description": "environment details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update the properties of an existing Environment.",
        "operationId": "Environments_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsPatch": {
            "$ref": "./examples/EnvironmentsPatchEnv0.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "EnvironmentResource",
            "description": "environment details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete an Environment.",
        "operationId": "Environments_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsDelete": {
            "$ref": "./examples/EnvironmentsDeleteEnv0.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The environment was successfully deleted."
          },
          "202": {
            "description": "The environment will be deleted asynchronously."
          },
          "204": {
            "description": "The environment does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/environments/{environmentName}/getmetadata": {
      "post": {
        "description": "Gets recipe metadata including parameters and any constraints on the parameters.",
        "operationId": "Environments_GetRecipeMetadata",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusEnvironmentsGetRecipeMetadata": {
            "$ref": "./examples/EnvironmentsGetRecipeMetadata.json"
          }
        },
        "tags": [
          "Environments"
        ],
        "parameters": [
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/EnvironmentNameParameter"
          },
          {
            "name": "RecipeParameter",
            "in": "body",
            "required": true,
            "description": "Recipe parameters.",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe metadata including parameters and any constraints on the parameters.",
            "schema": {
              "$ref": "#/definitions/EnvironmentRecipeProperties"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EnvironmentResourceList": {
      "description": "The list of environments.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of environments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentResource"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of environments list.",
          "type": "string"
        }
      }
    },
    
    "EnvironmentResource": {
      "description": "Application environment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EnvironmentProperties"
        }
      }
    },
    "EnvironmentExtension": {
      "allOf": [
        {
          "$ref": "global.json#/definitions/Extension"
        }
      ]
    },
    "EnvironmentKubernetesMetadataExtension": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentExtension"
        }
      ],
      "description": "Specifies the metadata that should be applied to Kubernetes resources created by all Containers in this Environment.",
      "properties": {
        "annotations": {
          "description": "Annotations to be applied to the Kubernetes resources output by the resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels to be applied to the Kubernetes resources output by the resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "kubernetesMetadata"
    },
    "EnvironmentProperties": {
      "description": "Application environment properties",
      "type": "object",
      "required": [
        "compute"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "global.json#/definitions/ProvisioningState",
          "description": "Provisioning state of the environment at the time the operation was called."
        },
        "compute": {
          "$ref": "global.json#/definitions/EnvironmentCompute"
        },
        "providers": {
          "$ref": "#/definitions/Providers",
          "description": "Cloud providers configuration for the environment."
        },
        "useDevRecipes": {
          "type": "boolean",
          "description": "Flag to use radius owned recipes."
        },
        "recipes": {
          "description": "Specifies Recipes linked to the Environment.",
          "additionalProperties": {
            "additionalProperties": {
              "$ref": "#/definitions/EnvironmentRecipeProperties"
            }
          },
          "type": "object",
          "example": [
            {
              "Applications.Link/mongoDatabases": {
                "default":{
                  "templatePath":"br:sampleregistry.azureacr.io/radius/recipes/mongodb",
                  "parameters":{
                    "port":6060
                  }
                }
              }
            }
          ]
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentExtension"
          },
          "description": "Extensions spec of the resource"
        }
      }
    },
    "Providers": {
      "description": "Cloud providers configuration",
      "properties": {
        "azure": {
          "type": "object",
          "description": "Azure cloud provider configuration",
          "properties": {
            "scope": {
              "type": "string",
              "description": "Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'"
            }
          }
        },
        "aws": {
          "type": "object",
          "description": "AWS cloud provider configuration",
          "properties": {
            "scope": {
              "type": "string",
              "description": "Target scope for AWS resources to be deployed into.  For example: '/planes/aws/aws/accounts/000000000000/regions/us-west-2'"
            }
          }
        }
      }
    },
    "EnvironmentRecipeProperties": {
      "description": "Properties of a Recipe linked to an Environment.",
      "properties": {
        "templatePath": {
          "description": "Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported.",
          "type": "string"
        },
        "parameters": {
          "description": "Key/value parameters to pass to the recipe template at deployment",
          "type": "object",
          "example": [
            {
              "port": 6060
            }
          ]
        }
      },
      "required": [
        "templatePath"
      ]
    },
    "Recipe":{
      "description": "Recipe properties.",
      "properties": {
        "linkType": {
          "description": "Type of the link this recipe can be consumed by. For example: 'Applications.Link/mongoDatabases'",
          "type": "string"
        },
        "name":{
          "description": "Name of the recipe registered to the environment.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "EnvironmentNameParameter": {
      "name": "environmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the environment",
      "pattern": "^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "RecipeNameParameter": {
      "name": "recipeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the recipe",
      "pattern": "^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])?$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}