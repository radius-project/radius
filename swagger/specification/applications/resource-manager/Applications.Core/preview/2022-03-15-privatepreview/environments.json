{
    "swagger": "2.0",
    "info": {
      "title": "Applications.Core Management APIs",
      "description": "REST API for Applications.Core Environment Resource",
      "version": "2022-03-15-privatepreview"
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "flow": "implicit",
        "description": "Azure Active Directory OAuth2 Flow.",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    },
    "paths": {
      "/{rootScope}/providers/Applications.Core/environments": {
        "get": {
          "description": "List all environments in a scope.",
          "operationId": "Environments_ListByScope",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "RadiusEnvironmentsListByScope": {
              "$ref": "./examples/EnvironmentsListByScope.json"
            }
          },
          "tags": [
            "Environments"
          ],
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "global.json#/parameters/RootScopeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Environment details.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResourceList"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "deprecated": false,
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/{rootScope}/providers/Applications.Core/environments/{environmentName}": {
        "get": {
          "description": "Gets the properties of an Environment.",
          "operationId": "Environments_Get",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "RadiusEnvironmentsGet": {
              "$ref": "./examples/EnvironmentsGetEnv0.json"
            }
          },
          "tags": [
            "Environments"
          ],
          "parameters": [
            {
              "$ref": "global.json#/parameters/RootScopeParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/EnvironmentNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Environment details.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "description": "Create or update an Environment.",
          "operationId": "Environments_CreateOrUpdate",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "RadiusEnvironmentsPut": {
              "$ref": "./examples/EnvironmentsPutEnv0.json"
            }
          },
          "tags": [
            "Environments"
          ],
          "parameters": [
            {
              "$ref": "global.json#/parameters/RootScopeParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/EnvironmentNameParameter"
            },
            {
              "name": "EnvironmentResource",
              "description": "environment details",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The resource was updated successfully.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            },
            "201": {
              "description": "The resource will be updated asynchronously.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
            }
          }
        },
        "patch": {
          "description": "Update the properties of an existing Environment.",
          "operationId": "Environments_Update",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "RadiusEnvironmentsPatch": {
              "$ref": "./examples/EnvironmentsPatchEnv0.json"
            }
          },
          "tags": [
            "Environments"
          ],
          "parameters": [
            {
              "$ref": "global.json#/parameters/RootScopeParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/EnvironmentNameParameter"
            },
            {
              "name": "EnvironmentResource",
              "description": "environment details",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The resource was updated successfully.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            },
            "201": {
              "description": "The resource will be updated asynchronously.",
              "schema": {
                "$ref": "#/definitions/EnvironmentResource"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "description": "Delete an Environment.",
          "operationId": "Environments_Delete",
          "produces": [
            "application/json"
          ],
          "x-ms-examples": {
            "RadiusEnvironmentsDelete": {
              "$ref": "./examples/EnvironmentsDeleteEnv0.json"
            }
          },
          "tags": [
            "Environments"
          ],
          "parameters": [
            {
              "$ref": "global.json#/parameters/RootScopeParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/EnvironmentNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The environment was successfully deleted."
            },
            "202": {
              "description": "The environment will be deleted asynchronously."
            },
            "204": {
              "description": "The environment does not exist."
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "EnvironmentResourceList": {
        "description": "The list of environments.",
        "type": "object",
        "properties": {
          "value": {
            "description": "The list of environments.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/EnvironmentResource"
            }
          },
          "nextLink": {
            "description": "The link used to get the next page of environments list.",
            "type": "string"
          }
        }
      },
      "EnvironmentCompute": {
        "description": "Compute resource used by application environment resource.",
        "type": "object",
        "discriminator": "kind",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Type of compute resource."
          },
          "resourceId": {
            "type": "string",
            "description": "The resource id of the compute resource for application environment."
          }
        },
        "required": [
          "kind"
        ]
      },
      "KubernetesCompute": {
        "description": "Specifies the properties for Kubernetes compute environment",
        "allOf": [
          {
            "$ref": "#/definitions/EnvironmentCompute"
          }
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "The namespace to use for the environment."
          }
        },
        "required": [
          "namespace"
        ],
        "x-ms-discriminator-value":"kubernetes"
      },
      "EnvironmentResource": {
        "description": "Application environment.",
        "type": "object",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
          }
        ],
        "required": [
          "properties"
        ],
        "properties": {
          "systemData": {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
          },
          "properties": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/EnvironmentProperties"
          }
        }
      },
      "EnvironmentProperties": {
        "description": "Application environment properties",
        "type": "object",
        "required": [
          "compute"
        ],
        "properties": {
          "provisioningState": {
            "readOnly": true,
            "$ref": "global.json#/definitions/ProvisioningState",
            "description": "Provisioning state of the environment at the time the operation was called."
          },
          "compute": {
            "$ref": "#/definitions/EnvironmentCompute"
          },
          "providers": {
              "$ref": "#/definitions/Providers",
              "description": "Cloud providers configuration for the environment."
          },
          "recipes": {
            "additionalProperties": {
              "$ref": "#/definitions/EnvironmentRecipeProperties",
              "description": "Specifies Recipe linked to the Environment."
            },
            "type": "object"
          }
        }
      },
      "Providers": {
        "description": "Cloud providers configuration",
        "properties": {
          "azure": {
            "type":"object",
            "description": "Azure cloud provider configuration",
            "properties" : {
              "scope" : {
                "type":"string",
                "description": "Target scope for Azure resources to be deployed into.  For example: '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup'"
              }
            }
          }
        }
      },
      "EnvironmentRecipeProperties": {
        "description": "Properties of a Recipe linked to an Environment.",
        "properties": {
          "connectorType": {
            "description": "Type of the connector this recipe can be consumed by. For example: 'Applications.Connector/mongoDatabases'",
            "type": "string"
          },
          "templatePath": {
            "description": "Path to the template provided by the recipe. Currently only link to Azure Container Registry is supported.",
            "type": "string"
          }
        },
        "required": [
          "connectorType",
          "templatePath"
        ]
      }
    },
    "parameters": {
      "EnvironmentNameParameter": {
        "name": "environmentName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the environment",
        "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$",
        "maxLength": 63,
        "x-ms-parameter-location": "method"
      }
    }
  }
  