{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Core Management APIs",
    "description": "REST API for Applications.Core Persistent Volume Resource",
    "version": "2022-03-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [{
    "azure_auth": [
      "user_impersonation"
    ]
  }],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{rootScope}/providers/Applications.Core/volumes": {
      "get": {
        "description": "List all volumes in the given scope.",
        "operationId": "Volumes_ListByScope",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusVolumesListByScope": {
            "$ref": "./examples/VolumesListByScope.json"
          }
        },
        "tags": [
          "Volumes"
        ],
        "parameters": [{
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Volumes details.",
            "schema": {
              "$ref": "#/definitions/VolumeResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Core/volumes/{volumeName}": {
      "get": {
        "description": "Gets the properties of an Volume.",
        "operationId": "Volumes_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusVolumesGet": {
            "$ref": "./examples/VolumesGet.json"
          }
        },
        "tags": [
          "Volumes"
        ],
        "parameters": [{
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Volume details.",
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update an Volume.",
        "operationId": "Volumes_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusVolumesPut": {
            "$ref": "./examples/VolumesPut.json"
          }
        },
        "tags": [
          "Volumes"
        ],
        "parameters": [{
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "name": "VolumeResource",
            "description": "Volume details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          },
          "204": {
            "description": "The Volume does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update the properties of an existing Volume.",
        "operationId": "Volumes_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusVolumesPatch": {
            "$ref": "./examples/VolumesPatch.json"
          }
        },
        "tags": [
          "Volumes"
        ],
        "parameters": [{
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          },
          {
            "name": "VolumeResource",
            "description": "Volume details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was updated successfully.",
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          },
          "201": {
            "description": "The resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/VolumeResource"
            }
          },
          "204": {
            "description": "The Volume does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete an Volume.",
        "operationId": "Volumes_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "RadiusVolumesDelete": {
            "$ref": "./examples/VolumesDelete.json"
          }
        },
        "tags": [
          "Volumes"
        ],
        "parameters": [{
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VolumeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Volume was successfully deleted."
          },
          "202": {
            "description": "The Volume will be deleted asynchronously."
          },
          "204": {
            "description": "The Volume does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VolumeResourceList": {
      "description": "The list of Volumes.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Volume.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeResource"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of Volumes list.",
          "type": "string"
        }
      }
    },
    "VolumeResource": {
      "description": "Radius Volume Resource.",
      "type": "object",
      "allOf": [{
        "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
      }],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VolumeProperties"
        }
      }
    },
    "VolumeProperties": {
      "allOf": [{
        "$ref": "global.json#/definitions/BasicResourceProperties"
      }],
      "discriminator": "kind",
      "properties": {
        "kind": {
          "description": "The volume kind",
          "type": "string"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "global.json#/definitions/ProvisioningState",
          "description": "Provisioning state of the Volume at the time the operation was called."
        },
        "application": {
          "type": "string",
          "description": "Fully qualified resource ID for the application that the volume is connected to."
        }
      },
      "required": [
        "kind"
      ],
      "type": "object"
    },
    "CertificateObjectProperties": {
      "properties": {
        "alias": {
          "description": "File name when written to disk.",
          "type": "string"
        },
        "encoding": {
          "description": "Encoding format. Default utf-8",
          "type": "string",
          "enum": [
            "utf-8",
            "hex",
            "base64"
          ],
          "default": "utf-8",
          "x-ms-enum": {
            "name": "encoding",
            "modelAsString": false
          }
        },
        "format": {
          "description": "Certificate format. Default pem",
          "type": "string",
          "enum": [
            "pem",
            "pfx"
          ],
          "default": "pem",
          "x-ms-enum": {
            "name": "format",
            "modelAsString": false
          }
        },
        "name": {
          "description": "The name of the certificate",
          "type": "string"
        },
        "certType": {
          "description": "Certificate object type to be downloaded - the certificate itself, private key or public key of the certificate",
          "type": "string",
          "enum": [
            "certificate",
            "publickey",
            "privatekey"
          ],
          "x-ms-enum": {
            "name": "certType",
            "modelAsString": false
          }
        },
        "version": {
          "description": "Certificate version",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "KeyObjectProperties": {
      "properties": {
        "alias": {
          "description": "File name when written to disk.",
          "type": "string"
        },
        "name": {
          "description": "The name of the key",
          "type": "string"
        },
        "version": {
          "description": "Key version",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SecretObjectProperties": {
      "properties": {
        "alias": {
          "description": "File name when written to disk.",
          "type": "string"
        },
        "encoding": {
          "description": "Encoding format. Default utf-8",
          "type": "string",
          "enum": [
            "utf-8",
            "hex",
            "base64"
          ],
          "default": "utf-8",
          "x-ms-enum": {
            "name": "encoding",
            "modelAsString": false
          }
        },
        "name": {
          "description": "The name of the secret",
          "type": "string"
        },
        "version": {
          "description": "Secret version",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "AzureIdentity": {
      "properties": {
        "kind": {
          "description": "Identity Kind",
          "type": "string",
          "enum": [
            "Workload",
            "UserAssigned"
          ],
          "default": "UserAssigned",
          "x-ms-enum": {
            "name": "AzureIdentityKind",
            "modelAsString": false
          }
        },
        "clientId": {
          "description": "The client ID for workload and user assigned managed identity",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID for workload identity.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "clientId"
      ],
      "type": "object"
    },
    "AzureKeyVaultVolumeProperties": {
      "additionalProperties": false,
      "allOf": [{
        "$ref": "#/definitions/VolumeProperties"
      }],
      "properties": {
        "identity": {
          "description": "The Azure AD identity settings",
          "$ref": "#/definitions/AzureIdentity"
        },
        "certificates": {
          "additionalProperties": {
            "$ref": "#/definitions/CertificateObjectProperties"
          },
          "description": "The KeyVault certificates that this volume exposes",
          "type": "object"
        },
        "keys": {
          "additionalProperties": {
            "$ref": "#/definitions/KeyObjectProperties"
          },
          "description": "The KeyVault keys that this volume exposes",
          "type": "object"
        },
        "resource": {
          "description": "The ID of the keyvault to use for this volume resource",
          "type": "string"
        },
        "secrets": {
          "additionalProperties": {
            "$ref": "#/definitions/SecretObjectProperties"
          },
          "description": "The KeyVault secrets that this volume exposes",
          "type": "object"
        }
      },
      "required": [
        "kind",
        "identity",
        "resource"
      ],
      "type": "object",
      "x-ms-discriminator-value": "azure.com.keyvault"
    }
  },
  "parameters": {
    "VolumeNameParameter": {
      "name": "volumeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Volume.",
      "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}