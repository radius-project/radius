{
  "swagger": "2.0",
  "info": {
    "title": "Applications.Link Management APIs",
    "description": "REST APIs for Applications.Link/mongoDatabases",
    "version": "2022-03-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{rootScope}/providers/Applications.Link/mongoDatabases": {
      "get": {
        "description": "Lists information about all Mongo database resources in the given root scope",
        "operationId": "MongoDatabases_ListByRootScope",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesListByRootScope": {
            "$ref": "./examples/MongoDatabasesListByRootScope.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Mongo database resources",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{rootScope}/providers/Applications.Link/mongoDatabases/{mongoDatabaseName}": {
      "get": {
        "description": "Retrieves information about a Mongo database resource",
        "operationId": "MongoDatabases_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesGet": {
            "$ref": "./examples/MongoDatabasesGet.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Mongo database resource",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates a Mongo database resource",
        "operationId": "MongoDatabases_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesPutResource": {
            "$ref": "./examples/MongoDatabasesPutResource.json"
          },
          "MongoDatabasesPutRecipe": {
            "$ref": "./examples/MongoDatabasesPutRecipe.json"
          },
          "MongoDatabasesPutValues": {
            "$ref": "./examples/MongoDatabasesPutValues.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          },
          {
            "name": "MongoDatabaseParameters",
            "description": "Mongo database create parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Mongo database resource",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "201": {
            "description": "The request was successful, resource will be updated asynchronously",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an existing mongo database resource",
        "operationId": "MongoDatabases_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesDelete": {
            "$ref": "./examples/MongoDatabasesDelete.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Mongo database link was successfully deleted."
          },
          "202": {
            "description": "The Mongo database link will be deleted asynchronously."
          },
          "204": {
            "description": "The Mongo database link does not exist."
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{rootScope}/providers/Applications.Link/mongoDatabases/{mongoDatabaseName}/listSecrets": {
      "post": {
        "description": "Lists secrets values for the specified Mongo database resource",
        "operationId": "MongoDatabases_listSecrets",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesGet": {
            "$ref": "./examples/MongoDatabasesListSecrets.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "global.json#/parameters/RootScopeParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MongoDatabase resource",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseListSecretsResult"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MongoDatabaseList": {
      "description": "Object that includes an array of Mongo database and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Mongo database resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MongoDatabaseResource"
          }
        },
        "nextLink": {
          "description": "The link used to fetch the next page of Mongo database list.",
          "type": "string"
        }
      }
    },
    "MongoDatabaseResource": {
      "description": "MongoDatabase link",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MongoDatabaseProperties"
        }
      }
    },
    "ResourceMongoDatabaseProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/MongoDatabaseProperties"
        }
      ],
      "properties": { 
        "host": {
          "description": "Host name of the target Mongo database",
          "type": "string"
        },
        "port": {
          "description": "Port value of the target Mongo database",
          "type": "integer",
          "example": [
            27017
          ]
        },
        "database": {
          "description": "Database name of the target Mongo database",
          "readOnly": true,
          "type": "string"
        },
        "resource": {
          "description": "Fully qualified resource ID of a supported resource with Mongo API to use for this link",
          "type": "string",
          "example": [
            "account::mongodb.id"
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object",
      "x-ms-discriminator-value": "resource"
    },
    "RecipeMongoDatabaseProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/MongoDatabaseProperties"
        }
      ],
      "properties": { 
        "host": {
          "description": "Host name of the target Mongo database",
          "type": "string"
        },
        "port": {
          "description": "Port value of the target Mongo database",
          "type": "integer",
          "example": [
            27017
          ]
        },
        "database": {
          "description": "Database name of the target Mongo database",
          "readOnly": true,
          "type": "string"
        },
        "recipe": {
          "description": "The recipe used to automatically deploy underlying infrastructure for the mongodatabase link",
          "type": "object",
          "$ref": "global.json#/definitions/Recipe"
        }
      },
      "required": [
        "recipe"
      ],
      "type": "object",
      "x-ms-discriminator-value": "recipe"
    },
    "ValuesMongoDatabaseProperties": {
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/MongoDatabaseProperties"
        }
      ],
      "properties": {
        "host": {
          "description": "Host name of the target Mongo database",
          "type": "string"
        },
        "port": {
          "description": "Port value of the target Mongo database",
          "type": "integer",
          "example": [
            27017
          ]
        },
        "database": {
          "description": "Database name of the target Mongo database",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "host",
        "port"
      ],
      "type": "object",
      "x-ms-discriminator-value": "values"
    },
    "MongoDatabaseProperties": {
      "description": "Mongo database link properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "global.json#/definitions/BasicResourceProperties"
        }
      ],
      "discriminator": "mode",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "global.json#/definitions/ProvisioningState",
          "description": "Provisioning state of the mongo database link at the time the operation was called"
        },
        "mode" : {
          "description": "How to build the Mongo database link. Options are to build automatically via 'recipe' or 'resource', or build manually via 'values'. Selection determines which set of fields to additionally require.",
          "type": "string",
          "enum": [
            "resource",
            "recipe",
            "values"
          ] 
        },
        "secrets": {
          "x-ms-secret": true,
          "type": "object",
          "description": "Secrets values provided for the resource",
          "$ref": "#/definitions/MongoDatabaseSecrets"
        }
      },
      "required": [
        "environment",
        "mode"
      ]
    },
    "MongoDatabaseListSecretsResult": {
      "description": "The secret values for the given Mongo database resource",
      "$ref": "#/definitions/MongoDatabaseSecrets"
    },
    "MongoDatabaseSecrets": {
      "description": "The secret values for the given Mongo database resource",
      "type": "object",
      "properties": {
        "username": {
          "description": "Username to use when connecting to the target Mongo database",
          "type": "string"
        },
        "password": {
          "description": "Password to use when connecting to the target Mongo database",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string used to connect to the target Mongo database",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "MongoDatabaseNameParameter": {
      "description": "The name of the Mongo database link resource",
      "name": "mongoDatabaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}