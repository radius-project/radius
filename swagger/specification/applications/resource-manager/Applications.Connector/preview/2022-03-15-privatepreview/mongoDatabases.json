{
  "swagger": "2.0",
  "info": {
    "title": "Applications Management APIs",
    "description": "REST APIs for Applications.Connector/mongoDatabases",
    "version": "2022-03-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Applications.Connector/mongoDatabases": {
      "get": {
        "description": "Lists information about all mongoDatabases resources in the given subscription",
        "operationId": "MongoDatabases_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesListBySubscription": {
            "$ref": "./examples/MongoDatabasesListBySubscription.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of MongoDatabase resources",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Applications.Connector/mongoDatabases": {
      "get": {
        "description": "Lists information about all mongoDatabases resources in the given subscription and resource group",
        "operationId": "MongoDatabases_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesList": {
            "$ref": "./examples/MongoDatabasesList.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of MongoDatabase resources",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Applications.Connector/mongoDatabases/{mongoDatabaseName}": {
      "get": {
        "description": "Retrieves information about a mongoDatabases resource",
        "operationId": "MongoDatabases_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesGet": {
            "$ref": "./examples/MongoDatabasesGet.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "MongoDatabase resource",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates a MongoDatabase resource",
        "operationId": "MongoDatabases_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesPut": {
            "$ref": "./examples/MongoDatabasesPut.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          },
          {
            "name": "MongoDatabaseParameters",
            "description": "mongoDatabase create parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the mongoDatabase resource",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "201": {
            "description": "The request was successful, resource will be updated asynchronously",
            "schema": {
              "$ref": "#/definitions/MongoDatabaseResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an existing mongoDatabase resource",
        "operationId": "MongoDatabases_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "MongoDatabasesDelete": {
            "$ref": "./examples/MongoDatabasesDelete.json"
          }
        },
        "tags": [
          "MongoDatabases"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MongoDatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDatabase connector was successfully deleted."
          },
          "202": {
            "description": "The MongoDatabase connector will be deleted asynchronously."
          },
          "204": {
            "description": "The MongoDatabase connector does not exist."
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MongoDatabaseList": {
      "description": "Object that includes an array of MongoDatabase and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of MongoDatabase resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MongoDatabaseResource"
          }
        },
        "nextLink": {
          "description": "The link used to fetch the next page of MongoDatabase list.",
          "type": "string"
        }
      }
    },
    "MongoDatabaseResource": {
      "description": "MongoDatabse connector",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MongoDatabaseProperties"
        }
      }
    },
    "MongoDatabaseProperties": {
      "description": "MongoDatabse connector properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "global.json#/definitions/ProvisioningState",
          "description": "Provisioning state of the mongo database connector at the time the operation was called"
        },
        "application": {
          "$ref": "global.json#/definitions/Application",
          "description": "Fully qualified resource ID for the application that the connector is consumed by"
        },
        "fromResource": {
          "$ref": "global.json#/definitions/FromResource",
          "description": "Target resource that the connector binds to"
        },
        "fromValues": {
          "$ref": "global.json#/definitions/SecretsValues",
          "description": "Secret values to connect to the Mongo database"
        }
      }
    }
  },
  "parameters": {
    "MongoDatabaseNameParameter": {
      "description": "The name of the MongoDatabase connector resource",
      "name": "mongoDatabaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]+(-[a-z0-9]+)*",
      "maxLength": 128,
      "x-ms-parameter-location": "method"
    }
  }
}
