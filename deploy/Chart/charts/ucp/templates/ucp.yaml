apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: ucp
    app.kubernetes.io/part-of: radius-control-plane
  name: ucp
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: ucp
  template:
    metadata:
      labels:
        control-plane: ucp
        app.kubernetes.io/part-of: radius-control-plane
{{ if .Values.global.rp.provider.azure.podidentity }}
        aadpodidbinding: "{{ .Values.global.rp.provider.azure.podidentity }}"
{{ end }}
    spec:
      serviceAccountName: ucp
      containers:
      - image: "{{ .Values.global.ucp.image }}:{{ .Values.global.ucp.tag }}"
        envFrom:
        - secretRef: 
            name: ucp-aws-provider-credentials
        env:
        - name: UCP_CONFIG
          value: /etc/config/ucp-config.yaml
        - name: BASE_PATH
          value: '/apis/api.ucp.dev/v1alpha3' # listen for APIService URLs
        - name: TLS_CERT_DIR
          value: '/var/tls/cert'
        - name: PORT
          value: '9443'
        name: ucp
        ports:
        - containerPort: 9443
          name: ucp
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: cert
          mountPath: '/var/tls/cert'
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
      volumes:
        - name: config-volume
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: ucp-config
        - name: cert
          secret:
            secretName: ucp-cert
---
apiVersion: v1
kind: Service
metadata:
  name: ucp
  namespace: "{{ .Release.Namespace }}"
spec:
  ports:
    - port: 443
      name: https
      protocol: TCP
      targetPort: 9443
  selector:
    control-plane: ucp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ucp-config
  namespace: "{{ .Release.Namespace }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
data:
  ucp-config.yaml: |-
{{ .Files.Get "ucp-config.yaml" | indent 4}}
---
apiVersion: v1
kind: Secret
metadata:
  name: ucp-aws-provider-credentials
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: ucp
stringData:
# Configuration for 'AWS' provider functionality
{{ if .Values.global.rp.provider.aws }}
  AWS_ACCESS_KEY_ID: {{ .Values.global.rp.provider.aws.accessKeyId }} 
  AWS_SECRET_ACCESS_KEY: {{ .Values.global.rp.provider.aws.secretAccessKey }}
  AWS_REGION: {{ .Values.global.rp.provider.aws.region }}
{{ end }}
