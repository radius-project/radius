---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  name: recipes.radapp.io
spec:
  group: radapp.io
  names:
    categories:
    - all
    - radius
    kind: Recipe
    listKind: RecipeList
    plural: recipes
    singular: recipe
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Type of resource the recipe should create
      jsonPath: .spec.type
      name: Type
      type: string
    - description: Name of the secret to create
      jsonPath: .spec.secretName
      name: Secret
      type: string
    - description: Status of the resource
      jsonPath: .status.phrase
      name: Status
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Recipe is the Schema for the recipes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecipeSpec defines the desired state of Recipe
            properties:
              secretName:
                description: SecretName is the name of a Kubernetes secret to create
                  once the resource is created.
                type: string
              type:
                description: 'Type is the type of resource to create. eg: ''Applications.Datastores/redisCaches''.'
                type: string
            type: object
          status:
            description: RecipeStatus defines the observed state of Recipe
            properties:
              application:
                description: Application is the resource ID of the application.
                type: string
              environment:
                description: Environment is the resource ID of the environment.
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this Recipe. It corresponds to the Recipe's generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              operation:
                description: Operation is the operation URL of an operation in progress.
                type: string
              phrase:
                description: Phrase indicates the current status of the Recipe.
                type: string
              resource:
                description: Resource is the resource ID of the resource.
                type: string
              scope:
                description: Scope is the resource ID of the scope.
                type: string
              secret:
                description: Secret specifies a reference to the secret being managed
                  by this Recipe.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
