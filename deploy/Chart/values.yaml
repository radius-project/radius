global:
  # Configure global.rootCA.cert to use the intermediate CA cert in Radius containers.
  # Otherwise, Radius containers use the default root CA provided by base OS image.
  rootCA:
    cert: ""
    secretName: "root-ca-cert"
    volumeName: "root-ca-vol"
    mountPath: "/tmp/sslcerts"
    # SSL_CERT_DIR is used to override the default root CA location.
    # Dotnet runtime and Go use this environment variable to load the root CA.
    sslCertDirEnvVar: "SSL_CERT_DIR"

  prometheus:
    enabled: true
    path: "/metrics"
    port: 9090
  #
  # Configure global.zipkin.url to enable distributed trace. Replace the example url
  # below with the environment specific url
  # zipkin:
  #   url: "http://jaeger-collector.radius-monitoring.svc.cluster.local:9411/api/v2/spans"
  #

  # Configure global.azureWorkloadIdentity.enabled=true to enable Azure Workload Identity.
  # Disabled by default.
  azureWorkloadIdentity:
    enabled: false

  # Configure global.aws.irsa.enabled=true to enable AWS IRSA.
  # Disabled by default.
  aws:
    irsa:
      enabled: false

controller:
  image: ghcr.io/radius-project/controller
  # Default tag uses Chart AppVersion.
  # tag: latest
  resources:
    requests:
      memory: "60Mi"
    limits:
      memory: "300Mi"

de:
  image: ghcr.io/radius-project/deployment-engine
  # Default tag uses Chart AppVersion.
  # tag: latest
  resources:
    requests:
      # request memory is the average memory usage + 10% buffer.
      memory: "130Mi"
    limits:
      memory: "300Mi"

ucp:
  image: ghcr.io/radius-project/ucpd
  # Default tag uses Chart AppVersion.
  # tag: latest
  resources:
    requests:
      # request memory is the average memory usage + 10% buffer.
      memory: "60Mi"
    limits:
      memory: "300Mi"

dynamicrp:
  image: ghcr.io/radius-project/dynamic-rp
  # Default tag uses Chart AppVersion.
  # tag: latest
  resources:
    requests:
      # request memory is the average memory usage + 10% buffer.
      memory: "160Mi"
    limits:
      # limit is higher for dynamic-rp because the Terraform execution
      # can spike memory usage.
      memory: "500Mi"
  bicep:
    deleteRetryCount: 20
    deleteRetryDelaySeconds: 60
  terraform:
    path: "/terraform"

rp:
  image: ghcr.io/radius-project/applications-rp
  # Default tag uses Chart AppVersion.
  # tag: latest
  publicEndpointOverride: ""
  resources:
    requests:
      # request memory is the average memory usage + 10% buffer.
      memory: "160Mi"
    limits:
      # limit is higher for applications-rp because the Terraform execution
      # can spike memory usage.
      memory: "500Mi"
  bicep:
    deleteRetryCount: 20
    deleteRetryDelaySeconds: 60
  terraform:
    path: "/terraform"

dashboard:
  enabled: true
  containerPort: 7007
  image: ghcr.io/radius-project/dashboard
  # Default tag uses Chart AppVersion.
  # tag: latest
  resources:
    requests:
      memory: "60Mi"
    limits:
      memory: "300Mi"

database:
  image: ghcr.io/radius-project/mirror/postgres
  tag: latest
  storageClassName: "standard" # set to the storage class name if required
  # Minimum resource requirements, may need to revisit and scale.
  storageSize: "1Gi"
  resources:
    requests:
      cpu: "2"
      memory: "512Mi"
    limits:
      cpu: "2"
      memory: "1024Mi"