{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace "webhook-cert"}}
{{- $existingWebhook := lookup "admissionregistration.k8s.io/v1" "ValidatingWebhookConfiguration" .Release.Namespace "recipe-webhook"}}
{{- $ca := genCA "webhook-ca" 3650 }}
{{- $cn := printf "webhook" }}
{{- $altName1 := printf "recipe-webhook.%s" .Release.Namespace }}
{{- $altName2 := printf "recipe-webhook.%s.svc" .Release.Namespace }}
{{- $altName3 := printf "recipe-webhook.%s.svc.cluster" .Release.Namespace }}
{{- $altName4 := printf "recipe-webhook.%s.svc.cluster.local" .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2 $altName3 $altName4) 3650 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: webhook-cert
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: recipe-webhook
    app.kubernetes.io/part-of: radius
data:
  {{ if $existingSecret }}tls.crt: {{ index $existingSecret.data "tls.crt" }}
  {{ else }}tls.crt: {{ b64enc $cert.Cert }}
  {{ end }}

  {{ if $existingSecret }}tls.key: {{ index $existingSecret.data "tls.key" }}
  {{ else }}tls.key: {{ b64enc $cert.Key }}
  {{ end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
    name: recipe-webhook
webhooks:
    - name: recipe-webhook
        objectSelector:
          matchLabels:
            radapp.io/enabled: "true"
        clientConfig:
            service:
                name: recipe-webhook-service
                namespace: "{{ .Release.Namespace }}"
                path: /validate
            caBundle: {{ b64enc $ca.Cert }}
        rules:
            - apiGroups:
                    - "radapp.io"
                apiVersions:
                    - v1
                operations:
                    - CREATE
                    - UPDATE
                resources:
                    - pods
