{{- $appversion := include "radius.versiontag" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: "{{ .Release.Namespace }}"
  labels:
    control-plane: controller
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: radius
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
  template:
    metadata:
      labels:
        control-plane: controller
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: radius
      {{- if eq .Values.global.prometheus.enabled true }}
      annotations:
        prometheus.io/path: "{{ .Values.global.prometheus.path }}"
        prometheus.io/port: "{{ .Values.global.prometheus.port }}"
        prometheus.io/scrape: "{{ .Values.global.prometheus.enabled }}"
      {{- end }}
    spec:
      serviceAccountName: controller
      containers:
      - name: controller
        image: "{{ .Values.controller.image }}:{{ .Values.controller.tag | default $appversion }}"
        imagePullPolicy: 'Always'
        args: 
        - '--config-file'
        - '/etc/config/controller-config.yaml'
        env:
        - name: TLS_CERT_DIR
          value: '/var/tls/cert'
        - name: PORT
          value: '9443'
        {{- if .Values.global.rootCA.cert }}
        # This is the environment variable to set the path to the intermediate root CA for outgoing connections.
        - name: {{ .Values.global.rootCA.sslCertDirEnvVar }}
          value: {{ .Values.global.rootCA.mountPath }}
        {{- end}}
        ports:
        - containerPort: 9443
          name: controller
          protocol: TCP
        {{- if eq .Values.global.prometheus.enabled true }}
        - containerPort: {{ .Values.global.prometheus.port }}
          name: metrics
          protocol: TCP
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
        {{- if .Values.controller.resources }}
        resources:{{ toYaml .Values.controller.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: cert
          mountPath: '/var/tls/cert'
          readOnly: true
        {{- if .Values.global.rootCA.cert }}
        - name: {{ .Values.global.rootCA.volumeName }}
          mountPath: {{ .Values.global.rootCA.mountPath }}
          readOnly: true
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: controller-config
        - name: cert
          secret:
            secretName: controller-cert
        {{- if .Values.global.rootCA.cert }}
        - name: {{ .Values.global.rootCA.volumeName }}
          secret:
            secretName: {{ .Values.global.rootCA.secretName }}
        {{- end }}
