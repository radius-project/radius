{{- $appversion := include "radius.versiontag" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: appcore-rp
    app.kubernetes.io/name: appcore-rp
    app.kubernetes.io/part-of: radius
  name: appcore-rp
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
     app.kubernetes.io/name: appcore-rp
  template:
    metadata:
      labels:
        control-plane: appcore-rp
        app.kubernetes.io/name: appcore-rp
        app.kubernetes.io/part-of: radius
      {{ if eq .Values.global.prometheus.enabled true }}
      annotations:
        prometheus.io/path: "{{ .Values.global.prometheus.path }}"
        prometheus.io/port: "{{ .Values.global.prometheus.port }}"
        prometheus.io/scrape: "{{ .Values.global.prometheus.enabled }}"
      {{ end }}
    spec:
      serviceAccountName: appcore-rp
      containers:
      - name: appcore-rp
        image: "{{ .Values.rp.image }}:{{ .Values.rp.tag | default $appversion }}"
        args:
        - --config-file=/etc/config/radius-self-host.yaml
        - --run-link
        - --link-config=/etc/config/link-self-host.yaml
        env:
        - name: SKIP_ARM
          value: 'false'
        - name: ARM_AUTH_METHOD
          value: 'UCPCredential'
        - name: RADIUS_ENV
          value: 'self-hosted'
        - name: K8S_CLUSTER
          value: 'true'
        {{ if .Values.publicEndpointOverride}}
        - name: RADIUS_PUBLIC_ENDPOINT_OVERRIDE
          value: {{ .Values.publicEndpointOverride }}
        {{ end }}
        ports:
        - containerPort: 5443
          name: appcore-rp
          protocol: TCP
        - containerPort: 5444
          name: applink-rp
          protocol: TCP
        {{ if eq .Values.global.prometheus.enabled true }}
        - containerPort: {{ .Values.global.prometheus.port }}
          name: metrics
          protocol: TCP
        {{ end }}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        securityContext:
          allowPrivilegeEscalation: false
        {{- if .Values.rp.resources }}
        resources:{{ toYaml .Values.rp.resources | nindent 10 }}
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: appcore-rp-config
