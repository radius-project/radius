{{- $appversion := include "radius.versiontag" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bicep-de
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: bicep-de
    app.kubernetes.io/name: bicep-de
    app.kubernetes.io/part-of: radius
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bicep-de
  template:
    metadata:
      labels:
        control-plane: bicep-de
        app.kubernetes.io/name: bicep-de
        app.kubernetes.io/part-of: radius
        {{- if eq .Values.global.azureWorkloadIdentity.enabled true }}
        azure.workload.identity/use: "true"
        {{- end }}
      {{- if eq .Values.global.prometheus.enabled true }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "6443"
        prometheus.io/scrape: "true"
      {{- end }}
    spec:
      serviceAccountName: bicep-de
      {{- if .Values.global.appendRootCA.cert }}
      initContainers:
      - name: append-root-ca
        image: "{{ .Values.rp.image }}:{{ .Values.rp.tag | default $appversion }}"
        command:
        - sh
        - -c
        - |
          mkdir -p /etc/radius-ssl/certs
          cp /etc/ssl/certs/* /etc/radius-ssl/certs/
          cat >> /etc/radius-ssl/certs/ca-certificates.crt <<'CERTEOF'
        {{ .Values.global.appendRootCA.cert | nindent 10 }}
          CERTEOF
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/radius-ssl/certs
      {{- end }}
      containers:
      - name: de
        image: {{ .Values.de.image }}:{{ .Values.de.tag | default $appversion }}
        args:
        - --kubernetes=true
        volumeMounts:
        - name: appsettings-vol
          mountPath: /app/appsettings.Production.json
          subPath: appsettings.Production.json
        {{- if .Values.global.appendRootCA.cert }}
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        {{- end }}
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: SKIP_ARM
          value: "false"
        - name: ARM_AUTH_METHOD
          value: "UCPCredential"
        - name: ASPNETCORE_URLS
          value: http://+:6443
        - name: kubernetes
          value: "true"
        - name: RADIUSBACKENDURL
          value: https://ucp.radius-system:443/apis/api.ucp.dev/v1alpha3
        ports:
        - containerPort: 6443
          name: bicep-de-api
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
        {{- if .Values.de.resources }}
        resources:{{ toYaml .Values.de.resources | nindent 10 }}
        {{- end }}
      volumes:
        - name: appsettings-vol
          configMap:
            name: bicep-de-config
        {{- if .Values.global.appendRootCA.cert }}
        - name: ssl-certs
          emptyDir: {}
        {{- end }}
      terminationGracePeriodSeconds: 10
