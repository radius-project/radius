{{- if .Values.preUpgrade.enabled }}
{{- $appversion := include "radius.versiontag" . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-upgrade
  namespace: "{{ .Release.Namespace }}"
  labels:
    control-plane: pre-upgrade
    app.kubernetes.io/name: pre-upgrade
    app.kubernetes.io/part-of: radius
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.preUpgrade.backoffLimit }}
  ttlSecondsAfterFinished: {{ .Values.preUpgrade.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        control-plane: pre-upgrade
        app.kubernetes.io/name: pre-upgrade
        app.kubernetes.io/part-of: radius
    spec:
      restartPolicy: Never
      serviceAccountName: pre-upgrade
      containers:
      - name: pre-upgrade
        image: "{{ .Values.preUpgrade.image }}:{{ .Values.preUpgrade.tag | default $appversion }}"
        imagePullPolicy: 'Always'
        env:
        - name: TARGET_VERSION
          value: "{{ .Chart.AppVersion }}"
        - name: ENABLED_CHECKS
          value: "{{- $checks := list -}}
          {{- if .Values.preUpgrade.checks.version -}}
            {{- $checks = append $checks "version" -}}
          {{- end -}}
          {{- join "," $checks -}}"
        resources:
          {{- toYaml .Values.preUpgrade.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
{{- end }}