{{- if and .Values.preUpgrade.enabled .Values.preUpgrade.serviceAccount.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: radius-pre-upgrade
  labels:
    app.kubernetes.io/name: radius-pre-upgrade
    app.kubernetes.io/part-of: radius
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
# Permissions for Kubernetes Resource Check
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["list", "get"]
  resourceNames: []
# Permissions for Radius Installation Check (Helm storage access)
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["list", "get"]
  resourceNames: []
# Permissions for Custom Resource Definition Check
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["list", "get"]
# Permissions for Active Workload Health Check
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["list", "get"]
# Basic cluster info access
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get"]
  resourceNames: ["radius-system"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: radius-pre-upgrade
  labels:
    app.kubernetes.io/name: radius-pre-upgrade
    app.kubernetes.io/part-of: radius
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: radius-pre-upgrade
subjects:
- kind: ServiceAccount
  name: radius-pre-upgrade
  namespace: "{{ .Release.Namespace }}"
{{- end }}