-- 'resources' is used to store all of our resources. See comments below for an explanation of the columns.
CREATE TABLE resources (
    -- example: "/planes/radius/local/resourceGroups/rg1/providers/Applications.Core/applications/my-app"
    --
    -- We use columns to break out the most important components of the resource id for optimal querying.
    --
    -- Since resource ids are case-insensitive we canonicalize these columns to lowercase.
    -- We store the original resource id with the original casing so users can work with their preferred
    -- naming/casing conventions.
    --
    -- We ensure a leading and trailing slash on the components of the resource id for ease of comparison.
    --
    -- id -> "/planes/radius/local/resourcegroups/rg1/providers/applications.core/applications/my-app/"
    -- resource_type -> "/applications.core/applications/"
    -- root_scope -> "/planes/radius/local/resourcegroups/rg1/"
    -- routing_scope -> "/applications.core/applications/my-app/"

    -- resource id used as key.
    id TEXT PRIMARY KEY NOT NULL,

    -- original_id is used to store the original id of the resource before any normalization occurs.
    -- This is provided for compatability with the existing design of the store API, and can be removed
    -- in the future.
    original_id TEXT NOT NULL,

    -- resource type by queries to filter by type.
    resource_type TEXT NOT NULL,

    -- root_scope used by queries to list resources by their scope.
    root_scope TEXT NOT NULL,

    -- routing_scope used by queries to list resources when they are child resources.
    routing_scope TEXT NOT NULL,
    
    -- etag used for optimistic concurrency control.
    etag TEXT NOT NULL,

    -- timestamp is used to implement cursor-based pagination (see below).
    created_at TIMESTAMP (6) WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,

    -- resource_data stores the resource data.
    resource_data JSONB NOT NULL
);

-- idx_resource_query is an index for improving performance of queries.
--
-- Queries always list resources by their:
--  - resource_type, and root_scope OR
--  - resource_type, root_scope, and (LIKE) routing_scope
--
-- eg: "find all Applications.Core/applications resources in /planes/radius/local/resourceGroups/my-rg"
--
-- > "resource_type" = "/applications.core/applications/"
-- > "root_scope" = "/planes/radius/local/resourcegroups/my-rg"
-- > "routing_scope" = NULL
--
-- 'created_at' is used with ORDER BY to sort the output, so we can implement cursor-based pagination.
--
-- 1) For the initial query, we won't specify a cursor value.
-- 2) For the next query, we will specify the cursor value as the last created_at value from the previous
--    query, which allows us to skip the records that were already returned.
--
-- The index only contains resource_type and root_scope because these are usually specified exactly.
-- We don't really benefit from routing_scope being in the index because it's always used with LIKE.
-- We don't benefit from created_at being in the index because it's used for sorting.
CREATE INDEX idx_resource_query ON resources (resource_type, root_scope);
