{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "defaultValue": "[format('radius-aks-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the AKS cluster"
      }
    },
    "aksIdentityName": {
      "type": "string",
      "defaultValue": "[format('radius-aks-id-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the managed identity assigned to the AKS cluster control-plane"
      }
    },
    "rpIdentityName": {
      "type": "string",
      "defaultValue": "[format('radius-rp-id-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the managed identity assigned to the Radius RP"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "rad-environment": true
      },
      "metadata": {
        "description": "The tags to apply to each resource"
      }
    },
    "logAnalyticsWorkspaceID": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ARM resource ID of the log analytics workspace where the Radius Resource Provider logs will be redirected to."
      }
    },
    "registryName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional ACR registry name"
      }
    }
  },
  "variables": {
    "addonsWithLogAnalytics": {
      "azureKeyvaultSecretsProvider": {
        "config": {
          "enableSecretRotation": "true"
        },
        "enabled": true
      },
      "omsagent": {
        "config": {
          "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsWorkspaceID')]"
        },
        "enabled": true
      }
    },
    "addonsWithoutLogAnalytics": {
      "azureKeyvaultSecretsProvider": {
        "config": {
          "enableSecretRotation": "true"
        },
        "enabled": true
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2021-08-01",
      "name": "[parameters('clusterName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksIdentityName')))]": {}
        }
      },
      "properties": {
        "addonProfiles": "[if(empty(parameters('logAnalyticsWorkspaceID')), variables('addonsWithoutLogAnalytics'), variables('addonsWithLogAnalytics'))]",
        "agentPoolProfiles": [
          {
            "enableAutoScaling": true,
            "count": 2,
            "minCount": 2,
            "maxCount": 5,
            "mode": "System",
            "name": "agentpool",
            "osDiskSizeGB": 0,
            "vmSize": "Standard_B2ms"
          }
        ],
        "dnsPrefix": "[parameters('clusterName')]",
        "enableRBAC": true,
        "networkProfile": {
          "networkPlugin": "azure"
        },
        "podIdentityProfile": {
          "enabled": true,
          "userAssignedIdentities": [
            {
              "identity": {
                "clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))).clientId]",
                "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))).principalId]",
                "resourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))]"
              },
              "name": "radius",
              "namespace": "radius-system"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksIdentityName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('aksIdentityName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]"
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('rpIdentityName')]",
      "location": "[resourceGroup().location]",
      "tags": "[parameters('resourceTags')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid('rad-aks-', parameters('clusterName'), resourceGroup().id)]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksIdentityName'))).principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid('rad-rp-', parameters('clusterName'), resourceGroup().id)]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))).principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('rpIdentityName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('registryName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('rad-registry-{0}', uniqueString(resourceGroup().id))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "registryName": {
            "value": "[parameters('registryName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "clusterName": {
              "type": "string",
              "metadata": {
                "description": "The name of the AKS cluster"
              }
            },
            "registryName": {
              "type": "string",
              "metadata": {
                "description": "ACR registry name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
              "name": "[guid('rad-kubelet-', parameters('clusterName'), resourceGroup().id)]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2021-08-01').identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
      ]
    }
  ],
  "outputs": {
    "clusterName": {
      "type": "string",
      "value": "[parameters('clusterName')]"
    }
  }
}
